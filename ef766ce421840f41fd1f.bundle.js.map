{"version":3,"file":"ef766ce421840f41fd1f.bundle.js","mappings":"iHAAe,SAASA,EAAaC,EAAUC,GAC7C,GAAIA,EAAKC,OAASF,EAChB,MAAM,IAAIG,UAAUH,EAAW,aAAeA,EAAW,EAAI,IAAM,IAAM,uBAAyBC,EAAKC,OAAS,Y,8GCuBrG,SAASE,EAASC,IAC/BN,EAAAA,EAAAA,GAAa,EAAGO,WAChB,IAAIC,GAAOC,EAAAA,EAAAA,GAAOH,GAElB,OADAE,EAAKE,SAAS,GAAI,GAAI,GAAI,KACnBF,I,4ECJM,SAASG,EAAUC,EAAeC,IAC/Cb,EAAAA,EAAAA,GAAa,EAAGO,WAChB,IAAIO,GAAqBC,EAAAA,EAAAA,GAAWH,GAChCI,GAAsBD,EAAAA,EAAAA,GAAWF,GACrC,OAAOC,EAAmBG,YAAcD,EAAoBC,Y,6ECJ/C,SAASF,EAAWT,IACjCN,EAAAA,EAAAA,GAAa,EAAGO,WAChB,IAAIC,GAAOC,EAAAA,EAAAA,GAAOH,GAElB,OADAE,EAAKE,SAAS,EAAG,EAAG,EAAG,GAChBF,I,mECGM,SAASC,EAAOS,IAC7BlB,EAAAA,EAAAA,GAAa,EAAGO,WAChB,IAAIY,EAASC,OAAOC,UAAUC,SAASC,KAAKL,GAE5C,OAAIA,aAAoBM,MAA4B,iBAAbN,GAAoC,kBAAXC,EAEvD,IAAIK,KAAKN,EAASD,WACI,iBAAbC,GAAoC,oBAAXC,EAClC,IAAIK,KAAKN,IAES,iBAAbA,GAAoC,oBAAXC,GAAoD,oBAAZM,UAE3EA,QAAQC,KAAK,oJAEbD,QAAQC,MAAK,IAAIC,OAAQC,QAGpB,IAAIJ,KAAKK,Q,iFChDpB,I,oECaM,MAAOC,UAA+BC,YAoBxCC,cACIC,QALI,KAAAC,0BAA4B,IAAIC,EAAA,EAChC,KAAAC,UAAW,EAOnBC,YAAYC,GACRC,KAAKD,eAAiBA,EACtBC,KAAKC,MAAQF,EAAeE,MAC5BD,KAAKE,sBAAuB,OAA4BH,GACxDC,KAAKG,wBAAyB,QAA8BJ,GAGhEK,oBACSJ,KAAKH,WACNG,KAAKH,UAAW,EAChBG,KAAKK,UD/CN,yxBCgDCL,KAAKM,YAAcN,KAAKO,cAAc,6BACtCP,KAAKQ,OAASR,KAAKO,cAAcE,EAAA,GACjCT,KAAKQ,OAAOV,YAAYE,KAAKD,gBAC7BC,KAAKU,uBAAyBV,KAAKO,cAAcI,EAAA,GACjDX,KAAKY,WAAaZ,KAAKO,cAAc,8BACrCP,KAAKa,eAAiBb,KAAKO,cAAc,8BACzCP,KAAKc,cAAgBd,KAAKO,cAAc,gCACxCP,KAAKe,UAAYf,KAAKO,cAAc,eACpCP,KAAKgB,cAAgBhB,KAAKO,cAAc,yCAE5CP,KAAKiB,0BAA4BjB,KAAKC,MAAMiB,UAAU,iBAAiBC,GAAKnB,KAAKoB,gBAAgBD,KACjGnB,KAAKqB,kCAAoCrB,KAAKC,MAAMiB,UAAU,2BAA2BC,GAAKnB,KAAKsB,+BAA+BH,KAClInB,KAAKQ,OAAOe,iBAAiB,oBAAqBC,IAC9CxB,KAAKG,uBAAuBsB,sCAAsCD,EAAEE,WAExE1B,KAAKG,uBAAuBwB,+BAC5B,EAAAC,EAAA,GAAa,CAAC5B,KAAKM,aAAcN,KAAKE,sBACtCF,KAAKoB,gBAAgBpB,KAAKC,MAAM4B,OAChC7B,KAAK8B,kBAAoB,IAAM9B,KAAK+B,OACpC/B,KAAKY,WAAWW,iBAAiB,QAASvB,KAAK8B,mBAC/C9B,KAAKU,uBAAuBa,iBAAiB,kBAAmBS,GAAoBhC,KAAKiC,eAAeD,EAAGN,UAGnF,qBAACQ,GACzB,UACUlC,KAAKL,0BAA0BwC,QAAQ,KAEjD,MAAOC,IAGPpC,KAAKG,uBAAuBkC,2BAA2BrC,KAAKsC,eAAgBJ,GAExEZ,+BAA+BH,G,OACN,QAAzB,EAAAA,EAAEoB,+BAAuB,eAAED,iBAAkBtC,KAAKsC,eAClDtC,KAAKU,uBAAuB6B,wBAA0BpB,EAAEoB,wBAAwBC,YAAYC,MAAM,EAAG,IAGrGzC,KAAKU,uBAAuB6B,wBAA0B,GAI5C,aACd,GAAIvC,KAAKU,uBAAuBgC,WAAY,CACxC,IAAIC,EAAO3C,KAAKU,uBAAuBkC,gBACjC5C,KAAKG,uBAAuB0C,qBAAqB7C,KAAKsC,eAAgBK,SACtE3C,KAAKE,qBAAqB4C,yBAAyB9C,KAAKsC,gBAAgB,QAG9EtC,KAAKgB,cAAc+B,OAAO,CAAEC,IAAK,EAAGC,SAAU,WAI9C7B,gBAAgBD,GACpB,GAAIA,EAAE+B,cAAcC,qBAAsB,CACtC,IAAIC,EAAKjC,EAAE+B,cAAcA,cAAc/B,EAAE+B,cAAcC,sBACvDnD,KAAKM,YAAY+C,KAAOlC,EAAE+B,cAAcC,qBAAhB,0BAA0DC,EAAGE,mBAAsB,KAC3GtD,KAAKU,uBAAuB6C,SAAWH,EAAGG,SAC1CvD,KAAKa,eAAe2C,MAAMC,QAA6B,GAAnBL,EAAGM,iBAA+C,OAAS,OAC/F1D,KAAKc,cAAc0C,MAAMC,QAA6B,GAAnBL,EAAGM,iBAA+C,OAAS,OAC9F1D,KAAKe,UAAU4C,OAA4B,GAAnBP,EAAGM,iBAE/B1D,KAAKsC,eAAiBnB,EAAE+B,cAAcC,qBAG1CS,uBACI5D,KAAKiB,4BACLjB,KAAKqB,oCACLrB,KAAKY,WAAWiD,oBAAoB,QAAS7D,KAAK8B,oBAI1DgC,eAAeC,OAAO,2BAA4BxE,I,gBCtH5C,MAAOyE,UAAgBxE,YAEzBC,cACIC,QACiBM,KAAKiE,aAAa,CAAEC,KAAM,SAChC7D,UCNR,8gBDSPD,qBAIAwD,yBAKJE,eAAeC,OAAO,cAAeC,I,6DEnB/B,MAAOpE,EAETH,eAGQ0E,QAAQC,GACZ,OAAO,IAAIC,SAASC,IAChBC,YAAW,KACPD,MACDF,MAIHI,UACJ,IAAIC,EAAS,CACTC,SAAS,EACTC,QAAwB,MAExBA,EAAU,IAAIN,SAAc,CAACC,EAASM,KACtC5E,KAAK6E,MAAQ,KACTJ,EAAOC,SAAU,EACjBE,QAIR,OADAH,EAAOE,QAAUA,EACVF,EAGE,cAACL,GACNpE,KAAK6E,OACL7E,KAAK6E,QAET,IAAIJ,EAASzE,KAAKwE,UAClB,UACUH,QAAQS,KAAK,CAAC9E,KAAKmE,QAAQC,GAAKK,EAAOE,UAEjD,MAAMvC,GACF,MAAM,IAAIhD,MAAM,e,qBCpCpB,EAAQ,KAIhB2F,CAAE,CAAEC,OAAQ,MAAOC,OAAO,EAAMC,YAAY,GAAQ,CAClDC,OAAQ,WACN,OAAOC,IAAItG,UAAUC,SAASC,KAAKgB","sources":["webpack://kontokorrent/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/endOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/isSameDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/toDate/index.js","webpack://kontokorrent/./src/components/BezahlungEintragenPage/BezahlungEintragenPage.html","webpack://kontokorrent/./src/components/BezahlungEintragenPage/BezahlungEintragenPage.ts","webpack://kontokorrent/./src/components/Spinner/Spinner.ts","webpack://kontokorrent/./src/components/Spinner/Spinner.html","webpack://kontokorrent/./src/utils/Debouncer.ts","webpack://kontokorrent/./node_modules/core-js/modules/web.url.to-json.js"],"sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","// Module\nvar code = \"<app-bar></app-bar> <div id=\\\"bezahlung-eintragen__edit\\\" class=\\\"bezahlung-eintragen__edit\\\"> <div class=\\\"bezahlung-eintragen-page-menu\\\"> <a id=\\\"zurueck-zum-kontokorrent\\\" class=\\\"button\\\"> <span class=\\\"material-icons\\\"> arrow_back </span> zurück </a> <button class=\\\"button\\\" title=\\\"speichern\\\" id=\\\"bezahlung-eintragen__save\\\"> <span class=\\\"material-icons\\\"> save </span> speichern </button> </div> <div class=\\\"bezahlung-eintragen__form-container\\\" id=\\\"bezahlung-eintragen__form-container\\\"> <div id=\\\"save-error\\\" class=\\\"alert alert--error\\\" hidden>Zahlung konnte nicht gespeichert werden. </div> <bezahlung-eintragen-form> </bezahlung-eintragen-form> </div> </div> <div id=\\\"bezahlung-eintragen__saving\\\" class=\\\"bezahlung-eintragen__saving\\\"> <app-spinner></app-spinner> <span>wird gespeichert</span> </div>\";\n// Exports\nexport default code;","import template from \"./BezahlungEintragenPage.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport \"./BezahlungEintragenPage.scss\";\nimport { BezahlungActionCreator, bezahlungActionCreatorFactory } from \"../../state/actions/BezahlungActionCreator\";\nimport { RequestStatus, State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\nimport \"../BezahlungEintragenForm/BezahlungEintragenForm\";\nimport { BezahlungEintragenForm, BezahlungEintragenFormTagName } from \"../BezahlungEintragenForm/BezahlungEintragenForm\";\nimport { Debouncer } from \"../../utils/Debouncer\";\nimport \"../Spinner/Spinner\";\n\nexport class BezahlungEintragenPage extends HTMLElement {\n    private store: Store;\n    private kontokorrentsSubscription: () => void;\n    private routingActionCreator: RoutingActionCreator;\n    private appBar: AppBar;\n    private bezahlungActionCreator: BezahlungActionCreator;\n    private zurueckLink: HTMLAnchorElement;\n    private bezahlungEintragenForm: BezahlungEintragenForm;\n    private saveButton: HTMLButtonElement;\n    private saveEventListener: () => void;\n    private kontokorrentId: string;\n    private editingSection: HTMLDivElement;\n    private savingSection: HTMLDivElement;\n    private saveError: HTMLDivElement;\n    private formContainer: HTMLDivElement;\n    private beschreibungVorschlagSubscription: () => void;\n    private betreffVorschlagDebouncer = new Debouncer();\n    private rendered = false;\n    private serviceLocator: ServiceLocator;\n\n    constructor() {\n        super();\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.serviceLocator = serviceLocator;\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.bezahlungActionCreator = bezahlungActionCreatorFactory(serviceLocator);\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.zurueckLink = this.querySelector(\"#zurueck-zum-kontokorrent\");\n            this.appBar = this.querySelector(AppBarTagName);\n            this.appBar.addServices(this.serviceLocator);\n            this.bezahlungEintragenForm = this.querySelector(BezahlungEintragenFormTagName);\n            this.saveButton = this.querySelector(\"#bezahlung-eintragen__save\");\n            this.editingSection = this.querySelector(\"#bezahlung-eintragen__edit\");\n            this.savingSection = this.querySelector(\"#bezahlung-eintragen__saving\");\n            this.saveError = this.querySelector(\"#save-error\");\n            this.formContainer = this.querySelector(\"#bezahlung-eintragen__form-container\");\n        }\n        this.kontokorrentsSubscription = this.store.subscribe(\"kontokorrents\", s => this.applyStoreState(s));\n        this.beschreibungVorschlagSubscription = this.store.subscribe(\"beschreibungVorschlaege\", s => this.beschreibungVorschlaegeChanged(s));\n        this.appBar.addEventListener(\"gotokontokorrent\", (e: CustomEvent) => {\n            this.bezahlungActionCreator.bezahlungEintragenKontokorrentChanged(e.detail);\n        });\n        this.bezahlungActionCreator.bezahlungEintragenGeoeffnet();\n        convertLinks([this.zurueckLink], this.routingActionCreator);\n        this.applyStoreState(this.store.state);\n        this.saveEventListener = () => this.save();\n        this.saveButton.addEventListener(\"click\", this.saveEventListener);\n        this.bezahlungEintragenForm.addEventListener(\"betreffChanged\", (ev: CustomEvent) => this.betreffChanged(ev.detail));\n    }\n\n    private async betreffChanged(betreff: string) {\n        try {\n            await this.betreffVorschlagDebouncer.trigger(200);\n        }\n        catch (err) {\n            //aborted\n        }\n        this.bezahlungActionCreator.getBeschreibungVorschlaege(this.kontokorrentId, betreff);\n    }\n    private beschreibungVorschlaegeChanged(s: State): void {\n        if (s.beschreibungVorschlaege?.kontokorrentId == this.kontokorrentId) {\n            this.bezahlungEintragenForm.beschreibungVorschlaege = s.beschreibungVorschlaege.vorschlaege.slice(0, 10);\n        }\n        else {\n            this.bezahlungEintragenForm.beschreibungVorschlaege = [];\n        }\n    }\n\n    private async save() {\n        if (this.bezahlungEintragenForm.validate()) {\n            let data = this.bezahlungEintragenForm.getData();\n            await this.bezahlungActionCreator.bezahlungHinzufuegen(this.kontokorrentId, data);\n            await this.routingActionCreator.navigateKontokorrentById(this.kontokorrentId, true);\n        }\n        else {\n            this.formContainer.scroll({ top: 0, behavior: \"smooth\" });\n        }\n    }\n\n    private applyStoreState(s: State) {\n        if (s.kontokorrents.activeKontokorrentId) {\n            let kk = s.kontokorrents.kontokorrents[s.kontokorrents.activeKontokorrentId];\n            this.zurueckLink.href = s.kontokorrents.activeKontokorrentId ? `kontokorrents/o/${kk.oeffentlicherName}` : null;\n            this.bezahlungEintragenForm.personen = kk.personen;\n            this.editingSection.style.display = kk.bezahlungAnlegen == RequestStatus.InProgress ? \"none\" : \"flex\";\n            this.savingSection.style.display = kk.bezahlungAnlegen != RequestStatus.InProgress ? \"none\" : \"flex\";\n            this.saveError.hidden = kk.bezahlungAnlegen != RequestStatus.Failed;\n        }\n        this.kontokorrentId = s.kontokorrents.activeKontokorrentId;\n    }\n\n    disconnectedCallback() {\n        this.kontokorrentsSubscription();\n        this.beschreibungVorschlagSubscription();\n        this.saveButton.removeEventListener(\"click\", this.saveEventListener);\n    }\n}\n\ncustomElements.define('bezahlung-eintragen-page', BezahlungEintragenPage);\n","import template from \"./Spinner.html\";\n\nexport class Spinner extends HTMLElement {\n\n    constructor() {\n        super();\n        let shadowRoot = this.attachShadow({ mode: \"open\" });\n        shadowRoot.innerHTML = template;\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n}\n\ncustomElements.define(\"app-spinner\", Spinner);\n","// Module\nvar code = \"<style>.spinner{animation:rotate 2s linear infinite;height:100%}.spinner .path{stroke:var(--spinner-color);stroke-linecap:round;animation:dash 1.5s ease-in-out infinite}@keyframes rotate{100%{transform:rotate(360deg)}}@keyframes dash{0%{stroke-dasharray:1,150;stroke-dashoffset:0}50%{stroke-dasharray:90,150;stroke-dashoffset:-35}100%{stroke-dasharray:90,150;stroke-dashoffset:-124}}</style> <svg class=\\\"spinner\\\" viewBox=\\\"0 0 50 50\\\"> <circle class=\\\"path\\\" cx=\\\"25\\\" cy=\\\"25\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"4\\\"></circle> </svg>\";\n// Exports\nexport default code;","export class Debouncer {\n    private abort: () => void;\n    constructor() {\n    }\n\n    private timeout(ms: number): Promise<void> {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve();\n            }, ms);\n        });\n    }\n\n    private aborter() {\n        let status = {\n            aborted: false,\n            promise: <Promise<void>>null\n        };\n        let promise = new Promise<void>((resolve, reject) => {\n            this.abort = () => {\n                status.aborted = false;\n                reject();\n            };\n        });\n        status.promise = promise;\n        return status;\n    }\n\n    async trigger(ms: number): Promise<void> {\n        if (this.abort) {\n            this.abort();\n        }\n        let status = this.aborter();\n        try {\n            await Promise.race([this.timeout(ms), status.promise]);\n        }\n        catch(err) {\n            throw new Error(\"aborted\");\n        }\n    }\n}\n","'use strict';\nvar $ = require('../internals/export');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return URL.prototype.toString.call(this);\n  }\n});\n"],"names":["requiredArgs","required","args","length","TypeError","endOfDay","dirtyDate","arguments","date","toDate","setHours","isSameDay","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","startOfDay","dateRightStartOfDay","getTime","argument","argStr","Object","prototype","toString","call","Date","console","warn","Error","stack","NaN","BezahlungEintragenPage","HTMLElement","constructor","super","betreffVorschlagDebouncer","Debouncer","rendered","addServices","serviceLocator","this","store","routingActionCreator","bezahlungActionCreator","connectedCallback","innerHTML","zurueckLink","querySelector","appBar","AppBar","bezahlungEintragenForm","BezahlungEintragenForm","saveButton","editingSection","savingSection","saveError","formContainer","kontokorrentsSubscription","subscribe","s","applyStoreState","beschreibungVorschlagSubscription","beschreibungVorschlaegeChanged","addEventListener","e","bezahlungEintragenKontokorrentChanged","detail","bezahlungEintragenGeoeffnet","convertLinks","state","saveEventListener","save","ev","betreffChanged","betreff","trigger","err","getBeschreibungVorschlaege","kontokorrentId","beschreibungVorschlaege","vorschlaege","slice","validate","data","getData","bezahlungHinzufuegen","navigateKontokorrentById","scroll","top","behavior","kontokorrents","activeKontokorrentId","kk","href","oeffentlicherName","personen","style","display","bezahlungAnlegen","hidden","disconnectedCallback","removeEventListener","customElements","define","Spinner","attachShadow","mode","timeout","ms","Promise","resolve","setTimeout","aborter","status","aborted","promise","reject","abort","race","$","target","proto","enumerable","toJSON","URL"],"sourceRoot":""}