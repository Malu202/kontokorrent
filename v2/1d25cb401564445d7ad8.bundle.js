!function(){var e,t,n={3483:function(e,t,n){"use strict";var r;async function a(e,t,n){let r={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)};return n&&(r.headers=Object.assign(Object.assign({},r.headers),{Authorization:"Bearer ".concat(n)})),await fetch(e,r)}n(3948),function(e){e.google="google",e.anonym="anonym"}(r||(r={}));class s{constructor(e){this.networkError=e}}class o{}class i{}let c;c="https://kontokorrent.azurewebsites.net";const l="https://kontokorrent.azurewebsites.net";class h{}class u{}class d{}const f=l;var w=n(9820);const g="KontokorrentsStore",p="AppStateStore",k="AktionenStore",b="NeueBezahlungenStore";var m;function I(e,t){const n=new Map;return e.forEach((e=>{const r=e[t],a=n.get(r);a?a.push(e):n.set(r,[e])})),n}n(5306),n(3210);class y{constructor(e,t){this.kontokorrentId=e,this.vorschlaege=t,this.type=27}}function z(e){let t={},n=e.sort(((e,t)=>e.laufendeNummer-t.laufendeNummer));for(let e of n)e.bearbeiteteBezahlungId&&delete t[e.bearbeiteteBezahlungId],e.geloeschteBezahlungId?delete t[e.geloeschteBezahlungId]:t[e.bezahlung.id]=e.bezahlung;return Object.values(t)}!function(e){e.Zwischengespeichert="zwischengespeichert",e.Speichern="speichern",e.Gespeichert="gespeichert"}(m||(m={}));class A{constructor(e){this.db=e}async getLaufendeNummer(e){let t,n=(await this.db.getAktionen(e)).map((e=>e.laufendeNummer)).sort(((e,t)=>e-t));for(t=0;t<n.length-1&&n[t]+1===n[t+1];t++);return n[t]}}class v{constructor(e,t,n){this.wert=e,this.empfaengerAnzahl=t,this.isEmpfaenger=n}}class O{constructor(e){this.db=e}erweitern(e,t,n){let r=1;for(let e of n)e!=t&&(r*=e);return e*r}async getBalance(e){let t=await this.db.getAktionen(e.kontokorrentId);e.bisLaufendeNummer&&(t=t.filter((t=>t.laufendeNummer<=e.bisLaufendeNummer)));let n,r=z(t),a=await this.db.getZwischengespeicherteBezahlungenForKontokorrent(e.kontokorrentId);n=e.zwischengespeicherte?[...a,...r]:r;let s=await this.db.getKontokorrent(e.kontokorrentId),o={};for(let e of s.personen)o[e.id]=[];for(let e of n)for(let t of e.empfaengerIds)o[t].push(new v(e.wert,e.empfaengerIds.length,!0)),o[e.bezahlendePersonId].push(new v(e.wert,e.empfaengerIds.length,!1));let i={};for(let e of s.personen){let t=I(o[e.id],"empfaengerAnzahl"),n=Array.from(t.keys()),r=Array.from(t.keys()).reduce(((e,t)=>e*t),1);if(r<362880){let a=0;for(let e of t.keys()){let r=t.get(e).reduce(((e,t)=>e+(t.isEmpfaenger?t.wert:-t.wert)),0);a+=this.erweitern(r,e,n)}i[e.id]=a/r}else{let n=0;for(let e of t.keys())n+=t.get(e).reduce(((e,t)=>e+(t.isEmpfaenger?t.wert:-t.wert)),0)/e;i[e.id]=n}}return{bezahlungen:n,balance:i}}async calculateBalance(e){return(await this.getBalance({kontokorrentId:e,zwischengespeicherte:!0,bisLaufendeNummer:null})).balance}}class N{constructor(e,t,n){this.personA=e,this.personB=t,this.value=n}Is(e,t){return this.personA==e&&this.personB==t||this.personA==t&&this.personB==e}}function j(e){return Object.entries(e).map((([e,t])=>({personId:e,wert:t})))}class S{constructor(e,t,n){this.scores=this.getScores(e,t);var r=function(e){let t=e[0];for(let n of e)n>t&&(t=n);return t}(this.scores.map((e=>e.value)));r+=1;for(let e of n)this.scores.find((t=>t.Is(e.bezahlendePersonId,e.empfaengerPersonId))).value=r}compare(e,t){if(null==e||null==t)return-1;var n=this.scores.find((t=>t.Is(e.bezahlendePersonId,e.empfaengerPersonId))).value,r=this.scores.find((e=>e.Is(t.bezahlendePersonId,t.empfaengerPersonId))).value;return Math.abs(n-r)<Number.EPSILON?0:n<r?-1:1}findeBesteZahlung(e){return e.sort(((e,t)=>this.compare(t,e)))[0]}getScores(e,t){let n=[],r=j(e);for(let e of r)for(let t of r)t.personId!=e.personId&&(n.some((n=>n.Is(e.personId,t.personId)))||n.push(new N(e.personId,t.personId,0)));for(let e of t)for(let t of e.empfaengerIds)e.bezahlendePersonId!=t&&(n.find((n=>n.Is(e.bezahlendePersonId,t))).value+=1/e.empfaengerIds.length);return n}}class B{constructor(e,t,n){this.bezahlendePersonId=e,this.empfaengerPersonId=t,this.wert=n}}function P(e,t,n){return Math.abs(e-t)<(n||Number.EPSILON)}class C{constructor(e,t){this.balance=e,this.zahlungsBewerter=t,this.angewendeteZahlungen=[]}anwenden(e){let t=Object.assign({},this.balance);for(let n of e)t[n.bezahlendePersonId]-=n.wert,t[n.empfaengerPersonId]+=n.wert;this.balance=t,this.angewendeteZahlungen=[...this.angewendeteZahlungen,...e]}mussZahlungenAnwenden(e){let t=e.map((e=>{let t=this.balance[e.bezahlendePersonId];return new B(e.bezahlendePersonId,e.empfaengerPersonId,t)}));this.anwenden(t)}gleicheAufloesen(){let e=j(this.balance),t=e.filter((e=>e.wert>0)).map((t=>{let n=e.find((e=>e.personId!=t.personId&&P(0,e.wert+t.wert)));return n?new B(t.personId,n.personId,t.wert):null})).filter((e=>null!=e));this.anwenden(t)}gleichheitErzeugen(){let e=j(this.balance),t=e.filter((e=>e.wert>0)).map((t=>{let n=e.filter((e=>-e.wert>t.wert));for(let r of n)if(e.some((e=>t.personId!=e.personId&&e.wert>0&&P(r.wert+t.wert,-e.wert))))return new B(t.personId,r.personId,t.wert);return null})).filter((e=>null!=e));if(t.length>0){let e=this.zahlungsBewerter.findeBesteZahlung(t);return this.anwenden([e]),!0}return!1}istAufgeloest(){return!Object.values(this.balance).some((e=>!P(e,0,.05)))}getAusgleich(){return{ausgleichZahlungen:this.angewendeteZahlungen}}flattenAusgleichZahlungen(e){return e.reduce(((e,t)=>e.concat(t)),[])}moeglicheZahlung(){let e=j(this.balance),t=e.filter((e=>e.wert>0)).map((t=>e.filter((e=>e.personId!=t.personId&&-e.wert>t.wert)).map((e=>new B(t.personId,e.personId,t.wert))))),n=this.zahlungsBewerter.findeBesteZahlung(this.flattenAusgleichZahlungen(t));if(null!=n)return void this.anwenden([n]);let r=e.filter((e=>e.wert>0)).map((t=>e.filter((e=>e.personId!=t.personId&&e.wert<0)).map((e=>new B(t.personId,e.personId,Math.abs(e.wert)))))),a=this.zahlungsBewerter.findeBesteZahlung(this.flattenAusgleichZahlungen(r));null!=a&&this.anwenden([a])}}class Z{}class T{constructor(e){this.db=e}async getAusgleich(e){let t=new O(this.db),n=await t.getBalance({kontokorrentId:e.kontokorrentId,zwischengespeicherte:!1,bisLaufendeNummer:e.bisLaufendeNummer}),r=new C(n.balance,new S(n.balance,n.bezahlungen,e.ausgleichOptions.geforderteZahlungen));r.mussZahlungenAnwenden(e.ausgleichOptions.mussZahlungen);for(let e=0;e<1e3;e++){if(r.istAufgeloest())return r.getAusgleich();r.gleicheAufloesen(),r.istAufgeloest()||r.gleichheitErzeugen()||r.moeglicheZahlung()}throw new Z}}class x{constructor(e){this.id=e,this.type=14}}class K{constructor(e,t){this.kontokorrentId=e,this.bezahlungen=t,this.type=15}}class E{constructor(e){this.kontokorrentId=e,this.type=16}}class L{constructor(e){this.kontokorrentId=e,this.type=19}}class F{constructor(e,t){this.kontokorrentId=e,this.balance=t,this.type=17}}class G{constructor(e){this.oeffentlicherName=e,this.type=35}}class H{constructor(e){this.oeffentlicherName=e,this.type=36}}class J{constructor(e){this.kontokorrentId=e,this.type=38}}class M{constructor(e,t){this.kontokorrentId=e,this.ausgleich=t,this.type=39}}let R={dispatch(e){self.postMessage({type:"statedispatch",msg:e})}};const U=new class{async withInitialized(e){let t=await(0,w.X3)("kontokorrent-db",5,{upgrade(e,t,n){t<1&&e.createObjectStore(g,{keyPath:"id"}).createIndex("oeffentlicherName","oeffentlicherName"),t<2&&e.createObjectStore(p,{keyPath:"id"}).put({id:0,zuletztGesehenerKontokorrentId:null,accesstokens:[],accountinfo:null}),t<3&&e.createObjectStore(k,{keyPath:["laufendeNummer","kontokorrentId"]}).createIndex("kontokorrentId","kontokorrentId"),t<5&&(e.objectStoreNames.contains(b)&&e.deleteObjectStore(b),e.createObjectStore(b,{keyPath:"id"}).createIndex("kontokorrentId","kontokorrentId"))}});try{return await e(t)}finally{t.close()}}async getKontokorrents(){return await this.withInitialized((async e=>{return t=await e.getAll(g),n=e=>e.name,t.sort(((e,t)=>n(e).toLowerCase().localeCompare(n(t).toLowerCase())));var t,n}))}async addAktionen(e,t){if(!t.length)return;let n=t.map((t=>Object.assign(Object.assign({},t),{kontokorrentId:e})));return await this.withInitialized((t=>{const r=(0,w.Wg)(t);return new Promise(((t,a)=>{const s=r.transaction(k,"readwrite");s.onerror=e=>{console.error("addAktionen failed",e,s.error),a(s.error)},s.oncomplete=()=>{t()};for(let t of n){let n=s.objectStore(k).add(t);n.onerror=r=>{"ConstraintError"==n.error.name?(console.log("Aktion ".concat(t.laufendeNummer," für Kontokorrent ").concat(e," bereits gespeichert."),r,n.error),r.preventDefault(),r.stopPropagation()):console.error("Aktion ".concat(t.laufendeNummer," für Kontokorrent ").concat(e," konnte nicht gespeichert werden."),r,n.error)}}}))}))}async getZuletztGesehenerKontokorrentId(){return await this.withInitialized((async e=>{let t=await e.get(p,0);if(t.zuletztGesehenerKontokorrentId)return t.zuletztGesehenerKontokorrentId;{let e=await await this.getKontokorrents();return e.length?e[0].id:null}}))}async setZuletztGesehenerKontokorrentId(e){return await this.withInitialized((async t=>{let n=await t.get(p,0);n.zuletztGesehenerKontokorrentId=e,await t.put(p,n)}))}async setKontokorrents(e){return await this.withInitialized((async t=>{let n=await t.getAll(g);for(let r of n.filter((t=>!e.some((e=>t.id===e.id)))))await t.delete(g,r.id);let r=[];for(let a of e){let e=n.find((e=>e.id==a.id));e||r.push(a.id);let s=Object.assign(Object.assign({},e),{name:a.name,personen:a.personen,id:a.id,oeffentlicherName:a.oeffentlicherName});await t.put(g,s)}return r}))}async addKontokorrent(e){return await this.withInitialized((async t=>{await t.get(g,e.id)||await t.add(g,e)}))}async getKontokorrent(e){return await this.withInitialized((async t=>await t.get(g,e)))}async getPerOeffentlichName(e){return await this.withInitialized((async t=>await t.getFromIndex(g,"oeffentlicherName",e)))}async getAktionen(e){return await this.withInitialized((async t=>await t.getAllFromIndex(k,"kontokorrentId",e)))}async clear(){return await this.withInitialized((async e=>{await e.clear(k),await e.clear(g),await e.put(p,{id:0,zuletztGesehenerKontokorrentId:null,accesstokens:[],accountinfo:null})}))}async getAccessToken(e){return await this.withInitialized((async t=>((await t.get(p,0)).accesstokens||[]).find((t=>t.type===e))))}async updateAccessTokenIfNewer(e,t,n){return await this.withInitialized((async r=>{const a=r.transaction(p,"readwrite",{durability:"strict"});let s=await a.store.get(0);s.accesstokens||(s.accesstokens=[]);let o=s.accesstokens.find((t=>t.type===e));if(o){if(o.timestamp!=n)return console.error("The accesstoken of type ".concat(e," was already updated since reading.")),await a.done,!1;o.value=t,o.timestamp++}else s.accesstokens.push({timestamp:1,type:e,value:t});return await a.store.put(s),await a.done,!0}))}async setAccountInfo(e){return await this.withInitialized((async t=>{const n=t.transaction(p,"readwrite");let r=await n.store.get(0);r.accountinfo=e,await n.store.put(r),await n.done}))}async getAccountInfo(){return await this.withInitialized((async e=>{const t=e.transaction(p,"readonly");let n=await t.store.get(0);return null==n?void 0:n.accountinfo}))}async clearAccountInfo(){return await this.withInitialized((async e=>{const t=e.transaction(p,"readwrite");let n=await t.store.get(0);n.accountinfo=null,n.accesstokens=[],await t.store.put(n),await t.done}))}async getZwischengespeicherteBezahlungen(){return await this.withInitialized((async e=>await e.getAll(b)))}async getBezahlungAktion(e,t){return await this.withInitialized((async n=>{var r=n.getAllFromIndex(k,"kontokorrentId",e);return(await r).find((e=>e.bezahlung&&e.bezahlung.id==t))}))}async getBearbeitungsStatus(e,t){return await this.withInitialized((async n=>{let r=await n.getAllFromIndex(k,"kontokorrentId",e),a=r.find((e=>e.bezahlung&&e.bezahlung.id==t));return a?null!=r.find((e=>e.bearbeiteteBezahlungId==t))?{aktion:a,status:2}:null!=r.find((e=>e.geloeschteBezahlungId==t))?{aktion:a,status:3}:{aktion:a,status:4}:(await n.getAllFromIndex(b,"kontokorrentId",e)).find((e=>e.id==t))?{aktion:null,status:1}:{aktion:null,status:0}}))}async getZwischengespeicherteBezahlungenForKontokorrent(e){return await this.withInitialized((async t=>await t.getAllFromIndex(b,"kontokorrentId",e)))}async bezahlungZwischenspeichern(e){return await this.withInitialized((async t=>{t.add(b,e)}))}async zwischengespeicherteBezahlungErledigt(e){await this.withInitialized((async t=>{t.delete(b,e)}))}},D=new class{constructor(e){this.db=e}async set(e){await this.db.setAccountInfo(e)}async get(){return await this.db.getAccountInfo()}async clear(){await this.db.clearAccountInfo()}async getAccessToken(e){return await this.db.getAccessToken(e)}async updateAccessTokenIfNewer(e,t,n){return await this.db.updateAccessTokenIfNewer(e,t,n)}}(U),V=new class{constructor(e){this.accountInfoStore=e}async neuerBenutzer(e,t){try{return(await a("".concat(f,"/api/v2/accounts"),{id:e,secret:t})).ok?{success:!0}:{success:!1}}catch(e){return{success:!1}}}async getUserInfo(){let e=await fetch("".concat(f,"/api/v2/userinfo"),{headers:await this.getAuthHeader()});return await e.json()}async getAuthHeader(){return{Authorization:"Bearer ".concat(await this.getAccessToken())}}async kontokorrentHinzufuegen(e,t){let n="";n=e?"oeffentlicherName=".concat(encodeURIComponent(e)):"einladungsCode=".concat(encodeURIComponent(t));let r=await this.getAuthHeader(),a=await fetch("".concat(f,"/api/v2/kontokorrents?").concat(n),{method:"PUT",headers:r});return 404==a.status?null:await a.json()}async kontokorrentsAuflisten(){let e=await fetch("".concat(f,"/api/v2/kontokorrents"),{headers:await this.getAuthHeader()});if(!e.ok)throw new i;return await e.json()}async neuerKontokorrent(e){let t=await a("".concat(f,"/api/v2/kontokorrents"),e,await this.getAccessToken());return 422==t.status?{success:!1,exists:!0}:t.ok?{success:!0}:{success:!1}}async getAktionen(e,t){let n=t?"?ab=".concat(t):"",r=await fetch("".concat(f,"/api/v2/kontokorrents/").concat(e,"/aktionen").concat(n),{headers:await this.getAuthHeader()});if(404==r.status)return{success:!1,notfound:!0};if(r.ok){let e=await r.json();return{success:!0,aktionen:this.mapAktionen(e)}}}mapAktionen(e){for(let t of e)t.bezahlung&&(t.bezahlung.zeitpunkt=new Date(t.bezahlung.zeitpunkt));return e}async neueBezahlung(e,t){let n={method:"POST",headers:{Accept:"application/json","Content-Type":"application/vnd+kontokorrent.hinzufuegenaktion+json",Authorization:"Bearer ".concat(await this.getAccessToken())},body:JSON.stringify(t)},r=await fetch("".concat(f,"/api/v2/kontokorrents/").concat(e,"/aktionen"),n);if(r.ok){let e=await r.json();return this.mapAktionen([e])[0]}throw new h}async bezahlungLoeschen(e,t){let n={method:"POST",headers:{Accept:"application/json","Content-Type":"application/vnd+kontokorrent.loeschenaktion+json",Authorization:"Bearer ".concat(await this.getAccessToken())},body:JSON.stringify({id:t})},r=await fetch("".concat(f,"/api/v2/kontokorrents/").concat(e,"/aktionen"),n);if(r.ok){let e=await r.json();return this.mapAktionen([e])[0]}throw new d}async bezahlungBearbeiten(e,t){let n={method:"POST",headers:{Accept:"application/json","Content-Type":"application/vnd+kontokorrent.bearbeitenaktion+json",Authorization:"Bearer ".concat(await this.getAccessToken())},body:JSON.stringify(t)},r=await fetch("".concat(f,"/api/v2/kontokorrents/").concat(e,"/aktionen"),n);if(r.ok){let e=await r.json();return this.mapAktionen([e])[0]}throw new u}async getAccessToken(){let e=await this.accountInfoStore.get();if(null==e)throw new Error("Keine Account Information gespeichert.");if(e.type==r.anonym){let t,n=await this.accountInfoStore.getAccessToken("anonymous");if(null!=n){let{token:e,expires:t}=JSON.parse(n.value);if(e&&t&&t>=+new Date)return e}try{let n=await a("".concat(f,"/api/v2/token"),{id:e.id,secret:e.secret});if(!n.ok)throw new s(!1);t=await n.json()}catch(e){throw new s(!0)}return await this.accountInfoStore.updateAccessTokenIfNewer("anonymous",JSON.stringify(t),null==n?void 0:n.timestamp),t.token}throw e.type==r.google?new o:new Error("Account Typ ".concat(e.type," unbekannt"))}}(D),W=new class{constructor(e,t){this.db=e,this.store=t,this.resetCache()}formatSearchString(e){return e.toLowerCase().replace(/\s|-/g,"")}sameChars(e,t){let n;for(n=0;n<Math.min(e.length,t.length)&&e[n]==t[n];n++);return n}resetCache(){this.beschreibungenCache={kontokorrentId:null,beschreibungen:[]}}async getVorschlaege(e,t){if(this.beschreibungenCache.kontokorrentId!=e){let t=(await this.db.getAktionen(e)).filter((e=>{var t;return null!=(null===(t=e.bezahlung)||void 0===t?void 0:t.beschreibung)})).map((e=>({search:this.formatSearchString(e.bezahlung.beschreibung),result:e.bezahlung.beschreibung.trim()})));this.beschreibungenCache.kontokorrentId=e;let n=I(t,"search");this.beschreibungenCache.beschreibungen=Array.from(n.entries()).map((([e,t])=>({search:e,result:t[0].result,occurence:t.length}))).sort(((e,t)=>t.occurence-e.occurence))}if(t){let n=this.formatSearchString(t),r=this.beschreibungenCache.beschreibungen.filter((({search:e})=>e.indexOf(n)>-1)).map((({search:e,result:t})=>({result:t,score:this.sameChars(n,e)}))).sort(((e,t)=>t.score-e.score));this.store.dispatch(new y(e,r.map((e=>e.result))))}else{let t=this.beschreibungenCache.beschreibungen.slice(0,10).map((e=>e.result));this.store.dispatch(new y(e,t))}}}(U,R),X=new class{constructor(e,t,n){this.store=e,this.apiClient=t,this.db=n}async refreshBezahlungen(e){let t=z(await this.db.getAktionen(e)).map((e=>Object.assign(Object.assign({},e),{status:m.Gespeichert}))),n=(await this.db.getZwischengespeicherteBezahlungenForKontokorrent(e)).map((e=>({status:m.Zwischengespeichert,beschreibung:e.beschreibung,bezahlendePersonId:e.bezahlendePersonId,empfaengerIds:e.empfaengerIds,id:e.id,wert:e.wert,zeitpunkt:e.zeitpunkt}))).filter((e=>!t.some((t=>t.id==e.id))));this.store.dispatch(new K(e,[...t,...n]))}async calculateBalance(e){let t=await new O(this.db).calculateBalance(e);this.store.dispatch(new F(e,t))}async refreshKontokorrent(e){await Promise.all([this.refreshBezahlungen(e),this.calculateBalance(e)])}async kontokorrentSynchronisieren(e){this.store.dispatch(new E(e));let t=await new A(this.db).getLaufendeNummer(e),n=await this.apiClient.getAktionen(e,t);n.success&&(await this.db.addAktionen(e,n.aktionen),n.aktionen.length>0&&await this.refreshKontokorrent(e)),this.store.dispatch(new L(e))}async kontokorrentOeffnen(e){this.store.dispatch(new H(e));let t=await this.db.getPerOeffentlichName(e);null!=t?(this.store.dispatch(new x(t.id)),await Promise.all([this.db.setZuletztGesehenerKontokorrentId(t.id),this.refreshKontokorrent(t.id)]),await this.kontokorrentSynchronisieren(t.id)):this.store.dispatch(new G(e))}async ausgleichRechnen(e,t){let n=await this.db.getPerOeffentlichName(e);if(null!=n){this.store.dispatch(new J(n.id)),await this.kontokorrentSynchronisieren(n.id);let e=await new T(this.db).getAusgleich({ausgleichOptions:t,bisLaufendeNummer:null,kontokorrentId:n.id});this.store.dispatch(new M(n.id,e))}else this.store.dispatch(new G(e))}}(R,V,U);self.addEventListener("message",(e=>{(async function(e){switch(e.type){case 0:await X.kontokorrentOeffnen(e.oeffentlicherName);break;case 1:await W.getVorschlaege(e.kontokorrentId,e.eingabe);break;case 2:W.resetCache();break;case 3:await X.ausgleichRechnen(e.oeffentlicherName,e.ausgleichOptions)}})(e.data).catch((e=>console.error(e)))}))},8006:function(e,t,n){var r=n(6324),a=n(748).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},6091:function(e,t,n){var r=n(7293),a=n(1361);e.exports=function(e){return r((function(){return!!a[e]()||"​᠎"!="​᠎"[e]()||a[e].name!==e}))}},3111:function(e,t,n){var r=n(4488),a=n(1340),s="["+n(1361)+"]",o=RegExp("^"+s+s+"*"),i=RegExp(s+s+"*$"),c=function(e){return function(t){var n=a(r(t));return 1&e&&(n=n.replace(o,"")),2&e&&(n=n.replace(i,"")),n}};e.exports={start:c(1),end:c(2),trim:c(3)}},1361:function(e){e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},3210:function(e,t,n){"use strict";var r=n(2109),a=n(3111).trim;r({target:"String",proto:!0,forced:n(6091)("trim")},{trim:function(){return a(this)}})}},r={};function a(e){var t=r[e];if(void 0!==t)return t.exports;var s=r[e]={exports:{}};return n[e](s,s.exports,a),s.exports}a.m=n,a.x=function(){var e=a.O(void 0,[820],(function(){return a(3483)}));return a.O(e)},e=[],a.O=function(t,n,r,s){if(!n){var o=1/0;for(h=0;h<e.length;h++){n=e[h][0],r=e[h][1],s=e[h][2];for(var i=!0,c=0;c<n.length;c++)(!1&s||o>=s)&&Object.keys(a.O).every((function(e){return a.O[e](n[c])}))?n.splice(c--,1):(i=!1,s<o&&(o=s));if(i){e.splice(h--,1);var l=r();void 0!==l&&(t=l)}}return t}s=s||0;for(var h=e.length;h>0&&e[h-1][2]>s;h--)e[h]=e[h-1];e[h]=[n,r,s]},a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.f={},a.e=function(e){return Promise.all(Object.keys(a.f).reduce((function(t,n){return a.f[n](e,t),t}),[]))},a.u=function(e){return"0cdd927a1d4532914d47.bundle.js"},a.miniCssF=function(e){},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/v2/",function(){var e={81:1};a.f.i=function(t,n){e[t]||importScripts(a.p+a.u(t))};var t=self.webpackChunkkontokorrent=self.webpackChunkkontokorrent||[],n=t.push.bind(t);t.push=function(t){var r=t[0],s=t[1],o=t[2];for(var i in s)a.o(s,i)&&(a.m[i]=s[i]);for(o&&o(a);r.length;)e[r.pop()]=1;n(t)}}(),t=a.x,a.x=function(){return a.e(820).then(t)},a.x()}();
//# sourceMappingURL=1d25cb401564445d7ad8.bundle.js.map