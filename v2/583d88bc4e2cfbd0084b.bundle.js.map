{"version":3,"sources":["webpack://kontokorrent/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/toDate/index.js","webpack://kontokorrent/./src/components/AppBar/AppBar.html","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeige.html","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeigeElement.html","webpack://kontokorrent/./src/components/BezahlungCard/BezahlungCard.html","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenGroup.html","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenView.html","webpack://kontokorrent/./src/components/KontokorrentPage/KontokorrentPage.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.ts","webpack://kontokorrent/./src/components/AppBar/AppBar.ts","webpack://kontokorrent/./src/utils/formatCurrency.ts","webpack://kontokorrent/./src/utils/round.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeigeElement.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeige.ts","webpack://kontokorrent/./src/components/BezahlungCard/BezahlungCard.ts","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfWeek/index.js","webpack://kontokorrent/./src/utils/groupBy.ts","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenGroup.ts","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenView.ts","webpack://kontokorrent/./node_modules/date-fns/esm/addDays/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfToday/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/endOfWeek/index.js","webpack://kontokorrent/./node_modules/comlink/dist/esm/comlink.mjs","webpack://kontokorrent/./src/state/actions/KontokorrentActionCreator.ts","webpack://kontokorrent/./src/lib/filterBezahlungen.ts","webpack://kontokorrent/./src/components/KontokorrentPage/KontokorrentPage.ts","webpack://kontokorrent/./src/components/convertLinks.ts","webpack://kontokorrent/./src/components/ui-components/popup/popup.ts","webpack://kontokorrent/./src/utils/ArrayToElementRenderer.ts","webpack://kontokorrent/./src/utils/ReuseableTemplate.ts"],"names":["requiredArgs","required","args","length","TypeError","startOfDay","dirtyDate","arguments","date","setHours","toDate","argument","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","module","exports","KontokorrentSelectListEntry","HTMLElement","super","this","innerHTML","name","querySelector","link","clickEvent","bind","addEventListener","e","preventDefault","dispatchEvent","CustomEvent","detail","kontokorrent","id","bubbles","removeEventListener","isActive","innerText","href","classList","toggle","customElements","define","KontokorrentSelectList","list","_kontokorrents","kontokorrentsRenderer","ArrayToElementRenderer","k","li","document","createElement","appendChild","update","firstChild","_activeKontokorrentId","kontokorrents","sortBy","KontokorrentSelectListTagName","KontokorrentSelect","kontokorrentName","kontokorrentSelectList","addButton","popup","updateAttributes","contains","event","stopPropagation","hide","activeKontokorrentId","getAttribute","updatesStyle","activeKontokorrent","find","KontokorrentSelectTagName","AppBar","kontokorrentSelect","logoutDialog","accountActionCreator","logout","convertLinks","querySelectorAll","routingActionCreator","subscription","store","subscribe","state","applyStoreState","navigateLogin","values","setAttribute","serviceLocator","AppBarTagName","formatCurrency","wert","valueString","indexOfE","indexOfe","power","Betrag","indexOf","parseFloat","substring","Number","Math","round","Kommaindex","PersonNameAttribute","BalanceAttribute","BalanceRangeAttribute","template","ReuseableTemplate","get","personNameElement","balanceTextElement","balanceContainerElement","barElement","requestAnimationFrame","style","transform","personName","balance","balanceRange","max","scale","sign","abs","balanceTransform","add","remove","BalanceAnzeige","personenRenderer","b","personen","map","v","BeschreibungAttribute","WertAttribute","BezahlendePersonAttribute","EmpfaengerAttribute","StatusAttribute","attributeStore","beschreibung","bezahlendePerson","empfaenger","status","beschreibungElement","bezahlendePersonElement","empfaengerElement","wertElement","doneElement","doneAllElement","syncElement","prop","getAtt","att","checkChanged","some","display","toInteger","dirtyNumber","number","isNaN","ceil","floor","startOfWeek","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","day","getDay","diff","setDate","getDate","groupBy","key","Map","forEach","item","collection","push","set","BezahlungenGroup","container","titleElement","bezahlungenRenderer","bezahlungen","bezahlendePersonName","t","BezahlungenView","minTage","minEintraege","all","bezahlungenContainer","showMoreButton","showMoreClick","groupRenderer","s","anzahlEintraege","last","lastElementChild","scrollIntoView","setShowMoreButtonDisplay","z","empfaengerIds","p","join","render","sorted","sort","a","zeitpunkt","filtered","filter","dirtyAmount","amount","addDays","now","slice","mapped","bezahlendePersonId","formatEmpfaenger","tag","woche","isWeek","grouped","Array","of","entries","reduce","c","sortedGroups","d","setBezahlungen","title","formatWeek","formatDay","val","weekformat","endWeek","endOfWeek","dayAndMonth","Intl","DateTimeFormat","month","format","getMonth","weekday","year","proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","transferHandlers","canHandle","obj","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","value","serialized","isError","message","assign","ep","self","callback","ev","data","type","path","argumentList","fromWireValue","returnValue","parent","rawValue","apply","proxy","transfers","transferCache","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","closeEndPoint","endpoint","constructor","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","_target","requestResponseMessage","r","_thisArg","rawArgumentList","processArguments","processed","arr","concat","WeakMap","handler","serializedValue","serialize","msg","fill","random","MAX_SAFE_INTEGER","l","KontokorrentGeoeffnet","KontokorrentBezahlungen","kontokorrentId","KontokorrentSynchronisieren","KontokorrentSynchronisiert","KontokorrentBalanceAktualisiert","KontokorrentActionCreator","apiClient","db","aktionen","bezahlungenMap","ordered","laufendeNummer","bearbeiteteBezahlungId","geloeschteBezahlungId","bezahlung","filterBezahlungen","getAktionen","zwischengespeicherte","getZwischengespeicherteBezahlungenForKontokorrent","dispatch","getWorkerApi","calculateBalance","refreshBezahlungen","getLaufendeNummer","res","success","addAktionen","refreshKontokorrent","workerApi","worker","Worker","URL","getKontokorrent","tasks","setZuletztGesehenerKontokorrentId","kontokorrentSynchronisieren","KontokorrentPage","appBar","balanceAnzeige","bezahlungenView","kontokorrentSpinner","kontokorrentActionCreator","kontokorrentActionCreatorFactory","kontokorrentListenActionCreator","addServices","kontokorrentIdParameter","navigiereZuLetztGesehenem","navigateKontokorrent","setBalance","synchronisieren","kontokorrentOeffnen","elements","navigate","Popup","popupShown","keyListener","clickListener","updateStyles","show","listElement","keySelector","keyToElement","elementToKey","updateElement","keyCache","getKey","x","from","children","el","i","removeChild","before","nextKeyToElement","childElement","firstElementChild","prepend","nextElementSibling","insertAdjacentElement","instance","importNode","content"],"mappings":"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","file":"583d88bc4e2cfbd0084b.bundle.js","sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","// Module\nvar code = \"<header class=\\\"app-bar\\\"> <kontokorrent-select class=\\\"app-bar__kontokorrent-select\\\"></kontokorrent-select> <nav class=\\\"app-bar__links\\\"> <button id=\\\"logout-button\\\" class=\\\"app-bar__link\\\" title=\\\"Logout\\\"> <span class=\\\"material-icons\\\"> exit_to_app </span> </button> <a href=\\\"info\\\" class=\\\"app-bar__link\\\" title=\\\"Informationen über diese App\\\"> <span class=\\\"material-icons\\\"> info </span> </a> </nav> </header> <app-popup id=\\\"logout-dialog\\\"> <div class=\\\"dialog__backdrop\\\"></div> <div class=\\\"dialog\\\"> <p> Wirklich aus allen Kontokorrents ausloggen? </p> <div class=\\\"dialog__button-pane\\\"> <button id=\\\"abort-logout\\\" class=\\\"button\\\">Abbrechen</button> <button id=\\\"confirm-logout\\\" class=\\\"button\\\">Ausloggen</button> </div> </div> </app-popup>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"balance-anzeige-element__graphic-container\\\"> <div class=\\\"balance-anzeige-element__bar\\\" data-ref=\\\"bar\\\"></div> <div class=\\\"balance-anzeige-element__horizontal-line\\\"></div> <span class=\\\"balance-anzeige-element__balance\\\" data-ref=\\\"balance-container\\\"> <span data-ref=\\\"balance-text\\\"></span>€ </span> </div> <div class=\\\"balance-anzeige-element__text-container\\\"> <span data-ref=\\\"person-name\\\" class=\\\"balance-anzeige-element__name\\\"></span> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"balance-anzeige-element__graphic-container\\\"> <div class=\\\"balance-anzeige-element__bar\\\" data-ref=\\\"bar\\\"></div> <div class=\\\"balance-anzeige-element__horizontal-line\\\"></div> <span class=\\\"balance-anzeige-element__balance\\\" data-ref=\\\"balance-container\\\"> <span data-ref=\\\"balance-text\\\"></span>€ </span> </div> <div class=\\\"balance-anzeige-element__text-container\\\"> <span data-ref=\\\"person-name\\\" class=\\\"balance-anzeige-element__name\\\"></span> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"bezahlung-card__beschreibung\\\"> <div data-ref=\\\"beschreibung\\\"></div> <div class=\\\"bezahlung-card__personen\\\"> <span data-ref=\\\"bezahlende-person\\\"></span> für <span data-ref=\\\"empfaenger\\\"></span> </div> </div> <div class=\\\"bezahlung-card__wert\\\"> <span data-ref=\\\"wert\\\"></span>€ </div> <div class=\\\"bezahlung-card__status\\\"> <span class=\\\"material-icons\\\" data-ref=\\\"icon-done\\\" style=\\\"display:none\\\" title=\\\"lokal zwischengespeichert\\\"> schedule </span> <span class=\\\"material-icons\\\" data-ref=\\\"icon-done-all\\\" style=\\\"display:none\\\" title=\\\"synchronisiert\\\"> done_all </span> <span class=\\\"material-icons\\\" data-ref=\\\"icon-sync\\\" style=\\\"display:none\\\" title=\\\"synchronisieren...\\\"> sync </span> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<h3 data-ref=\\\"title\\\" class=\\\"bezahlungen-group__title\\\">Gruppe</h3> <div class=\\\"bezahlungen-group__container\\\" data-ref=\\\"container\\\"></div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div id=\\\"bezahlungen-container\\\"> </div> <button id=\\\"show-more\\\" class=\\\"button\\\">Mehr anzeigen</button>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<app-bar></app-bar> <div style=\\\"display:none\\\" id=\\\"login-expired\\\">Google-Login abgelaufen: zum Synchronisieren neu anmelden</div> <balance-anzeige id=\\\"balance-anzeige\\\"></balance-anzeige> <div class=\\\"kontokorrentpage-menu\\\"> <a id=\\\"eintragen-desktop\\\" class=\\\"floating-action-button floating-action-button--embed\\\" href=\\\"eintragen\\\"> <span class=\\\"material-icons\\\"> add </span> eintragen </a> <span class=\\\"kontokorrentpage-menu__sync-display\\\" id=\\\"spinner\\\" style=\\\"display:none\\\"> <div class=\\\"spinner\\\"></div> synchronisieren </span> </div> <bezahlungen-view id=\\\"bezahlungen-view\\\"></bezahlungen-view> <a id=\\\"eintragen-mobile\\\" class=\\\"floating-action-button floating-action-button--fixed\\\" href=\\\"eintragen\\\"> <span class=\\\"material-icons\\\"> add </span> eintragen </a>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"kontokorrent-select-wrapper\\\"> <div class=\\\"kontokorrent-select\\\"> <h1 data-ref=\\\"kontokorrent-name\\\" class=\\\"kontokorrent-select__name\\\">Kontokorrent</h1> <button class=\\\"kontokorrent-select__choose\\\" title=\\\"anderen Kontokorrent wählen\\\"> <span class=\\\"material-icons\\\"> arrow_drop_down </span> </button> </div> <app-popup class=\\\"kontokorrent-select__popup\\\"> <kontokorrent-select-list></kontokorrent-select-list> <div class=\\\"kontokorrent-select__buttons\\\"> <button id=\\\"add-kontokorrent\\\" class=\\\"button\\\">weiteren hinzufügen</button> </div> </app-popup> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<ol data-ref=\\\"list\\\" class=\\\"kontokorrent-select-list\\\"> </ol>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<a data-ref=\\\"link\\\" class=\\\"kontokorrent-select-list__entry\\\"> <span data-ref=\\\"name\\\"></span> </a>\";\n// Exports\nmodule.exports = code;","import template from \"./KontokorrentSelectListEntry.html\";\nimport { KontokorrentState } from \"../../state/State\";\n\n\nexport class KontokorrentSelectListEntry extends HTMLElement {\n    private name: HTMLSpanElement;\n    private link: HTMLAnchorElement;\n    private kontokorrent: KontokorrentState;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.name = this.querySelector(`[data-ref=\"name\"]`);\n        this.link = this.querySelector(`[data-ref=\"link\"]`);\n        this.clickEvent = this.clickEvent.bind(this);\n    }\n\n    connectedCallback() {\n        this.link.addEventListener(\"click\", this.clickEvent);\n    }\n\n    private clickEvent(e: MouseEvent): void {\n        e.preventDefault();\n        this.dispatchEvent(new CustomEvent(\"gotokontokorrent\", { detail: this.kontokorrent.id, bubbles: true }));\n    }\n\n    disconnectedCallback() {\n        this.link.removeEventListener(\"click\", this.clickEvent);\n    }\n\n    update(kontokorrent: KontokorrentState, isActive: boolean) {\n        this.kontokorrent = kontokorrent;\n        this.name.innerText = kontokorrent.name;\n        this.link.href = `kontokorrents/${kontokorrent.id}`;\n        this.link.classList.toggle(\"kontokorrent-select-list__entry--active\", isActive);\n    }\n}\nexport const KontokorrentSelectListEntryTagName = \"kontokorrent-select-list-entry\";\ncustomElements.define(KontokorrentSelectListEntryTagName, KontokorrentSelectListEntry);\n","import template from \"./KontokorrentSelectList.html\";\nimport \"./KontokorrentSelectList.scss\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { sortByAlphabetically } from \"../../utils/sortBy\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { KontokorrentSelectListEntry } from \"./KontokorrentSelectListEntry\";\n\nexport class KontokorrentSelectList extends HTMLElement {\n    private list: HTMLOListElement;\n    private _kontokorrents: KontokorrentState[];\n    private _activeKontokorrentId: string;\n    private kontokorrentsRenderer: ArrayToElementRenderer<KontokorrentState, HTMLLIElement, string>;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.list = this.querySelector(`[data-ref=\"list\"]`);\n        this._kontokorrents = [];\n        this.kontokorrentsRenderer = new ArrayToElementRenderer(this.list,\n            (k: KontokorrentState) => k.id,\n            () => {\n                let li = document.createElement(\"li\");\n                li.appendChild(new KontokorrentSelectListEntry());\n                return li;\n            });\n    }\n\n    connectedCallback() {\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private update() {\n        this.kontokorrentsRenderer.update(this._kontokorrents,\n            (li, kontokorrent) => {\n                let x: KontokorrentSelectListEntry = <KontokorrentSelectListEntry>li.firstChild;\n                x.update(kontokorrent, this._activeKontokorrentId == kontokorrent.id);\n            });\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this._kontokorrents = sortByAlphabetically(kontokorrents, k => k.name);\n        this.update();\n    }\n\n    set activeKontokorrentId(id: string) {\n        this._activeKontokorrentId = id;\n        this.update();\n    }\n}\nexport const KontokorrentSelectListTagName = \"kontokorrent-select-list\";\ncustomElements.define(KontokorrentSelectListTagName, KontokorrentSelectList);\n","import template from \"./KontokorrentSelect.html\";\nimport \"./KontokorrentSelect.scss\";\nimport \"./KontokorrentSelectList\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { KontokorrentSelectListTagName, KontokorrentSelectList } from \"./KontokorrentSelectList\";\nimport { Popup } from \"../ui-components/popup/popup\";\nimport \"../ui-components/popup/popup\";\n\nexport class KontokorrentSelect extends HTMLElement {\n    private kontokorrentName: HTMLHeadingElement;\n    private popup: Popup;\n    private kontokorrentSelectList: KontokorrentSelectList;\n    private addButton: HTMLButtonElement;\n    private activeKontokorrentId: string;\n    private _kontokorrents: KontokorrentState[];\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.kontokorrentName = this.querySelector(`[data-ref=\"kontokorrent-name\"]`);\n        this.kontokorrentSelectList = this.querySelector(KontokorrentSelectListTagName);\n        this.addButton = this.querySelector(`#add-kontokorrent`);\n        this._kontokorrents = null;\n    }\n\n    connectedCallback() {\n        this.popup = this.querySelector(`app-popup`);\n        this.updateAttributes();\n        this.addEventListener(\"click\", e => {\n            if (!this.popup.contains(<Element>(event.target))) {\n                this.popup.toggle();\n                e.stopPropagation();\n            }\n        });\n        this.addButton.addEventListener(\"click\", e => {\n            this.dispatchEvent(new CustomEvent(\"addkontokorrent\"));\n        });\n        this.kontokorrentSelectList.addEventListener(\"gotokontokorrent\", () => {\n            this.popup.hide();\n        })\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.activeKontokorrentId = this.getAttribute(\"active-kontokorrent-id\");\n        this.kontokorrentSelectList.activeKontokorrentId = this.activeKontokorrentId;\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [\"active-kontokorrent-id\"];\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this.kontokorrentSelectList.kontokorrents = kontokorrents;\n        this._kontokorrents = kontokorrents;\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        if (this._kontokorrents && this._kontokorrents.length) {\n            let activeKontokorrent = this._kontokorrents.find(k => k.id == this.activeKontokorrentId);\n            if (activeKontokorrent) {\n                this.kontokorrentName.innerText = activeKontokorrent.name;\n            }\n            else {\n                this.kontokorrentName.innerText = \"(Kontokorrent wählen)\";\n            }\n        }\n    }\n\n}\nexport const KontokorrentSelectTagName = \"kontokorrent-select\";\ncustomElements.define(KontokorrentSelectTagName, KontokorrentSelect);\n","import template from \"./AppBar.html\";\nimport \"./AppBar.scss\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { convertLinks } from \"../convertLinks\";\nimport \"../KontokorrentSelect/KontokorrentSelect\";\nimport { KontokorrentSelectTagName, KontokorrentSelect } from \"../KontokorrentSelect/KontokorrentSelect\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { AccountActionCreator, accountActionCreatorFactory } from \"../../state/actions/AccountActionCreator\";\nimport { Store } from \"../../state/Store\";\nimport { State } from \"../../state/State\";\nimport { Popup } from \"../ui-components/popup/popup\";\n\nexport class AppBar extends HTMLElement {\n    private kontokorrentSelect: KontokorrentSelect;\n    private store: Store;\n    private routingActionCreator: RoutingActionCreator;\n    private accountActionCreator: AccountActionCreator;\n    private logoutDialog: Popup;\n    private subscription: () => void;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.kontokorrentSelect = this.querySelector(KontokorrentSelectTagName);\n        this.logoutDialog = this.querySelector(\"#logout-dialog\");\n    }\n\n    connectedCallback() {\n        this.querySelector(\"#logout-button\").addEventListener(\"click\", (e: MouseEvent) => {\n            this.logoutDialog.toggle();\n            e.stopPropagation();\n        });\n        this.querySelector(\"#confirm-logout\").addEventListener(\"click\", async () => {\n            await this.accountActionCreator.logout();\n        });\n        this.querySelector(\"#abort-logout\").addEventListener(\"click\", () => {\n            this.logoutDialog.hide();\n        });\n        convertLinks(this.querySelectorAll(\"a\"), this.routingActionCreator);\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n        this.kontokorrentSelect.addEventListener(\"addkontokorrent\", () => {\n            this.routingActionCreator.navigateLogin();\n        });\n    }\n\n    applyStoreState(state: State): void {\n        this.kontokorrentSelect.kontokorrents = Object.values(state.kontokorrents.kontokorrents);\n        this.kontokorrentSelect.setAttribute(\"active-kontokorrent-id\", state.kontokorrents.activeKontokorrentId);\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.accountActionCreator = accountActionCreatorFactory(serviceLocator);\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n    }\n}\nexport const AppBarTagName = \"app-bar\";\ncustomElements.define(AppBarTagName, AppBar);\n","import { round } from \"./round\";\n\nexport function formatCurrency(wert: number) {\n    var Betrag: string = \"\" + round(wert, 2);\n    var Kommaindex = Betrag.toString().indexOf(\".\");\n    var Nachkommastellen = 0;\n    if (Kommaindex != -1) {\n        Nachkommastellen = Betrag.toString().length - (Kommaindex + 1);\n        if (Nachkommastellen == 1)\n            Betrag += '0';\n    }\n    return Betrag;\n}\n","export function round(value: number, decimals: number) {\n\n    //Removing scientific notation if used:\n    var valueString = value.toString();\n    var indexOfE = valueString.indexOf(\"E\");\n    var indexOfe = valueString.indexOf(\"e\");\n    var power = 0;\n    if (indexOfe > -1) {\n        power = parseFloat(valueString.substring(indexOfe + 1));\n        valueString = valueString.substring(0, indexOfe)\n    } else if (indexOfE > -1) {\n        power = parseFloat(valueString.substring(indexOfE + 1));\n        valueString = valueString.substring(0, indexOfE)\n    }\n    //round\n    return Number(Math.round(Number(valueString + 'e' + (power + decimals))) + 'e-' + (decimals));\n}","import templateContent from \"./BalanceAnzeigeElement.html\";\nimport \"./BalanceAnzeigeElement.scss\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { ReuseableTemplate } from \"../../utils/ReuseableTemplate\";\n\nexport const PersonNameAttribute = \"person-name\";\nexport const BalanceAttribute = \"balance\";\nexport const BalanceRangeAttribute = \"balance-range\";\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class BalanceAnzeigeElement extends HTMLElement {\n    private personName: string;\n    private balance: number;\n    private personNameElement: HTMLSpanElement;\n    private balanceTextElement: HTMLSpanElement;\n    private balanceRange: number;\n    private barElement: HTMLDivElement;\n    private balanceContainerElement: HTMLSpanElement;\n\n    constructor() {\n        super();\n        this.appendChild(template.get());\n        this.personNameElement = this.querySelector(`[data-ref=\"person-name\"]`);\n        this.balanceTextElement = this.querySelector(`[data-ref=\"balance-text\"]`);\n        this.balanceContainerElement = this.querySelector(`[data-ref=\"balance-container\"]`);\n        this.barElement = this.querySelector(`[data-ref=\"bar\"]`);\n    }\n\n    connectedCallback() {\n        requestAnimationFrame(() => {\n            this.barElement.style.transform = `scaleY(0)`;\n            this.updatesStyle();\n        });\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.personName = this.getAttribute(PersonNameAttribute);\n        this.balance = parseFloat(this.getAttribute(BalanceAttribute));\n        this.balanceRange = Math.max(2, parseFloat(this.getAttribute(BalanceRangeAttribute)));\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [PersonNameAttribute, BalanceAttribute, BalanceRangeAttribute];\n    }\n\n    private updatesStyle() {\n        requestAnimationFrame(() => {\n            this.personNameElement.innerText = this.personName;\n            this.balanceTextElement.innerText = formatCurrency(this.balance);\n            let scale = Math.sign(this.balance) * Math.abs(this.balance) / this.balanceRange;\n            let balanceTransform = scale * 1.9;\n            this.barElement.style.transform = `scaleY(${scale})`;\n            this.balanceContainerElement.style.transform = Math.sign(this.balance) < 0 ? `translateY(calc(${balanceTransform}em - 150%))`\n                : `translateY(calc(${balanceTransform}em + 50%))`;\n            if (scale > 0) {\n                this.barElement.classList.add(\"balance-anzeige-element__bar--negative\");\n                this.barElement.classList.remove(\"balance-anzeige-element__bar--positive\");\n            }\n            else {\n                this.barElement.classList.remove(\"balance-anzeige-element__bar--negative\");\n                this.barElement.classList.add(\"balance-anzeige-element__bar--positive\");\n            }\n        });\n    }\n\n}\nexport const BalanceAnzeigeElementTagName = \"balance-anzeige-element\";\ncustomElements.define(BalanceAnzeigeElementTagName, BalanceAnzeigeElement);\n","import template from \"./BalanceAnzeige.html\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BalanceAnzeigeElement, PersonNameAttribute, BalanceAttribute, BalanceRangeAttribute } from \"./BalanceAnzeigeElement\";\nimport { Person } from \"../../state/State\";\n\nexport class BalanceAnzeige extends HTMLElement {\n    private balanceRange: number;\n    private personen: Person[];\n    private personenRenderer: ArrayToElementRenderer<Person, HTMLElement, string>;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.personenRenderer = new ArrayToElementRenderer(this,\n            (b: Person) => b.id,\n            b => new BalanceAnzeigeElement());\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    setBalance(personen: Person[]) {\n        this.personen = personen;\n        this.balanceRange = Math.max(...Object.values(personen).map(v => Math.abs(v.balance)));\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        this.personenRenderer.update(this.personen,\n            (e, b) => {\n                e.setAttribute(PersonNameAttribute, b.name);\n                e.setAttribute(BalanceAttribute, \"\" + b.balance);\n                e.setAttribute(BalanceRangeAttribute, \"\" + this.balanceRange);\n            });\n    }\n\n}\nexport const BalanceAnzeigeTagName = \"balance-anzeige\";\ncustomElements.define(BalanceAnzeigeTagName, BalanceAnzeige);\n","import templateContent from \"./BezahlungCard.html\";\nimport \"./BezahlungCard.scss\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { ReuseableTemplate } from \"../../utils/ReuseableTemplate\";\nimport { BezahlungStatus } from \"../../state/State\";\n\nexport const BeschreibungAttribute = \"beschreibung\";\nexport const WertAttribute = \"wert\";\nexport const BezahlendePersonAttribute = \"bezahlende-person\";\nexport const EmpfaengerAttribute = \"empfaenger\";\nexport const StatusAttribute = \"status\";\n\ninterface AttributeStore {\n    bezahlendePerson: string;\n    beschreibung: string;\n    wert: number;\n    empfaenger: string;\n    status: string;\n}\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class BezahlungCard extends HTMLElement {\n    private attributeStore: AttributeStore;\n    private wertElement: HTMLSpanElement;\n    private empfaengerElement: HTMLSpanElement;\n    private bezahlendePersonElement: HTMLSpanElement;\n    private beschreibungElement: HTMLDivElement;\n    private doneElement: HTMLSpanElement;\n    private doneAllElement: HTMLSpanElement;\n    private syncElement: HTMLSpanElement;\n\n    constructor() {\n        super();\n        this.attributeStore = {\n            beschreibung: null,\n            bezahlendePerson: null,\n            empfaenger: null,\n            wert: null,\n            status: null\n        };\n        this.appendChild(template.get());\n        this.beschreibungElement = this.querySelector(`[data-ref=\"beschreibung\"]`);\n        this.bezahlendePersonElement = this.querySelector(`[data-ref=\"bezahlende-person\"]`);\n        this.empfaengerElement = this.querySelector(`[data-ref=\"empfaenger\"]`);\n        this.wertElement = this.querySelector(`[data-ref=\"wert\"]`);\n        this.doneElement = this.querySelector(`[data-ref=\"icon-done\"]`);\n        this.doneAllElement = this.querySelector(`[data-ref=\"icon-done-all\"]`);\n        this.syncElement = this.querySelector(`[data-ref=\"icon-sync\"]`);\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private checkChanged<K extends keyof AttributeStore>(prop: K, getAtt: () => AttributeStore[K]) {\n        let att = getAtt();\n        if (this.attributeStore[prop] != att) {\n            this.attributeStore[prop] = att;\n            return true;\n        }\n        return false;\n    }\n\n    private updateAttributes() {\n        let changed = [\n            this.checkChanged(\"bezahlendePerson\", () => this.getAttribute(BezahlendePersonAttribute)),\n            this.checkChanged(\"beschreibung\", () => this.getAttribute(BeschreibungAttribute)),\n            this.checkChanged(\"wert\", () => parseFloat(this.getAttribute(WertAttribute))),\n            this.checkChanged(\"empfaenger\", () => this.getAttribute(EmpfaengerAttribute)),\n            this.checkChanged(\"status\", () => this.getAttribute(StatusAttribute))\n        ].some(v => v);\n        if (changed) {\n            this.updatesStyle();\n        }\n    }\n\n    static get observedAttributes() {\n        return [BeschreibungAttribute, BezahlendePersonAttribute, WertAttribute, EmpfaengerAttribute, StatusAttribute];\n    }\n\n    private updatesStyle() {\n        this.beschreibungElement.innerText = this.attributeStore.beschreibung;\n        this.bezahlendePersonElement.innerText = this.attributeStore.bezahlendePerson;\n        this.wertElement.innerText = formatCurrency(this.attributeStore.wert);\n        this.empfaengerElement.innerText = this.attributeStore.empfaenger;\n        this.doneAllElement.style.display = this.attributeStore.status == BezahlungStatus.Gespeichert ? \"inline\" : \"none\";\n        this.doneElement.style.display = this.attributeStore.status == BezahlungStatus.Zwischengespeichert ? \"inline\" : \"none\";\n        this.syncElement.style.display = this.attributeStore.status == BezahlungStatus.Speichern ? \"inline\" : \"none\";\n    }\n\n}\nexport const BezahlungCardTagName = \"bezahlung-card\";\ncustomElements.define(BezahlungCardTagName, BezahlungCard);\n","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","export function groupBy<T, K extends keyof T>(list: T[], key: K) {\n    const map = new Map<T[K], T[]>();\n    list.forEach((item) => {\n        const k = item[key];\n        const collection = map.get(k);\n        if (!collection) {\n            map.set(k, [item]);\n        } else {\n            collection.push(item);\n        }\n    });\n    return map;\n}\n","import template from \"./BezahlungenGroup.html\";\nimport \"../BezahlungCard/BezahlungCard\";\nimport { BezahlungViewModel } from \"./BezahlungViewModel\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BeschreibungAttribute, BezahlendePersonAttribute, BezahlungCard, EmpfaengerAttribute, StatusAttribute, WertAttribute } from \"../BezahlungCard/BezahlungCard\";\n\nexport class BezahlungenGroup extends HTMLElement {\n    private container: HTMLDivElement;\n    private titleElement: HTMLHeadingElement;\n    private bezahlungenRenderer: ArrayToElementRenderer<BezahlungViewModel, BezahlungCard, string>;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.container = this.querySelector(`[data-ref=\"container\"]`);\n        this.titleElement = this.querySelector(`[data-ref=\"title\"]`);\n        this.bezahlungenRenderer = new ArrayToElementRenderer(this.container,\n            (b: BezahlungViewModel) => b.id,\n            b => new BezahlungCard());\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n\n\n    setBezahlungen(bezahlungen: BezahlungViewModel[]) {\n        this.bezahlungenRenderer.update(bezahlungen, (e, b) => {\n            e.setAttribute(BeschreibungAttribute, b.beschreibung);\n            e.setAttribute(WertAttribute, \"\" + b.wert);\n            e.setAttribute(BezahlendePersonAttribute, b.bezahlendePersonName);\n            e.setAttribute(EmpfaengerAttribute, b.empfaenger);\n            e.setAttribute(StatusAttribute, b.status)\n        });\n    }\n\n    set title(t: string) {\n        this.titleElement.innerText = t;\n    }\n\n}\nexport const BezahlungenGroupTagName = \"bezahlungen-group\";\ncustomElements.define(BezahlungenGroupTagName, BezahlungenGroup);\n","import template from \"./BezahlungenView.html\";\nimport \"./BezahlungenView.scss\";\nimport \"../BezahlungCard/BezahlungCard\";\nimport { Bezahlung, Person } from \"../../state/State\";\nimport { addDays, startOfToday, startOfDay, startOfWeek, endOfWeek } from \"date-fns\";\nimport { groupBy } from \"../../utils/groupBy\";\nimport \"./BezahlungenGroup\";\nimport { BezahlungViewModel } from \"./BezahlungViewModel\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BezahlungenGroup } from \"./BezahlungenGroup\";\n\nexport class BezahlungenView extends HTMLElement {\n    private minEintraege: number;\n    private minTage: number;\n    private all: boolean;\n    private bezahlungen: Bezahlung[];\n    private personen: Person[];\n    private bezahlungenContainer: HTMLDivElement;\n    private showMoreButton: HTMLButtonElement;\n    private groupRenderer: ArrayToElementRenderer<[number, BezahlungViewModel[]], BezahlungenGroup, string>;\n\n    constructor() {\n        super();\n        this.minTage = 3;\n        this.minEintraege = 20;\n        this.all = false;\n        this.innerHTML = template;\n        this.bezahlungenContainer = this.querySelector(\"#bezahlungen-container\");\n        this.showMoreButton = this.querySelector(\"#show-more\");\n        this.showMoreClick = this.showMoreClick.bind(this);\n        this.groupRenderer = new ArrayToElementRenderer(this.bezahlungenContainer,\n            (s: [number, BezahlungViewModel[]]) => \"\" + s[0], () => new BezahlungenGroup());\n    }\n\n    connectedCallback() {\n        this.showMoreButton.addEventListener(\"click\", this.showMoreClick);\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private setShowMoreButtonDisplay() {\n        if (this.bezahlungen) {\n            this.showMoreButton.style.display = this.bezahlungen.length > this.anzahlEintraege ? \"inline\" : \"none\";\n        }\n    }\n\n    showMoreClick() {\n        let last: BezahlungenGroup = <BezahlungenGroup>this.bezahlungenContainer.lastElementChild;\n        this.anzahlEintraege += 20;\n        if (last) {\n            last.scrollIntoView();\n        }\n        this.setShowMoreButtonDisplay();\n    }\n\n    private formatEmpfaenger(z: Bezahlung, personen: Person[]) {\n        if (z.empfaengerIds.length == personen.length) {\n            return \"alle\";\n        }\n        return z.empfaengerIds.map(id => personen.find(p => p.id == id).name).join(\", \");\n    }\n\n    setBezahlungen(bezahlungen: Bezahlung[], personen: Person[]) {\n        this.bezahlungen = bezahlungen;\n        this.personen = personen;\n        this.setShowMoreButtonDisplay();\n        this.render();\n    }\n\n    private render() {\n        let sorted = this.bezahlungen.sort((a, b) => +b.zeitpunkt - +a.zeitpunkt);\n\n        let filtered = sorted;\n        if (!this.all) {\n            filtered = sorted.filter(z => z.zeitpunkt > addDays(startOfToday(), -this.minTage));\n            if (filtered.length < this.minEintraege) {\n                filtered = sorted.slice(0, this.minEintraege)\n            }\n        }\n\n        let mapped = filtered.map(z => {\n            let x: BezahlungViewModel = {\n                bezahlendePersonName: this.personen.find(p => p.id == z.bezahlendePersonId).name,\n                wert: z.wert,\n                beschreibung: z.beschreibung,\n                empfaenger: this.formatEmpfaenger(z, this.personen),\n                tag: +startOfDay(z.zeitpunkt),\n                id: z.id,\n                woche: +startOfWeek(z.zeitpunkt),\n                status: z.status\n            };\n            return x;\n        });\n\n        let isWeek = false;\n        let grouped = Array.of(...groupBy(mapped, \"tag\").entries());\n        let avgGroupSize = grouped.reduce((p, c) => p + c[1].length, 0) / grouped.length;\n        if (avgGroupSize < 3) {\n            grouped = Array.of(...groupBy(mapped, \"woche\").entries());\n            isWeek = true;\n        }\n        let sortedGroups = grouped.sort((a, b) => b[0] - a[0]);\n        this.groupRenderer.update(sortedGroups,\n            (e, d) => {\n                e.setBezahlungen(d[1]);\n                if (isWeek) {\n                    e.title = this.formatWeek(new Date(d[0]));\n                }\n                else {\n\n                    e.title = this.formatDay(new Date(d[0]));\n                }\n            });\n\n    }\n\n    get anzahlEintraege() {\n        return this.minEintraege;\n    }\n\n    set anzahlEintraege(val: number) {\n        this.minEintraege = val;\n        this.render();\n    }\n\n\n    private formatWeek(date: Date) {\n        let endWeek = endOfWeek(date);\n        let weekformat: string;\n        const dayAndMonth = (d: Date) => new Intl.DateTimeFormat([\"de-AT\"], { day: \"numeric\", month: \"long\" }).format(d);\n        if (endWeek.getMonth() == date.getMonth()) {\n            weekformat = `${new Intl.DateTimeFormat([\"de-AT\"], { day: \"numeric\" }).format(date)}. - ${dayAndMonth(endWeek)}`;\n        }\n        else {\n            weekformat = `${dayAndMonth(date)} - ${dayAndMonth(endWeek)}`;\n        }\n        return weekformat;\n    }\n\n    private formatDay(date: Date) {\n        return new Intl.DateTimeFormat([\"de-AT\"], { weekday: \"short\", year: \"numeric\", month: \"2-digit\", day: \"2-digit\" }).format(date);\n    }\n}\nexport const BezahlungenViewTagName = \"bezahlungen-view\";\ncustomElements.define(BezahlungenViewTagName, BezahlungenView);\n","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case 0 /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case 1 /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case 2 /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case 3 /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case 4 /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case 5 /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === 5 /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: 5 /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: 0 /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: 1 /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: 4 /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 2 /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 3 /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: 3 /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: 0 /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case 3 /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case 0 /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import { Store } from \"../Store\";\nimport { ApiClient } from \"../../api/ApiClient\";\nimport { Action } from \"../lib/Action\";\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\nimport { Bezahlung, BezahlungStatus } from \"../State\";\ntype KontokorrentWorkerApi = import(\"../../worker/KontokorrentWorker\").KontokorrentWorkerApi;\nimport { wrap } from \"comlink\";\nimport { filterBezahlungen } from \"../../lib/filterBezahlungen\";\nimport { KontokorrentBalance } from \"../../lib/KontokorrentBalance\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { ActionNames } from \"./ActionNames\";\n\nexport class KontokorrentGeoeffnet implements Action {\n    readonly type = ActionNames.KontokorrentGeoeffnet;\n    constructor(public id: string) {\n\n    }\n}\n\nexport class KontokorrentBezahlungen implements Action {\n    readonly type = ActionNames.KontokorrentBezahlungen;\n    constructor(public kontokorrentId: string, public bezahlungen: Bezahlung[]) {\n\n    }\n}\n\nexport class KontokorrentSynchronisieren implements Action {\n    readonly type = ActionNames.KontokorrentSynchronisieren;\n    constructor(public kontokorrentId: string) {\n\n    }\n}\n\nexport class KontokorrentSynchronisiert implements Action {\n    readonly type = ActionNames.KontokorrentSynchronisiert;\n    constructor(public kontokorrentId: string) {\n\n    }\n}\n\nexport class KontokorrentBalanceAktualisiert implements Action {\n    readonly type = ActionNames.KontokorrentBalanceAktualisiert;\n    constructor(public kontokorrentId: string, public balance: KontokorrentBalance) {\n\n    }\n}\n\nexport type KontokorrentActions =\n    | KontokorrentGeoeffnet\n    | KontokorrentBezahlungen\n    | KontokorrentSynchronisieren\n    | KontokorrentSynchronisiert\n    | KontokorrentBalanceAktualisiert;\n\nexport class KontokorrentActionCreator {\n    private workerApi: KontokorrentWorkerApi;\n    constructor(private store: Store,\n        private apiClient: ApiClient,\n        private db: KontokorrentDatabase) {\n\n    }\n    private async refreshBezahlungen(id: string) {\n        let aktionen = filterBezahlungen(await this.db.getAktionen(id)).map(b => {\n            return {\n                ...b,\n                status: BezahlungStatus.Gespeichert\n            };\n        });\n        let zwischengespeicherte = (await this.db.getZwischengespeicherteBezahlungenForKontokorrent(id)).map(b => {\n            let x: Bezahlung = {\n                status: BezahlungStatus.Zwischengespeichert,\n                beschreibung: b.beschreibung,\n                bezahlendePersonId: b.bezahlendePersonId,\n                empfaengerIds: b.empfaengerIds,\n                id: b.id,\n                wert: b.wert,\n                zeitpunkt: b.zeitpunkt\n            };\n            return x;\n        });\n        this.store.dispatch(new KontokorrentBezahlungen(id, [...aktionen, ...zwischengespeicherte]));\n    }\n\n    private async calculateBalance(id: string) {\n        let balance = await (await this.getWorkerApi()).calculateBalance(id);\n        this.store.dispatch(new KontokorrentBalanceAktualisiert(id, balance));\n    }\n\n    private async refreshKontokorrent(id: string) {\n        await Promise.all([this.refreshBezahlungen(id), this.calculateBalance(id)]);\n    }\n\n    private async kontokorrentSynchronisieren(id: string) {\n        this.store.dispatch(new KontokorrentSynchronisieren(id));\n        let laufendeNummer = await (await this.getWorkerApi()).getLaufendeNummer(id);\n        let res = await this.apiClient.getAktionen(id, laufendeNummer);\n        if (res.success) {\n            await this.db.addAktionen(id, res.aktionen);\n            if (res.aktionen.length > 0) {\n                await this.refreshKontokorrent(id);\n            }\n        }\n        this.store.dispatch(new KontokorrentSynchronisiert(id));\n    }\n\n    private async getWorkerApi() {\n        if (this.workerApi) {\n            return this.workerApi;\n        }\n        const worker = new Worker(new URL(\"../../worker/KontokorrentWorker\", import.meta.url));\n        this.workerApi = wrap<KontokorrentWorkerApi>(worker);\n        return this.workerApi;\n    }\n\n    async kontokorrentOeffnen(id: string) {\n        let kk = await this.db.getKontokorrent(id);\n        if (null != kk) {\n            this.store.dispatch(new KontokorrentGeoeffnet(id));\n            let tasks = [];\n            tasks.push(this.db.setZuletztGesehenerKontokorrentId(id));\n            tasks.push(this.refreshKontokorrent(id));\n            tasks.push(this.kontokorrentSynchronisieren(id));\n            await Promise.all(tasks);\n        }\n    }\n}\n\nexport function kontokorrentActionCreatorFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"KontokorrentActionCreator\",\n        serviceLocator => new KontokorrentActionCreator(\n            serviceLocator.store,\n            serviceLocator.apiClient,\n            serviceLocator.db\n        ));\n}","import { BezahlungDbModel } from \"./BezahlungDbModel\";\nimport { AktionDbModel } from \"./AktionDbModel\";\n\nexport function filterBezahlungen(aktionen: AktionDbModel[]) {\n    let bezahlungenMap: { [id: string]: BezahlungDbModel } = {};\n    let ordered = aktionen.sort((a,b)=> a.laufendeNummer - b.laufendeNummer);\n    for (let b of ordered) {\n        if (b.bearbeiteteBezahlungId) {\n            delete bezahlungenMap[b.bearbeiteteBezahlungId];\n        }\n        if (b.geloeschteBezahlungId) {\n            delete bezahlungenMap[b.geloeschteBezahlungId];\n        }\n        else {\n            bezahlungenMap[b.bezahlung.id] = b.bezahlung;\n        }\n    }\n    let bezahlungen = Object.values(bezahlungenMap);\n    return bezahlungen;\n}","import template from \"./KontokorrentPage.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { KontokorrentState, State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport \"../BalanceAnzeige/BalanceAnzeigeElement\";\nimport { BalanceAnzeige } from \"../BalanceAnzeige/BalanceAnzeige\";\nimport \"../BalanceAnzeige/BalanceAnzeige\";\nimport \"../BezahlungenView/BezahlungenView\";\nimport { BezahlungenView } from \"../BezahlungenView/BezahlungenView\";\nimport \"./KontokorrentPage.scss\";\nimport { KontokorrentActionCreator, kontokorrentActionCreatorFactory } from \"../../state/actions/KontokorrentActionCreator\";\nimport { KontokorrentListenActionCreator, kontokorrentListenActionCreatorFactory } from \"../../state/actions/KontokorrentListenActionCreator\";\n\nexport class KontokorrentPage extends HTMLElement {\n    private store: Store;\n    private subscription: () => void;\n    private routingActionCreator: RoutingActionCreator;\n    private kontokorrentActionCreator: KontokorrentActionCreator;\n    private appBar: AppBar;\n    private balanceAnzeige: BalanceAnzeige;\n    private bezahlungenView: BezahlungenView;\n    private kontokorrentSpinner: HTMLSpanElement;\n    private kontokorrent: KontokorrentState;\n    private kontokorrentIdParameter: string;\n    private kontokorrentListenActionCreator: KontokorrentListenActionCreator;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.appBar = this.querySelector(AppBarTagName);\n        this.balanceAnzeige = this.querySelector(\"#balance-anzeige\");\n        this.bezahlungenView = this.querySelector(\"#bezahlungen-view\");\n        this.kontokorrentSpinner = this.querySelector(\"#spinner\");\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.kontokorrentActionCreator = kontokorrentActionCreatorFactory(serviceLocator);\n        this.kontokorrentListenActionCreator = kontokorrentListenActionCreatorFactory(serviceLocator);\n        this.appBar.addServices(serviceLocator);\n    }\n\n    connectedCallback() {\n        if (!this.kontokorrentIdParameter) {\n            this.kontokorrentListenActionCreator.navigiereZuLetztGesehenem(true);\n        }\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.appBar.addEventListener(\"gotokontokorrent\", (e: CustomEvent) => {\n            this.routingActionCreator.navigateKontokorrent(e.detail);\n        });\n        convertLinks(this.querySelectorAll(\"#eintragen-desktop, #eintragen-mobile\"), this.routingActionCreator);\n        this.applyStoreState(this.store.state);\n    }\n\n    private applyStoreState(state: State) {\n        this.kontokorrent = state.kontokorrents.kontokorrents[state.kontokorrents.activeKontokorrentId];\n        if (this.kontokorrent) {\n            document.title = `${this.kontokorrent.name} - Kontokorrent`;\n            if (this.kontokorrent.personen) {\n                this.balanceAnzeige.setBalance(this.kontokorrent.personen);\n                this.bezahlungenView.setBezahlungen(this.kontokorrent.bezahlungen, this.kontokorrent.personen);\n            }\n            this.kontokorrentSpinner.style.display = this.kontokorrent.synchronisieren ? \"flex\" : \"none\";\n        }\n    }\n\n    setRouteParameters(id: string) {\n        this.kontokorrentActionCreator.kontokorrentOeffnen(id);\n        this.kontokorrentIdParameter = id;\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n    }\n}\n\ncustomElements.define('kontokorrent-page', KontokorrentPage);\n","import { RoutingActionCreator } from \"../state/actions/RoutingActionCreator\";\n\nexport function convertLinks(elements: Array<HTMLAnchorElement> | NodeListOf<HTMLAnchorElement>, routingActionCreator: RoutingActionCreator) {\n    elements.forEach((e: HTMLAnchorElement) => {\n        e.addEventListener(\"click\", ev => {\n            ev.preventDefault();\n            routingActionCreator.navigate(e.getAttribute(\"href\"));\n        });\n    });\n}","export class Popup extends HTMLElement {\n    private popupShown: boolean = false;\n    constructor() {\n        super();\n        this.keyListener = this.keyListener.bind(this);\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    connectedCallback() {\n        this.updateStyles();\n    }\n\n    private keyListener(ev: KeyboardEvent) {\n        if (ev.key == \"Escape\") {\n            this.hide();\n        }\n    }\n\n    private clickListener(ev: MouseEvent | TouchEvent) {\n        if (!this.contains(<Element>(event.target))) {\n            this.hide();\n        }\n    }\n\n    public hide() {\n        if (this.popupShown) {\n            document.removeEventListener(\"keydown\", this.keyListener);\n            document.removeEventListener(\"click\", this.clickListener);\n            this.popupShown = false;\n            this.updateStyles();\n        }\n    }\n\n    public show() {\n        if (!this.popupShown) {\n            document.addEventListener(\"keydown\", this.keyListener);\n            document.addEventListener(\"click\", this.clickListener);\n            this.popupShown = true;\n            this.updateStyles();\n        }\n    }\n\n    private updateStyles() {\n        this.style.display = this.popupShown ? \"block\" : \"none\";\n    }\n\n    public toggle() {\n        if (!this.popupShown) {\n            this.show();\n        }\n        else {\n            this.hide();\n\n        }\n    }\n\n    disconnectedCallback() {\n        this.hide();\n    }\n}\ncustomElements.define(\"app-popup\", Popup);\n","export class ArrayToElementRenderer<T, E extends Element, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n    \n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find(i => this.elementToKey.get(el) == getKey(i));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let t of list) {\n            let key = getKey(t);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}","export class ReuseableTemplate {\n    private instance: HTMLTemplateElement;\n    constructor(private readonly template: string) {\n    }\n\n    get(): DocumentFragment {\n        if (null == this.instance) {\n            this.instance = document.createElement(\"template\");\n            this.instance.innerHTML = this.template;\n        }\n        return document.importNode(this.instance.content, true);\n    }\n}\n"],"sourceRoot":""}