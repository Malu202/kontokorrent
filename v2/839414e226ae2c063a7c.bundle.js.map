{"version":3,"file":"839414e226ae2c063a7c.bundle.js","mappings":"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","sources":["webpack://kontokorrent/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/toDate/index.js","webpack://kontokorrent/./src/components/AppBar/AppBar.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.html","webpack://kontokorrent/./src/components/AppBar/AppBar.ts","webpack://kontokorrent/./src/components/KontokorrentPage/KontokorrentPage.html","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeigeElement.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeigeElement.html","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeige.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeige.html","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenView.html","webpack://kontokorrent/./src/components/BezahlungCard/BezahlungCard.ts","webpack://kontokorrent/./src/components/BezahlungCard/BezahlungCard.html","webpack://kontokorrent/./node_modules/date-fns/esm/startOfWeek/index.js","webpack://kontokorrent/./src/utils/groupBy.ts","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenGroup.ts","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenGroup.html","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenView.ts","webpack://kontokorrent/./node_modules/date-fns/esm/addDays/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfToday/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/endOfWeek/index.js","webpack://kontokorrent/./src/state/actions/KontokorrentActionCreator.ts","webpack://kontokorrent/./src/components/KontokorrentPage/KontokorrentPage.ts","webpack://kontokorrent/./src/components/convertLinks.ts","webpack://kontokorrent/./src/components/ui-components/popup/popup.ts","webpack://kontokorrent/./src/lib/WorkerService.ts","webpack://kontokorrent/./src/utils/ArrayToElementRenderer.ts","webpack://kontokorrent/./src/utils/ReuseableTemplate.ts","webpack://kontokorrent/./src/utils/formatCurrency.ts","webpack://kontokorrent/./src/utils/round.ts"],"sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","// Module\nvar code = \"<header class=\\\"app-bar\\\"> <kontokorrent-select class=\\\"app-bar__kontokorrent-select\\\"></kontokorrent-select> <nav class=\\\"app-bar__links\\\"> <button id=\\\"logout-button\\\" class=\\\"app-bar__link\\\" title=\\\"Logout\\\"> <span class=\\\"material-icons\\\"> exit_to_app </span> </button> <a href=\\\"info\\\" class=\\\"app-bar__link\\\" title=\\\"Informationen über diese App\\\"> <span class=\\\"material-icons\\\"> info </span> </a> </nav> </header> <app-popup id=\\\"logout-dialog\\\"> <div class=\\\"dialog__backdrop\\\"></div> <div class=\\\"dialog\\\"> <p> Wirklich aus allen Kontokorrents ausloggen? </p> <div class=\\\"dialog__button-pane\\\"> <button id=\\\"abort-logout\\\" class=\\\"button\\\">Abbrechen</button> <button id=\\\"confirm-logout\\\" class=\\\"button\\\">Ausloggen</button> </div> </div> </app-popup>\";\n// Exports\nexport default code;","import template from \"./KontokorrentSelectListEntry.html\";\nimport { KontokorrentState } from \"../../state/State\";\n\n\nexport class KontokorrentSelectListEntry extends HTMLElement {\n    private name: HTMLSpanElement;\n    private link: HTMLAnchorElement;\n    private kontokorrent: KontokorrentState;\n    private rendered = false;\n    private isActive: boolean = false;\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.name = this.querySelector(`[data-ref=\"name\"]`);\n            this.link = this.querySelector(`[data-ref=\"link\"]`);\n            this.updateStyle();\n        }\n        this.clickEvent = this.clickEvent.bind(this);\n        this.link.addEventListener(\"click\", this.clickEvent);\n    }\n\n    private clickEvent(e: MouseEvent): void {\n        e.preventDefault();\n        this.dispatchEvent(new CustomEvent(\"gotokontokorrent\", { detail: this.kontokorrent.id, bubbles: true }));\n    }\n\n    disconnectedCallback() {\n        this.link.removeEventListener(\"click\", this.clickEvent);\n    }\n\n    update(kontokorrent: KontokorrentState, isActive: boolean) {\n        this.kontokorrent = kontokorrent;\n        this.isActive = isActive;\n        this.updateStyle();\n    }\n\n    private updateStyle() {\n        if (this.rendered && this.kontokorrent) {\n            this.name.innerText = this.kontokorrent.name;\n            this.link.href = `kontokorrents/${this.kontokorrent.id}`;\n            this.link.classList.toggle(\"kontokorrent-select-list__entry--active\", this.isActive);\n        }\n    }\n}\nexport const KontokorrentSelectListEntryTagName = \"kontokorrent-select-list-entry\";\ncustomElements.define(KontokorrentSelectListEntryTagName, KontokorrentSelectListEntry);\n","// Module\nvar code = \"<a data-ref=\\\"link\\\" class=\\\"kontokorrent-select-list__entry\\\"> <span data-ref=\\\"name\\\"></span> </a>\";\n// Exports\nexport default code;","import template from \"./KontokorrentSelectList.html\";\nimport \"./KontokorrentSelectList.scss\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { sortByAlphabetically } from \"../../utils/sortBy\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { KontokorrentSelectListEntry } from \"./KontokorrentSelectListEntry\";\n\nexport class KontokorrentSelectList extends HTMLElement {\n    private list: HTMLOListElement;\n    private _kontokorrents: KontokorrentState[];\n    private _activeKontokorrentId: string;\n    private kontokorrentsRenderer: ArrayToElementRenderer<KontokorrentState, HTMLLIElement, string>;\n    private rendered = false;\n\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.list = this.querySelector(`[data-ref=\"list\"]`);\n            this._kontokorrents = [];\n            this.kontokorrentsRenderer = new ArrayToElementRenderer(this.list,\n                (k: KontokorrentState) => k.id,\n                () => {\n                    let li = document.createElement(\"li\");\n                    li.appendChild(new KontokorrentSelectListEntry());\n                    return li;\n                });\n            this.update();\n        }\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private update() {\n        if (this.rendered) {\n            this.kontokorrentsRenderer.update(this._kontokorrents,\n                (li, kontokorrent) => {\n                    let x: KontokorrentSelectListEntry = <KontokorrentSelectListEntry>li.firstChild;\n                    x.update(kontokorrent, this._activeKontokorrentId == kontokorrent.id);\n                });\n        }\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this._kontokorrents = sortByAlphabetically(kontokorrents, k => k.name);\n        this.update();\n    }\n\n    set activeKontokorrentId(id: string) {\n        this._activeKontokorrentId = id;\n        this.update();\n    }\n}\nexport const KontokorrentSelectListTagName = \"kontokorrent-select-list\";\ncustomElements.define(KontokorrentSelectListTagName, KontokorrentSelectList);\n","// Module\nvar code = \"<ol data-ref=\\\"list\\\" class=\\\"kontokorrent-select-list\\\"> </ol>\";\n// Exports\nexport default code;","import template from \"./KontokorrentSelect.html\";\nimport \"./KontokorrentSelect.scss\";\nimport \"./KontokorrentSelectList\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { KontokorrentSelectListTagName, KontokorrentSelectList } from \"./KontokorrentSelectList\";\nimport { Popup } from \"../ui-components/popup/popup\";\nimport \"../ui-components/popup/popup\";\n\nexport class KontokorrentSelect extends HTMLElement {\n    private kontokorrentName: HTMLHeadingElement;\n    private popup: Popup;\n    private kontokorrentSelectList: KontokorrentSelectList;\n    private addButton: HTMLButtonElement;\n    private activeKontokorrentId: string;\n    private _kontokorrents: KontokorrentState[] = null;\n    private rendered = false;\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.kontokorrentName = this.querySelector(`[data-ref=\"kontokorrent-name\"]`);\n            this.kontokorrentSelectList = this.querySelector(KontokorrentSelectListTagName);\n            this.addButton = this.querySelector(`#add-kontokorrent`);\n            this.popup = this.querySelector(`app-popup`);\n        }\n        this.updateAttributes();\n        this.addEventListener(\"click\", e => {\n            if (!this.popup.contains(<Element>(event.target))) {\n                this.popup.toggle();\n                e.stopPropagation();\n            }\n        });\n        this.addButton.addEventListener(\"click\", e => {\n            this.dispatchEvent(new CustomEvent(\"addkontokorrent\"));\n        });\n        this.kontokorrentSelectList.addEventListener(\"gotokontokorrent\", () => {\n            this.popup.hide();\n        })\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.activeKontokorrentId = this.getAttribute(\"active-kontokorrent-id\");\n        this.kontokorrentSelectList.activeKontokorrentId = this.activeKontokorrentId;\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [\"active-kontokorrent-id\"];\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this.kontokorrentSelectList.kontokorrents = kontokorrents;\n        this._kontokorrents = kontokorrents;\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        if (this.rendered && this._kontokorrents && this._kontokorrents.length) {\n            let activeKontokorrent = this._kontokorrents.find(k => k.id == this.activeKontokorrentId);\n            if (activeKontokorrent) {\n                this.kontokorrentName.innerText = activeKontokorrent.name;\n                this.kontokorrentName.classList.remove(\"kontokorrent-select__name--unselected\");\n            }\n            else {\n                this.kontokorrentName.innerText = \"(Kontokorrent wählen)\";\n                this.kontokorrentName.classList.add(\"kontokorrent-select__name--unselected\");\n            }\n        }\n    }\n\n}\nexport const KontokorrentSelectTagName = \"kontokorrent-select\";\ncustomElements.define(KontokorrentSelectTagName, KontokorrentSelect);\n","// Module\nvar code = \"<div class=\\\"kontokorrent-select-wrapper\\\"> <div class=\\\"kontokorrent-select\\\"> <h1 data-ref=\\\"kontokorrent-name\\\" class=\\\"kontokorrent-select__name\\\">Kontokorrent</h1> <button class=\\\"kontokorrent-select__choose\\\" title=\\\"anderen Kontokorrent wählen\\\"> <span class=\\\"material-icons\\\"> arrow_drop_down </span> </button> </div> <app-popup class=\\\"kontokorrent-select__popup\\\"> <kontokorrent-select-list></kontokorrent-select-list> <div class=\\\"kontokorrent-select__buttons\\\"> <button id=\\\"add-kontokorrent\\\" class=\\\"button\\\">weiteren hinzufügen</button> </div> </app-popup> </div>\";\n// Exports\nexport default code;","import template from \"./AppBar.html\";\nimport \"./AppBar.scss\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { convertLinks } from \"../convertLinks\";\nimport \"../KontokorrentSelect/KontokorrentSelect\";\nimport { KontokorrentSelectTagName, KontokorrentSelect } from \"../KontokorrentSelect/KontokorrentSelect\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { AccountActionCreator, accountActionCreatorFactory } from \"../../state/actions/AccountActionCreator\";\nimport { Store } from \"../../state/Store\";\nimport { State } from \"../../state/State\";\nimport { Popup } from \"../ui-components/popup/popup\";\n\nexport class AppBar extends HTMLElement {\n    private kontokorrentSelect: KontokorrentSelect;\n    private store: Store;\n    private routingActionCreator: RoutingActionCreator;\n    private accountActionCreator: AccountActionCreator;\n    private logoutDialog: Popup;\n    private subscription: () => void;\n    private rendered: boolean = false;\n\n\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.kontokorrentSelect = this.querySelector(KontokorrentSelectTagName);\n            this.logoutDialog = this.querySelector(\"#logout-dialog\");\n            if (this.store) {\n                this.applyStoreState(this.store.state);\n            }\n        }\n        this.querySelector(\"#logout-button\").addEventListener(\"click\", (e: MouseEvent) => {\n            this.logoutDialog.toggle();\n            e.stopPropagation();\n        });\n        this.querySelector(\"#confirm-logout\").addEventListener(\"click\", async () => {\n            await this.accountActionCreator.logout();\n        });\n        this.querySelector(\"#abort-logout\").addEventListener(\"click\", () => {\n            this.logoutDialog.hide();\n        });\n        this.querySelectorAll(\"a\").forEach((e: HTMLAnchorElement) => {\n            e.addEventListener(\"click\", ev => {\n                ev.preventDefault();\n                this.routingActionCreator.navigate(e.getAttribute(\"href\"));\n            });\n        });\n\n        this.kontokorrentSelect.addEventListener(\"addkontokorrent\", () => {\n            this.routingActionCreator.navigateLogin();\n        });\n    }\n\n    private applyStoreState(state: State): void {\n        if (this.rendered) {\n            this.kontokorrentSelect.kontokorrents = Object.values(state.kontokorrents.kontokorrents);\n            this.kontokorrentSelect.setAttribute(\"active-kontokorrent-id\", state.kontokorrents.activeKontokorrentId);\n        }\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.accountActionCreator = accountActionCreatorFactory(serviceLocator);\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n    }\n\n    disconnectedCallback() {\n        if (this.subscription) {\n            this.subscription();\n            this.subscription = null;\n        }\n\n    }\n}\nexport const AppBarTagName = \"app-bar\";\ncustomElements.define(AppBarTagName, AppBar);\n","// Module\nvar code = \"<app-bar></app-bar> <div style=\\\"display:none\\\" id=\\\"login-expired\\\">Google-Login abgelaufen: zum Synchronisieren neu anmelden</div> <balance-anzeige id=\\\"balance-anzeige\\\"></balance-anzeige> <div class=\\\"kontokorrentpage-menu\\\"> <a id=\\\"eintragen-desktop\\\" class=\\\"floating-action-button floating-action-button--embed\\\" href=\\\"eintragen\\\"> <span class=\\\"material-icons\\\"> add </span> eintragen </a> <span class=\\\"kontokorrentpage-menu__sync-display\\\" id=\\\"spinner\\\" style=\\\"display:none\\\"> <div class=\\\"spinner\\\"></div> synchronisieren </span> </div> <bezahlungen-view id=\\\"bezahlungen-view\\\"></bezahlungen-view> <a id=\\\"eintragen-mobile\\\" class=\\\"floating-action-button floating-action-button--fixed\\\" href=\\\"eintragen\\\"> <span class=\\\"material-icons\\\"> add </span> eintragen </a>\";\n// Exports\nexport default code;","import templateContent from \"./BalanceAnzeigeElement.html\";\nimport \"./BalanceAnzeigeElement.scss\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { ReuseableTemplate, TemplateInstance } from \"../../utils/ReuseableTemplate\";\n\nexport const PersonNameAttribute = \"person-name\";\nexport const BalanceAttribute = \"balance\";\nexport const BalanceRangeAttribute = \"balance-range\";\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class BalanceAnzeigeElement extends HTMLElement {\n    private personName: string;\n    private balance: number;\n    private personNameElement: HTMLSpanElement;\n    private balanceTextElement: HTMLSpanElement;\n    private balanceRange: number;\n    private barElement: HTMLDivElement;\n    private balanceContainerElement: HTMLSpanElement;\n    private templateInstance: TemplateInstance;\n\n    constructor() {\n        super();\n        this.templateInstance = template.getInstance();\n    }\n\n    connectedCallback() {\n        if (this.templateInstance.apply(this)) {\n            this.personNameElement = this.querySelector(`[data-ref=\"person-name\"]`);\n            this.balanceTextElement = this.querySelector(`[data-ref=\"balance-text\"]`);\n            this.balanceContainerElement = this.querySelector(`[data-ref=\"balance-container\"]`);\n            this.barElement = this.querySelector(`[data-ref=\"bar\"]`);\n            this.updatesStyle();\n        }\n        requestAnimationFrame(() => {\n            this.barElement.style.transform = `scaleY(0)`;\n            this.updatesStyle();\n        });\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.personName = this.getAttribute(PersonNameAttribute);\n        this.balance = parseFloat(this.getAttribute(BalanceAttribute));\n        this.balanceRange = Math.max(2, parseFloat(this.getAttribute(BalanceRangeAttribute)));\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [PersonNameAttribute, BalanceAttribute, BalanceRangeAttribute];\n    }\n\n    private updatesStyle() {\n        if (this.templateInstance.isApplied()) {\n            requestAnimationFrame(() => {\n                this.personNameElement.innerText = this.personName;\n                this.balanceTextElement.innerText = formatCurrency(this.balance);\n                let scale = Math.sign(this.balance) * Math.abs(this.balance) / this.balanceRange;\n                let balanceTransform = scale * 1.9;\n                this.barElement.style.transform = `scaleY(${scale})`;\n                this.balanceContainerElement.style.transform = Math.sign(this.balance) < 0 ? `translateY(calc(${balanceTransform}em - 150%))`\n                    : `translateY(calc(${balanceTransform}em + 50%))`;\n                if (scale > 0) {\n                    this.barElement.classList.add(\"balance-anzeige-element__bar--negative\");\n                    this.barElement.classList.remove(\"balance-anzeige-element__bar--positive\");\n                }\n                else {\n                    this.barElement.classList.remove(\"balance-anzeige-element__bar--negative\");\n                    this.barElement.classList.add(\"balance-anzeige-element__bar--positive\");\n                }\n            });\n        }\n    }\n\n}\nexport const BalanceAnzeigeElementTagName = \"balance-anzeige-element\";\ncustomElements.define(BalanceAnzeigeElementTagName, BalanceAnzeigeElement);\n","// Module\nvar code = \"<div class=\\\"balance-anzeige-element__graphic-container\\\"> <div class=\\\"balance-anzeige-element__bar\\\" data-ref=\\\"bar\\\"></div> <div class=\\\"balance-anzeige-element__horizontal-line\\\"></div> <span class=\\\"balance-anzeige-element__balance\\\" data-ref=\\\"balance-container\\\"> <span data-ref=\\\"balance-text\\\"></span>€ </span> </div> <div class=\\\"balance-anzeige-element__text-container\\\"> <span data-ref=\\\"person-name\\\" class=\\\"balance-anzeige-element__name\\\"></span> </div>\";\n// Exports\nexport default code;","import template from \"./BalanceAnzeige.html\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BalanceAnzeigeElement, PersonNameAttribute, BalanceAttribute, BalanceRangeAttribute } from \"./BalanceAnzeigeElement\";\nimport { Person } from \"../../state/State\";\n\nexport class BalanceAnzeige extends HTMLElement {\n    private balanceRange: number;\n    private personen: Person[] = [];\n    private personenRenderer: ArrayToElementRenderer<Person, HTMLElement, string>;\n    private rendered = false;\n\n    constructor() {\n        super();\n        this.personenRenderer = new ArrayToElementRenderer(this,\n            (b: Person) => b.id,\n            b => new BalanceAnzeigeElement());\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.updatesStyle();\n        }\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    setBalance(personen: Person[]) {\n        this.personen = personen;\n        this.balanceRange = Math.max(...Object.values(personen).map(v => Math.abs(v.balance)));\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        if (this.rendered) {\n            this.personenRenderer.update(this.personen,\n                (e, b) => {\n                    e.setAttribute(PersonNameAttribute, b.name);\n                    e.setAttribute(BalanceAttribute, \"\" + b.balance);\n                    e.setAttribute(BalanceRangeAttribute, \"\" + this.balanceRange);\n                });\n        }\n    }\n\n}\nexport const BalanceAnzeigeTagName = \"balance-anzeige\";\ncustomElements.define(BalanceAnzeigeTagName, BalanceAnzeige);\n","// Module\nvar code = \"<div class=\\\"balance-anzeige-element__graphic-container\\\"> <div class=\\\"balance-anzeige-element__bar\\\" data-ref=\\\"bar\\\"></div> <div class=\\\"balance-anzeige-element__horizontal-line\\\"></div> <span class=\\\"balance-anzeige-element__balance\\\" data-ref=\\\"balance-container\\\"> <span data-ref=\\\"balance-text\\\"></span>€ </span> </div> <div class=\\\"balance-anzeige-element__text-container\\\"> <span data-ref=\\\"person-name\\\" class=\\\"balance-anzeige-element__name\\\"></span> </div>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div id=\\\"bezahlungen-container\\\"> </div> <button id=\\\"show-more\\\" class=\\\"button\\\">Mehr anzeigen</button>\";\n// Exports\nexport default code;","import templateContent from \"./BezahlungCard.html\";\nimport \"./BezahlungCard.scss\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { ReuseableTemplate, TemplateInstance } from \"../../utils/ReuseableTemplate\";\nimport { BezahlungStatus } from \"../../state/State\";\n\nexport const BeschreibungAttribute = \"beschreibung\";\nexport const WertAttribute = \"wert\";\nexport const BezahlendePersonAttribute = \"bezahlende-person\";\nexport const EmpfaengerAttribute = \"empfaenger\";\nexport const StatusAttribute = \"status\";\nexport const BezahlungIdAttribute = \"bezahlung-id\";\n\ninterface AttributeStore {\n    bezahlendePerson: string;\n    beschreibung: string;\n    wert: number;\n    empfaenger: string;\n    status: string;\n}\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class BezahlungCard extends HTMLElement {\n    private attributeStore: AttributeStore;\n    private wertElement: HTMLSpanElement;\n    private empfaengerElement: HTMLSpanElement;\n    private bezahlendePersonElement: HTMLSpanElement;\n    private beschreibungElement: HTMLDivElement;\n    private doneElement: HTMLSpanElement;\n    private doneAllElement: HTMLSpanElement;\n    private syncElement: HTMLSpanElement;\n    private clickListener: (e: MouseEvent) => void;\n    private templateInstance: TemplateInstance;\n\n    constructor() {\n        super();\n        this.attributeStore = {\n            beschreibung: null,\n            bezahlendePerson: null,\n            empfaenger: null,\n            wert: null,\n            status: null\n        };\n        this.templateInstance = template.getInstance();\n    }\n\n    private onClick(e: MouseEvent) {\n        this.dispatchEvent(new CustomEvent(\"bezahlungclick\", { detail: this.getAttribute(BezahlungIdAttribute), bubbles: true }));\n    }\n\n    connectedCallback() {\n        if (this.templateInstance.apply(this)) {\n            this.setAttribute(\"title\", \"Bezahlung bearbeiten oder löschen\");\n            this.beschreibungElement = this.querySelector(`[data-ref=\"beschreibung\"]`);\n            this.bezahlendePersonElement = this.querySelector(`[data-ref=\"bezahlende-person\"]`);\n            this.empfaengerElement = this.querySelector(`[data-ref=\"empfaenger\"]`);\n            this.wertElement = this.querySelector(`[data-ref=\"wert\"]`);\n            this.doneElement = this.querySelector(`[data-ref=\"icon-done\"]`);\n            this.doneAllElement = this.querySelector(`[data-ref=\"icon-done-all\"]`);\n            this.syncElement = this.querySelector(`[data-ref=\"icon-sync\"]`);\n            this.updatesStyle();\n        }\n        this.clickListener = e => this.onClick(e);\n        this.addEventListener(\"click\", this.clickListener);\n    }\n\n    disconnectedCallback() {\n        this.removeEventListener(\"click\", this.clickListener);\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private checkChanged<K extends keyof AttributeStore>(prop: K, getAtt: () => AttributeStore[K]) {\n        let att = getAtt();\n        if (this.attributeStore[prop] != att) {\n            this.attributeStore[prop] = att;\n            return true;\n        }\n        return false;\n    }\n\n    private updateAttributes() {\n        let changed = [\n            this.checkChanged(\"bezahlendePerson\", () => this.getAttribute(BezahlendePersonAttribute)),\n            this.checkChanged(\"beschreibung\", () => this.getAttribute(BeschreibungAttribute)),\n            this.checkChanged(\"wert\", () => parseFloat(this.getAttribute(WertAttribute))),\n            this.checkChanged(\"empfaenger\", () => this.getAttribute(EmpfaengerAttribute)),\n            this.checkChanged(\"status\", () => this.getAttribute(StatusAttribute))\n        ].some(v => v);\n        if (changed) {\n            this.updatesStyle();\n        }\n    }\n\n    static get observedAttributes() {\n        return [BeschreibungAttribute, BezahlendePersonAttribute, WertAttribute, EmpfaengerAttribute, StatusAttribute];\n    }\n\n    private updatesStyle() {\n        if (this.templateInstance.isApplied()) {\n            this.beschreibungElement.innerText = this.attributeStore.beschreibung;\n            this.bezahlendePersonElement.innerText = this.attributeStore.bezahlendePerson;\n            this.wertElement.innerText = formatCurrency(this.attributeStore.wert);\n            this.empfaengerElement.innerText = this.attributeStore.empfaenger;\n            this.doneAllElement.style.display = this.attributeStore.status == BezahlungStatus.Gespeichert ? \"inline\" : \"none\";\n            this.doneElement.style.display = this.attributeStore.status == BezahlungStatus.Zwischengespeichert ? \"inline\" : \"none\";\n            this.syncElement.style.display = this.attributeStore.status == BezahlungStatus.Speichern ? \"inline\" : \"none\";\n        }\n    }\n\n}\nexport const BezahlungCardTagName = \"bezahlung-card\";\ncustomElements.define(BezahlungCardTagName, BezahlungCard);\n","// Module\nvar code = \"<div class=\\\"bezahlung-card__beschreibung\\\"> <div data-ref=\\\"beschreibung\\\"></div> <div class=\\\"bezahlung-card__personen\\\"> <span data-ref=\\\"bezahlende-person\\\"></span> für <span data-ref=\\\"empfaenger\\\"></span> </div> </div> <div class=\\\"bezahlung-card__col2\\\"> <div class=\\\"bezahlung-card__dummy\\\"></div> <div class=\\\"bezahlung-card__wert\\\"> <span data-ref=\\\"wert\\\"></span>€ </div> <div class=\\\"bezahlung-card__status\\\"> <span class=\\\"material-icons\\\" data-ref=\\\"icon-done\\\" style=\\\"display:none\\\" title=\\\"lokal zwischengespeichert\\\"> schedule </span> <span class=\\\"material-icons\\\" data-ref=\\\"icon-done-all\\\" style=\\\"display:none\\\" title=\\\"synchronisiert\\\"> done_all </span> <span class=\\\"material-icons\\\" data-ref=\\\"icon-sync\\\" style=\\\"display:none\\\" title=\\\"synchronisieren...\\\"> sync </span> </div> </div>\";\n// Exports\nexport default code;","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","export function groupBy<T, K extends keyof T>(list: T[], key: K) {\n    const map = new Map<T[K], T[]>();\n    list.forEach((item) => {\n        const k = item[key];\n        const collection = map.get(k);\n        if (!collection) {\n            map.set(k, [item]);\n        } else {\n            collection.push(item);\n        }\n    });\n    return map;\n}\n","import template from \"./BezahlungenGroup.html\";\nimport \"../BezahlungCard/BezahlungCard\";\nimport { BezahlungViewModel } from \"./BezahlungViewModel\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BeschreibungAttribute, BezahlendePersonAttribute, BezahlungCard, BezahlungIdAttribute, EmpfaengerAttribute, StatusAttribute, WertAttribute } from \"../BezahlungCard/BezahlungCard\";\n\nexport class BezahlungenGroup extends HTMLElement {\n    private container: HTMLDivElement;\n    private titleElement: HTMLHeadingElement;\n    private bezahlungenRenderer: ArrayToElementRenderer<BezahlungViewModel, BezahlungCard, string>;\n    private rendered = false;\n    private bezahlungen: BezahlungViewModel[] = [];\n    private _title: string = \"\";\n\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.container = this.querySelector(`[data-ref=\"container\"]`);\n            this.titleElement = this.querySelector(`[data-ref=\"title\"]`);\n            this.bezahlungenRenderer = new ArrayToElementRenderer(this.container,\n                (b: BezahlungViewModel) => b.id,\n                b => new BezahlungCard());\n            this.update();\n        }\n    }\n\n    disconnectedCallback() {\n\n    }\n\n\n    setBezahlungen(bezahlungen: BezahlungViewModel[]) {\n        this.bezahlungen = bezahlungen;\n        this.update();\n    }\n\n    set title(t: string) {\n        this._title = t;\n        this.update();\n    }\n\n    private update() {\n        if (this.rendered) {\n            this.bezahlungenRenderer.update(this.bezahlungen, (e, b) => {\n                e.setAttribute(BeschreibungAttribute, b.beschreibung);\n                e.setAttribute(WertAttribute, \"\" + b.wert);\n                e.setAttribute(BezahlendePersonAttribute, b.bezahlendePersonName);\n                e.setAttribute(EmpfaengerAttribute, b.empfaenger);\n                e.setAttribute(StatusAttribute, b.status);\n                e.setAttribute(BezahlungIdAttribute, b.id);\n            });\n            this.titleElement.innerText = this._title;\n        }\n    }\n\n}\nexport const BezahlungenGroupTagName = \"bezahlungen-group\";\ncustomElements.define(BezahlungenGroupTagName, BezahlungenGroup);\n","// Module\nvar code = \"<h3 data-ref=\\\"title\\\" class=\\\"bezahlungen-group__title\\\">Gruppe</h3> <div class=\\\"bezahlungen-group__container\\\" data-ref=\\\"container\\\"></div>\";\n// Exports\nexport default code;","import template from \"./BezahlungenView.html\";\nimport \"./BezahlungenView.scss\";\nimport \"../BezahlungCard/BezahlungCard\";\nimport { Bezahlung, Person } from \"../../state/State\";\nimport { addDays, startOfToday, startOfDay, startOfWeek, endOfWeek } from \"date-fns\";\nimport { groupBy } from \"../../utils/groupBy\";\nimport \"./BezahlungenGroup\";\nimport { BezahlungViewModel } from \"./BezahlungViewModel\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BezahlungenGroup } from \"./BezahlungenGroup\";\n\nexport class BezahlungenView extends HTMLElement {\n    private minEintraege: number;\n    private minTage: number;\n    private all: boolean;\n    private bezahlungen: Bezahlung[] = [];\n    private personen: Person[] = [];\n    private bezahlungenContainer: HTMLDivElement;\n    private showMoreButton: HTMLButtonElement;\n    private groupRenderer: ArrayToElementRenderer<[number, BezahlungViewModel[]], BezahlungenGroup, string>;\n    private templateApplied = false;\n    private scrollToElement: Element;\n\n    constructor() {\n        super();\n        this.minTage = 3;\n        this.minEintraege = 20;\n        this.all = false;\n    }\n\n    connectedCallback() {\n        if (!this.templateApplied) {\n            this.templateApplied = true;\n            this.innerHTML = template;\n            this.bezahlungenContainer = this.querySelector(\"#bezahlungen-container\");\n            this.showMoreButton = this.querySelector(\"#show-more\");\n            this.showMoreClick = this.showMoreClick.bind(this);\n            this.groupRenderer = new ArrayToElementRenderer(this.bezahlungenContainer,\n                (s: [number, BezahlungViewModel[]]) => \"\" + s[0], () => new BezahlungenGroup());\n            this.render();\n        }\n        this.showMoreButton.addEventListener(\"click\", this.showMoreClick);\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private setShowMoreButtonDisplay() {\n        if (this.bezahlungen) {\n            this.showMoreButton.style.display = this.bezahlungen.length > this.anzahlEintraege ? \"inline\" : \"none\";\n        }\n    }\n\n    private showMoreClick() {\n        let cards = this.bezahlungenContainer.lastElementChild.querySelectorAll(\"bezahlung-card\");\n        this.scrollToElement = cards[cards.length - 1];\n        this.anzahlEintraege += 20;\n\n        this.setShowMoreButtonDisplay();\n    }\n\n    private formatEmpfaenger(z: Bezahlung, personen: Person[]) {\n        if (z.empfaengerIds.length == personen.length) {\n            return \"alle\";\n        }\n        return z.empfaengerIds.map(id => personen.find(p => p.id == id).name).join(\", \");\n    }\n\n    setBezahlungen(bezahlungen: Bezahlung[], personen: Person[]) {\n        this.bezahlungen = bezahlungen;\n        this.personen = personen;\n        this.setShowMoreButtonDisplay();\n        this.render();\n    }\n\n    private render() {\n        if (this.templateApplied) {\n            let sorted = this.bezahlungen.sort((a, b) => +b.zeitpunkt - +a.zeitpunkt);\n\n            let filtered = sorted;\n            if (!this.all) {\n                filtered = sorted.filter(z => z.zeitpunkt > addDays(startOfToday(), -this.minTage));\n                if (filtered.length < this.minEintraege) {\n                    filtered = sorted.slice(0, this.minEintraege)\n                }\n            }\n\n            let mapped = filtered.map(z => {\n                let x: BezahlungViewModel = {\n                    bezahlendePersonName: this.personen.find(p => p.id == z.bezahlendePersonId).name,\n                    wert: z.wert,\n                    beschreibung: z.beschreibung,\n                    empfaenger: this.formatEmpfaenger(z, this.personen),\n                    tag: +startOfDay(z.zeitpunkt),\n                    id: z.id,\n                    woche: +startOfWeek(z.zeitpunkt),\n                    status: z.status\n                };\n                return x;\n            });\n\n            let isWeek = false;\n            let grouped = Array.of(...groupBy(mapped, \"tag\").entries());\n            let avgGroupSize = grouped.reduce((p, c) => p + c[1].length, 0) / grouped.length;\n            if (avgGroupSize < 3) {\n                grouped = Array.of(...groupBy(mapped, \"woche\").entries());\n                isWeek = true;\n            }\n            let sortedGroups = grouped.sort((a, b) => b[0] - a[0]);\n            this.groupRenderer.update(sortedGroups,\n                (e, d) => {\n                    e.setBezahlungen(d[1]);\n                    if (isWeek) {\n                        e.title = this.formatWeek(new Date(d[0]));\n                    }\n                    else {\n\n                        e.title = this.formatDay(new Date(d[0]));\n                    }\n                });\n            if (this.scrollToElement) {\n                this.scrollToElement.scrollIntoView({ behavior: \"smooth\" });\n                this.scrollToElement = null;\n            }\n        }\n    }\n\n    get anzahlEintraege() {\n        return this.minEintraege;\n    }\n\n    set anzahlEintraege(val: number) {\n        this.minEintraege = val;\n        this.render();\n    }\n\n\n    private formatWeek(date: Date) {\n        let endWeek = endOfWeek(date);\n        let weekformat: string;\n        const dayAndMonth = (d: Date) => new Intl.DateTimeFormat([\"de-AT\"], { day: \"numeric\", month: \"long\" }).format(d);\n        if (endWeek.getMonth() == date.getMonth()) {\n            weekformat = `${new Intl.DateTimeFormat([\"de-AT\"], { day: \"numeric\" }).format(date)}. - ${dayAndMonth(endWeek)}`;\n        }\n        else {\n            weekformat = `${dayAndMonth(date)} - ${dayAndMonth(endWeek)}`;\n        }\n        return weekformat;\n    }\n\n    private formatDay(date: Date) {\n        return new Intl.DateTimeFormat([\"de-AT\"], { weekday: \"short\", year: \"numeric\", month: \"2-digit\", day: \"2-digit\" }).format(date);\n    }\n}\nexport const BezahlungenViewTagName = \"bezahlungen-view\";\ncustomElements.define(BezahlungenViewTagName, BezahlungenView);\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import startOfDay from \"../startOfDay/index.js\";\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import { ServiceLocator } from \"../../ServiceLocator\";\nimport { WorkerService, workerServiceFactory } from \"../../lib/WorkerService\";\n\nexport class KontokorrentActionCreator {\n\n    constructor(private workerService: WorkerService) {\n\n    }\n\n    kontokorrentOeffnen(oeffentlicherName: string) {\n        this.workerService.kontokorrentOeffnen(oeffentlicherName);\n    }\n}\n\nexport function kontokorrentActionCreatorFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"KontokorrentActionCreator\",\n        serviceLocator => new KontokorrentActionCreator(\n            workerServiceFactory(serviceLocator)\n        ));\n}","import template from \"./KontokorrentPage.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { KontokorrentState, State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport \"../BalanceAnzeige/BalanceAnzeigeElement\";\nimport { BalanceAnzeige } from \"../BalanceAnzeige/BalanceAnzeige\";\nimport \"../BalanceAnzeige/BalanceAnzeige\";\nimport \"../BezahlungenView/BezahlungenView\";\nimport { BezahlungenView } from \"../BezahlungenView/BezahlungenView\";\nimport \"./KontokorrentPage.scss\";\nimport { KontokorrentActionCreator, kontokorrentActionCreatorFactory } from \"../../state/actions/KontokorrentActionCreator\";\nimport { KontokorrentListenActionCreator, kontokorrentListenActionCreatorFactory } from \"../../state/actions/KontokorrentListenActionCreator\";\n\nexport class KontokorrentPage extends HTMLElement {\n    private store: Store;\n    private subscription: () => void;\n    private routingActionCreator: RoutingActionCreator;\n    private kontokorrentActionCreator: KontokorrentActionCreator;\n    private appBar: AppBar;\n    private balanceAnzeige: BalanceAnzeige;\n    private bezahlungenView: BezahlungenView;\n    private kontokorrentSpinner: HTMLSpanElement;\n    private kontokorrent: KontokorrentState;\n    private kontokorrentListenActionCreator: KontokorrentListenActionCreator;\n    private bezahlungClickListener: (e: CustomEvent) => void;\n    private oeffentlicherNameParameter: string;\n    private rendered = false;\n    private serviceLocator: ServiceLocator;\n    private navigiertZuNichtGefunden = false;\n\n    constructor() {\n        super();\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.kontokorrentActionCreator = kontokorrentActionCreatorFactory(serviceLocator);\n        this.kontokorrentListenActionCreator = kontokorrentListenActionCreatorFactory(serviceLocator);\n        this.serviceLocator = serviceLocator;\n    }\n\n    private bezahlungClick(id: string) {\n        this.routingActionCreator.navigateBezahlung(this.kontokorrent.id, id);\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.appBar = this.querySelector(AppBarTagName);\n            this.appBar.addServices(this.serviceLocator);\n            this.balanceAnzeige = this.querySelector(\"#balance-anzeige\");\n            this.bezahlungenView = this.querySelector(\"#bezahlungen-view\");\n            this.kontokorrentSpinner = this.querySelector(\"#spinner\");\n        }\n        if (!this.oeffentlicherNameParameter) {\n            this.kontokorrentListenActionCreator.navigiereZuLetztGesehenem(true);\n        }\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.appBar.addEventListener(\"gotokontokorrent\", async (e: CustomEvent) => {\n            await this.routingActionCreator.navigateKontokorrentById(e.detail);\n        });\n        convertLinks(this.querySelectorAll(\"#eintragen-desktop, #eintragen-mobile\"), this.routingActionCreator);\n        this.applyStoreState(this.store.state);\n        this.bezahlungClickListener = e => this.bezahlungClick(e.detail);\n        this.bezahlungenView.addEventListener(\"bezahlungclick\", this.bezahlungClickListener);\n    }\n\n    private applyStoreState(state: State) {\n        this.kontokorrent = state.kontokorrents.kontokorrents[state.kontokorrents.activeKontokorrentId];\n        if (this.kontokorrent) {\n            document.title = `${this.kontokorrent.name} - Kontokorrent`;\n            if (this.kontokorrent.personen) {\n                this.balanceAnzeige.setBalance(this.kontokorrent.personen);\n                this.bezahlungenView.setBezahlungen(this.kontokorrent.bezahlungen, this.kontokorrent.personen);\n            }\n            this.kontokorrentSpinner.style.display = this.kontokorrent.synchronisieren ? \"flex\" : \"none\";\n        }\n        if (state.kontokorrents.nichtGefunden && !this.navigiertZuNichtGefunden) {\n            this.navigiertZuNichtGefunden = true;\n            this.routingActionCreator.navigateNichtGefunden(state.kontokorrents.nichtGefunden.oeffentlicherName);\n        }\n    }\n\n    setRouteParameters(oeffentlicherName: string) {\n        this.oeffentlicherNameParameter = oeffentlicherName;\n        this.kontokorrentActionCreator.kontokorrentOeffnen(oeffentlicherName);\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n        this.bezahlungenView.removeEventListener(\"bezahlungclick\", this.bezahlungClickListener);\n    }\n}\n\ncustomElements.define('kontokorrent-page', KontokorrentPage);\n","import { RoutingActionCreator } from \"../state/actions/RoutingActionCreator\";\n\nexport function convertLinks(elements: Array<HTMLAnchorElement> | NodeListOf<HTMLAnchorElement>, routingActionCreator: RoutingActionCreator) {\n    elements.forEach((e: HTMLAnchorElement) => {\n        e.addEventListener(\"click\", ev => {\n            ev.preventDefault();\n            routingActionCreator.navigate(e.getAttribute(\"href\"));\n        });\n    });\n}","export class Popup extends HTMLElement {\n    private popupShown: boolean = false;\n    constructor() {\n        super();\n        this.keyListener = this.keyListener.bind(this);\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    connectedCallback() {\n        this.updateStyles();\n    }\n\n    private keyListener(ev: KeyboardEvent) {\n        if (ev.key == \"Escape\") {\n            this.hide();\n        }\n    }\n\n    private clickListener(ev: MouseEvent | TouchEvent) {\n        if (!this.contains(<Element>(event.target))) {\n            this.hide();\n        }\n    }\n\n    public hide() {\n        if (this.popupShown) {\n            document.removeEventListener(\"keydown\", this.keyListener);\n            document.removeEventListener(\"click\", this.clickListener);\n            this.popupShown = false;\n            this.updateStyles();\n        }\n    }\n\n    public show() {\n        if (!this.popupShown) {\n            document.addEventListener(\"keydown\", this.keyListener);\n            document.addEventListener(\"click\", this.clickListener);\n            this.popupShown = true;\n            this.updateStyles();\n        }\n    }\n\n    private updateStyles() {\n        this.style.display = this.popupShown ? \"block\" : \"none\";\n    }\n\n    public toggle() {\n        if (!this.popupShown) {\n            this.show();\n        }\n        else {\n            this.hide();\n\n        }\n    }\n\n    disconnectedCallback() {\n        this.hide();\n    }\n}\ncustomElements.define(\"app-popup\", Popup);\n","import { ServiceLocator } from \"../ServiceLocator\";\nimport { Store } from \"../state/Store\";\nimport { GetBeschreibungVorschlaegeMessage, KontokorrentOeffnenMessage, ResetBeschreibungenCacheMessage, WorkerMessageType } from \"../worker/KontokorrentWorker\";\n\nexport class WorkerService {\n    constructor(private store: Store) {\n\n    }\n    private worker: Worker;\n\n    private getWorker() {\n        if (!this.worker) {\n            this.worker = new Worker(new URL(\"../worker/KontokorrentWorker\", import.meta.url));\n            this.worker.addEventListener(\"message\", ev => {\n                if (ev.data?.type == \"statedispatch\") {\n                    let msg = ev.data.msg;\n                    this.store.dispatch(msg);\n                }\n            });\n        }\n        return this.worker;\n    }\n\n    getBeschreibungVorschlaege(kontokorrentId: string, eingabe: string) {\n        let msg: GetBeschreibungVorschlaegeMessage = {\n            kontokorrentId: kontokorrentId,\n            type: WorkerMessageType.GetBeschreibungVorschlaege,\n            eingabe: eingabe\n        };\n        this.getWorker().postMessage(msg);\n    }\n\n    resetBeschreibungenCache() {\n        let msg: ResetBeschreibungenCacheMessage = {\n            type: WorkerMessageType.ResetBeschreibungenCache,\n        };\n        this.getWorker().postMessage(msg);\n    }\n\n    kontokorrentOeffnen(oeffentlicherName: string) {\n        let msg: KontokorrentOeffnenMessage = {\n            type: WorkerMessageType.KontokorrentOeffnen,\n            oeffentlicherName: oeffentlicherName\n        };\n        this.getWorker().postMessage(msg);\n    }\n}\n\nexport function workerServiceFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"WorkerService\",\n        serviceLocator => new WorkerService(serviceLocator.store));\n}","export class ArrayToElementRenderer<T, E extends Element, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n    \n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find(i => this.elementToKey.get(el) == getKey(i));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let t of list) {\n            let key = getKey(t);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}","export interface TemplateInstance {\n    apply(e: HTMLElement): boolean;\n    isApplied(): boolean;\n}\n\nexport class ReuseableTemplate {\n    private instance: HTMLTemplateElement;\n    constructor(private readonly template: string) {\n    }\n\n    private _get(): DocumentFragment {\n        if (null == this.instance) {\n            this.instance = document.createElement(\"template\");\n            this.instance.innerHTML = this.template;\n        }\n        return document.importNode(this.instance.content, true);\n    }\n\n    getInstance(): TemplateInstance {\n        class TemplateInstance {\n            private applied = false;\n\n            constructor(private r: ReuseableTemplate) {\n            }\n\n            apply(e: HTMLElement): boolean {\n                if (this.applied) {\n                    return false;\n                }\n                e.appendChild(this.r._get());\n                this.applied = true;\n                return true;\n            }\n            isApplied() {\n                return this.applied;\n            }\n        }\n        return new TemplateInstance(this);\n    }\n}\n\n\n","import { round } from \"./round\";\n\nexport function formatCurrency(wert: number) {\n    var Betrag: string = \"\" + round(wert, 2);\n    var Kommaindex = Betrag.toString().indexOf(\".\");\n    var Nachkommastellen = 0;\n    if (Kommaindex != -1) {\n        Nachkommastellen = Betrag.toString().length - (Kommaindex + 1);\n        if (Nachkommastellen == 1)\n            Betrag += '0';\n    }\n    return Betrag;\n}\n","export function round(value: number, decimals: number) {\n\n    //Removing scientific notation if used:\n    var valueString = value.toString();\n    var indexOfE = valueString.indexOf(\"E\");\n    var indexOfe = valueString.indexOf(\"e\");\n    var power = 0;\n    if (indexOfe > -1) {\n        power = parseFloat(valueString.substring(indexOfe + 1));\n        valueString = valueString.substring(0, indexOfe)\n    } else if (indexOfE > -1) {\n        power = parseFloat(valueString.substring(indexOfE + 1));\n        valueString = valueString.substring(0, indexOfE)\n    }\n    //round\n    return Number(Math.round(Number(valueString + 'e' + (power + decimals))) + 'e-' + (decimals));\n}"],"names":["requiredArgs","required","args","length","TypeError","toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","startOfDay","dirtyDate","arguments","date","toDate","setHours","argument","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","KontokorrentSelectListEntry","HTMLElement","constructor","super","rendered","isActive","connectedCallback","this","innerHTML","name","querySelector","link","updateStyle","clickEvent","bind","addEventListener","e","preventDefault","dispatchEvent","CustomEvent","detail","kontokorrent","id","bubbles","disconnectedCallback","removeEventListener","update","innerText","href","classList","toggle","customElements","define","KontokorrentSelectList","list","_kontokorrents","kontokorrentsRenderer","ArrayToElementRenderer","k","li","document","createElement","appendChild","firstChild","_activeKontokorrentId","kontokorrents","sortBy","KontokorrentSelectListTagName","KontokorrentSelect","kontokorrentName","kontokorrentSelectList","addButton","popup","updateAttributes","contains","event","target","stopPropagation","hide","attributeChangedCallback","activeKontokorrentId","getAttribute","updatesStyle","activeKontokorrent","find","remove","add","KontokorrentSelectTagName","AppBar","kontokorrentSelect","logoutDialog","store","applyStoreState","state","async","accountActionCreator","logout","querySelectorAll","forEach","ev","routingActionCreator","navigate","navigateLogin","values","setAttribute","addServices","serviceLocator","subscription","subscribe","AppBarTagName","PersonNameAttribute","BalanceAttribute","BalanceRangeAttribute","template","ReuseableTemplate","templateInstance","getInstance","apply","personNameElement","balanceTextElement","balanceContainerElement","barElement","requestAnimationFrame","style","transform","personName","balance","parseFloat","balanceRange","max","isApplied","formatCurrency","scale","sign","abs","balanceTransform","BalanceAnzeige","personen","personenRenderer","b","setBalance","map","v","BeschreibungAttribute","WertAttribute","BezahlendePersonAttribute","EmpfaengerAttribute","StatusAttribute","BezahlungIdAttribute","attributeStore","beschreibung","bezahlendePerson","empfaenger","wert","status","onClick","beschreibungElement","bezahlendePersonElement","empfaengerElement","wertElement","doneElement","doneAllElement","syncElement","clickListener","checkChanged","prop","getAtt","att","some","display","startOfWeek","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","day","getDay","diff","setDate","getDate","groupBy","key","Map","item","collection","get","push","set","BezahlungenGroup","bezahlungen","_title","container","titleElement","bezahlungenRenderer","setBezahlungen","t","bezahlendePersonName","BezahlungenView","templateApplied","minTage","minEintraege","all","bezahlungenContainer","showMoreButton","showMoreClick","groupRenderer","s","render","setShowMoreButtonDisplay","anzahlEintraege","cards","lastElementChild","scrollToElement","formatEmpfaenger","z","empfaengerIds","p","join","sorted","sort","a","zeitpunkt","filtered","filter","dirtyAmount","amount","addDays","now","slice","mapped","bezahlendePersonId","tag","woche","isWeek","grouped","Array","of","entries","reduce","c","sortedGroups","d","title","formatWeek","formatDay","scrollIntoView","behavior","val","weekformat","endWeek","endOfWeek","dayAndMonth","Intl","DateTimeFormat","month","format","getMonth","weekday","year","KontokorrentActionCreator","workerService","kontokorrentOeffnen","oeffentlicherName","KontokorrentPage","navigiertZuNichtGefunden","kontokorrentActionCreator","kontokorrentActionCreatorFactory","kontokorrentListenActionCreator","bezahlungClick","navigateBezahlung","appBar","balanceAnzeige","bezahlungenView","kontokorrentSpinner","oeffentlicherNameParameter","navigiereZuLetztGesehenem","navigateKontokorrentById","convertLinks","bezahlungClickListener","synchronisieren","nichtGefunden","navigateNichtGefunden","setRouteParameters","elements","Popup","popupShown","keyListener","updateStyles","show","WorkerService","getWorker","worker","Worker","URL","data","type","msg","dispatch","getBeschreibungVorschlaege","kontokorrentId","eingabe","postMessage","resetBeschreibungenCache","workerServiceFactory","listElement","keySelector","keyToElement","elementToKey","WeakMap","updateElement","keyCache","getKey","x","from","children","el","i","removeChild","before","nextKeyToElement","childElement","firstElementChild","prepend","nextElementSibling","insertAdjacentElement","_get","instance","importNode","content","r","applied","valueString","indexOfE","indexOfe","power","Betrag","indexOf","substring","round","Kommaindex"],"sourceRoot":""}