{"version":3,"sources":["webpack://kontokorrent/./src/components/ui-components/tip-button/tip-button.ts","webpack://kontokorrent/./src/components/Login/Login.ts","webpack://kontokorrent/./src/components/convertLinks.ts","webpack://kontokorrent/./src/components/ui-components/popup/popup.ts","webpack://kontokorrent/./src/state/actions/KontokorrentHinzufuegenActionCreator.ts","webpack://kontokorrent/./src/components/Login/Login.html"],"names":["PopupIdAttribute","TipButton","HTMLElement","super","this","clickListener","bind","updateAttributes","popupId","getAttribute","addEventListener","ev","document","querySelector","toggle","stopPropagation","removeEventListener","customElements","define","Login","innerHTML","serviceLocator","store","routingActionCreator","accountActionCreator","kontokorrentHinzufuegenActionCreator","element","convertLinks","querySelectorAll","eventInput","loginButton","homeButton","loginBox","eventMissingError","accountCreationFailed","notFoundError","processing","loginFuerEvent","subscription","subscribe","state","applyStoreState","initializeAccount","loginPageGeoeffnet","event","value","style","display","ensureAccount","id","kontokorrentHinzufuegen","navigateKontokorrent","account","accountCreating","kontokorrents","hinzufuegen","hinzufuegenFailed","kontokorrentNotFound","visibility","accountCreated","Object","keys","length","elements","forEach","e","preventDefault","navigate","Popup","popupShown","keyListener","updateStyles","key","hide","contains","target","show","KontokorrentCreationFailed","exists","type","KontokorrentCreating","KontokorrentCreated","kontokorrent","KontokorrentHinzufuegenFailed","notFound","KontokorrentHinzufuegen","KontokorrentHinzufuegenSuccess","LoginPageGeoeffnet","KontokorrentHinzufuegenActionCreator","apiClient","db","dispatch","name","oeffentlicherName","personen","request","map","v","res","neuerKontokorrent","success","addKontokorrent","kk","getPerOeffentlichName","newIds","setKontokorrents","kontokorrentHinzufuegenActionCreatorFactory","get","module","exports"],"mappings":"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","file":"503de1ca196c7e3e05a4.bundle.js","sourcesContent":["import { Popup } from \"../popup/popup\";\n\nexport const PopupIdAttribute = \"popup-id\";\n\nexport class TipButton extends HTMLElement {\n    private popupId: string;\n    constructor() {\n        super();\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.popupId = this.getAttribute(PopupIdAttribute);\n\n    }\n\n    static get observedAttributes() {\n        return [PopupIdAttribute];\n    }\n\n    connectedCallback() {\n        this.addEventListener(\"click\", this.clickListener);\n    }\n\n    private clickListener(ev: MouseEvent) {\n        let popup: Popup = document.querySelector(`#${this.popupId}`);\n        popup.toggle();\n        ev.stopPropagation();\n    }\n\n\n    disconnectedCallback() {\n        this.removeEventListener(\"click\", this.clickListener);\n    }\n}\ncustomElements.define(\"tip-button\", TipButton);\n","import template from \"./Login.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\nimport { AccountActionCreator, accountActionCreatorFactory } from \"../../state/actions/AccountActionCreator\";\nimport \"./Login.scss\";\nimport \"../ui-components/popup/popup\";\nimport \"../ui-components/tip-button/tip-button\";\nimport { KontokorrentHinzufuegenActionCreator, kontokorrentHinzufuegenActionCreatorFactory } from \"../../state/actions/KontokorrentHinzufuegenActionCreator\";\n\nexport class Login extends HTMLElement {\n    store: Store;\n    subscription: () => void;\n    routingActionCreator: RoutingActionCreator;\n    private accountActionCreator: AccountActionCreator;\n    private eventInput: HTMLInputElement;\n    private loginButton: HTMLButtonElement;\n    private eventMissingError: HTMLDivElement;\n    private accountCreationFailed: HTMLDivElement;\n    private notFoundError: HTMLDivElement;\n    private kontokorrentHinzufuegenActionCreator: KontokorrentHinzufuegenActionCreator;\n    private processing: HTMLDivElement;\n    private homeButton: HTMLButtonElement;\n    private loginBox: HTMLDivElement;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.accountActionCreator = accountActionCreatorFactory(serviceLocator);\n        this.kontokorrentHinzufuegenActionCreator = kontokorrentHinzufuegenActionCreatorFactory(serviceLocator);\n    }\n\n    connectedCallback() {\n        let element = this;\n        convertLinks(element.querySelectorAll(\"a\"), this.routingActionCreator);\n        this.eventInput = element.querySelector(\"#eventInput\");\n        this.loginButton = element.querySelector(\"#loginButton\");\n        this.homeButton = element.querySelector(\"#home-button\");\n        this.loginBox = element.querySelector(\"#login-box\");\n        this.eventMissingError = element.querySelector(\"#eventMissingError\");\n        this.accountCreationFailed = element.querySelector(\"#account-creation-failed\");\n        this.notFoundError = element.querySelector(\"#notFoundError\");\n        this.processing = element.querySelector(\"#processing\");\n\n        this.loginButton.addEventListener(\"click\", this.loginFuerEvent.bind(this));\n\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n        this.accountActionCreator.initializeAccount();\n        this.kontokorrentHinzufuegenActionCreator.loginPageGeoeffnet();\n    }\n\n    async loginFuerEvent() {\n        let event = this.eventInput.value;\n        this.eventMissingError.style.display = event ? \"none\" : \"block\";\n        if (event) {\n            if (await this.accountActionCreator.ensureAccount()) {\n                let id = await this.kontokorrentHinzufuegenActionCreator.kontokorrentHinzufuegen(event);\n                if (id) {\n                    this.routingActionCreator.navigateKontokorrent(id);\n                };\n            }\n        }\n    }\n\n    private applyStoreState(state: State) {\n        this.accountCreationFailed.style.display = !state.account.accountCreating && state.account.accountCreationFailed ?\n            \"block\" : \"none\";\n        this.notFoundError.style.display = !state.kontokorrents.hinzufuegen && state.kontokorrents.hinzufuegenFailed && state.kontokorrents.hinzufuegenFailed.kontokorrentNotFound ?\n            \"block\" : \"none\";\n        let processing = state.kontokorrents.hinzufuegen || state.account.accountCreating;\n        this.processing.style.display = processing ? \"flex\" : \"none\";\n        this.homeButton.style.visibility = state.account.accountCreated &&\n            Object.keys(state.kontokorrents.kontokorrents).length ? \"visible\" : \"hidden\";\n        this.loginButton.style.display = !processing ? \"inline-flex\" : \"none\";\n    }\n\n    disconnectedCallback() {\n\n        this.subscription();\n    }\n}\n\ncustomElements.define('app-login', Login);","import { RoutingActionCreator } from \"../state/actions/RoutingActionCreator\";\n\nexport function convertLinks(elements: Array<HTMLAnchorElement> | NodeListOf<HTMLAnchorElement>, routingActionCreator: RoutingActionCreator) {\n    elements.forEach((e: HTMLAnchorElement) => {\n        e.addEventListener(\"click\", ev => {\n            ev.preventDefault();\n            routingActionCreator.navigate(e.getAttribute(\"href\"));\n        });\n    });\n}","export class Popup extends HTMLElement {\n    private popupShown: boolean = false;\n    constructor() {\n        super();\n        this.keyListener = this.keyListener.bind(this);\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    connectedCallback() {\n        this.updateStyles();\n    }\n\n    private keyListener(ev: KeyboardEvent) {\n        if (ev.key == \"Escape\") {\n            this.hide();\n        }\n    }\n\n    private clickListener(ev: MouseEvent | TouchEvent) {\n        if (!this.contains(<Element>(event.target))) {\n            this.hide();\n        }\n    }\n\n    public hide() {\n        if (this.popupShown) {\n            document.removeEventListener(\"keydown\", this.keyListener);\n            document.removeEventListener(\"click\", this.clickListener);\n            this.popupShown = false;\n            this.updateStyles();\n        }\n    }\n\n    public show() {\n        if (!this.popupShown) {\n            document.addEventListener(\"keydown\", this.keyListener);\n            document.addEventListener(\"click\", this.clickListener);\n            this.popupShown = true;\n            this.updateStyles();\n        }\n    }\n\n    private updateStyles() {\n        this.style.display = this.popupShown ? \"block\" : \"none\";\n    }\n\n    public toggle() {\n        if (!this.popupShown) {\n            this.show();\n        }\n        else {\n            this.hide();\n\n        }\n    }\n\n    disconnectedCallback() {\n        this.hide();\n    }\n}\ncustomElements.define(\"app-popup\", Popup);\n","import { ApiClient } from \"../../api/ApiClient\";\nimport { KontokorrentInfo } from \"../../api/KontokorrentInfo\";\nimport { NeuerKontokorrentRequest } from \"../../api/NeuerKontokorrentRequest\";\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { Action } from \"../lib/Action\";\nimport { Store } from \"../Store\";\nimport { ActionNames } from \"./ActionNames\";\nimport { v4 as uuid } from \"uuid\";\n\nexport class KontokorrentCreationFailed implements Action {\n    readonly type = ActionNames.KontokorrentCreationFailed;\n    constructor(public exists: boolean) {\n\n    }\n}\n\nexport class KontokorrentCreating implements Action {\n    readonly type = ActionNames.KontokorrentCreating;\n    constructor() {\n\n    }\n}\n\nexport class KontokorrentCreated implements Action {\n    readonly type = ActionNames.KontokorrentCreated;\n    constructor(public kontokorrent: KontokorrentInfo) {\n\n    }\n}\n\nexport class KontokorrentHinzufuegenFailed implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegenFailed;\n    constructor(public notFound: boolean) {\n\n    }\n}\n\nexport class KontokorrentHinzufuegen implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegen;\n    constructor() {\n\n    }\n}\n\nexport class KontokorrentHinzufuegenSuccess implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegenSuccess;\n    constructor(public kontokorrents: KontokorrentInfo[]) {\n\n    }\n}\n\nexport class LoginPageGeoeffnet implements Action {\n    readonly type = ActionNames.LoginPageGeoeffnet;\n    constructor() {\n\n    }\n}\n\nexport type KontokorrentHinzufuegenActions = KontokorrentCreationFailed\n    | KontokorrentCreating\n    | KontokorrentCreated\n    | KontokorrentHinzufuegenFailed\n    | KontokorrentHinzufuegen\n    | KontokorrentHinzufuegenSuccess\n    | LoginPageGeoeffnet;\n\nexport class KontokorrentHinzufuegenActionCreator {\n\n    constructor(private store: Store,\n        private apiClient: ApiClient,\n        private db: KontokorrentDatabase) {\n\n    }\n\n    loginPageGeoeffnet() {\n        this.store.dispatch(new LoginPageGeoeffnet());\n    }\n\n    async kontokorrentErstellen(id: string, name: string, oeffentlicherName: string, personen: string[]) {\n        let request: NeuerKontokorrentRequest = {\n            name,\n            id,\n            oeffentlicherName,\n            personen: personen.map(v => { return { name: v, id: uuid() } })\n        };\n        this.store.dispatch(new KontokorrentCreating());\n        let res = await this.apiClient.neuerKontokorrent(request);\n        if (!res.success) {\n            this.store.dispatch(new KontokorrentCreationFailed(res.exists));\n        }\n        else {\n            await this.db.addKontokorrent({\n                id: id,\n                name: name,\n                personen: request.personen,\n                oeffentlicherName: oeffentlicherName\n            });\n            this.store.dispatch(new KontokorrentCreated({\n                id: id,\n                name: name,\n                personen: request.personen,\n                oeffentlicherName: oeffentlicherName\n            }));\n            return true;\n        }\n        return false;\n    }\n\n    async kontokorrentHinzufuegen(oeffentlicherName: string) {\n        let kk = await this.db.getPerOeffentlichName(oeffentlicherName);\n        if (null != kk) {\n            return kk.id;\n        }\n        this.store.dispatch(new KontokorrentHinzufuegen());\n        try {\n            let res = await this.apiClient.kontokorrentHinzufuegen(oeffentlicherName, null);\n            if (null == res) {\n                this.store.dispatch(new KontokorrentHinzufuegenFailed(true));\n            }\n            else {\n                let newIds = await this.db.setKontokorrents(res.map(v => {\n                    return {\n                        id: v.id,\n                        name: v.name,\n                        personen: v.personen,\n                        oeffentlicherName: v.oeffentlicherName\n                    };\n                }));\n                this.store.dispatch(new KontokorrentHinzufuegenSuccess(res));\n                return newIds[0];\n            }\n        }\n        catch {\n            this.store.dispatch(new KontokorrentHinzufuegenFailed(false));\n        }\n        return false;\n    }\n}\n\nexport function kontokorrentHinzufuegenActionCreatorFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"KontokorrentHinzufuegenActionCreator\",\n        serviceLocator => new KontokorrentHinzufuegenActionCreator(\n            serviceLocator.store,\n            serviceLocator.apiClient,\n            serviceLocator.db\n        ));\n}","// Module\nvar code = \"<div class=\\\"login-error-box\\\"> <div id=\\\"eventMissingError\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Kontokorrentnamen eingeben</div> <div id=\\\"notFoundError\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Kontokorrent wurde nicht gefunden</div> <div id=\\\"account-creation-failed\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Account konnte nicht erstellt werden</div> </div> <div class=\\\"login-box\\\" id=\\\"login-box\\\"> <div class=\\\"login-box__event-input\\\"> <input type=\\\"text\\\" id=\\\"eventInput\\\" placeholder=\\\"Kontokorrentname\\\"> <tip-button popup-id=\\\"oeffentlicherNameExplainer\\\" title=\\\"öffentlicher Name Erklärung\\\"> <span class=\\\"material-icons\\\"> info </span> </tip-button> <app-popup id=\\\"oeffentlicherNameExplainer\\\" class=\\\"tip tip--with-input\\\"> Gib hier den Namen des öffentlichen Kontokorrents ein. <ul> <li>frag die anderen Event-/Gruppen- Teilnehmer nach dem Namen</li> <li>such in eurem Chat</li> <li>oder lass dir einen Einladungslink schicken</li> </ul> </app-popup> </div> <div> <button id=\\\"loginButton\\\" class=\\\"button button--raised login-box__login-button\\\"> Login </button> <div id=\\\"processing\\\" class=\\\"login-box__processing\\\" style=\\\"display:none\\\"> <span class=\\\"spinner\\\"></span> </div> </div> <a id=\\\"createEventButton\\\" class=\\\"button\\\" href=\\\"create-event\\\"> <span class=\\\"material-icons\\\"> add </span> Gruppe erstellen </a> <a id=\\\"home-button\\\" class=\\\"button\\\" href=\\\"\\\"> <span class=\\\"material-icons\\\"> home </span> zurück </a> </div>\";\n// Exports\nmodule.exports = code;"],"sourceRoot":""}