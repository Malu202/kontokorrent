{"version":3,"sources":["webpack:///./src/components/convertLinks.ts","webpack:///./src/components/ui-components/popup/popup.ts","webpack:///./src/components/Login/Login.html","webpack:///./src/components/ui-components/tip-button/tip-button.ts","webpack:///./src/components/Login/Login.ts"],"names":["convertLinks","elements","routingActionCreator","forEach","e","addEventListener","ev","preventDefault","navigate","getAttribute","Popup","HTMLElement","super","popupShown","this","keyListener","bind","clickListener","updateStyles","key","hide","contains","event","document","removeEventListener","style","display","show","customElements","define","module","exports","TipButton","updateAttributes","popupId","querySelector","toggle","stopPropagation","innerHTML","serviceLocator","store","accountActionCreator","kontokorrentsActionCreator","querySelectorAll","eventInput","loginButton","homeButton","loginBox","eventMissingError","accountCreationFailed","notFoundError","processing","loginFuerEvent","subscription","subscribe","state","applyStoreState","initializeAccount","loginPageGeoeffnet","value","ensureAccount","id","kontokorrentHinzufuegen","navigateKontokorrent","account","accountCreating","kontokorrents","hinzufuegen","hinzufuegenFailed","kontokorrentNotFound","visibility","accountCreated","Object","keys","length"],"mappings":"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","file":"4.ae0dfb9f3ff8d426925d.bundle.js","sourcesContent":["import { RoutingActionCreator } from \"../state/actions/RoutingActionCreator\";\r\n\r\nexport function convertLinks(elements: Array<HTMLAnchorElement> | NodeListOf<HTMLAnchorElement>, routingActionCreator: RoutingActionCreator) {\r\n    elements.forEach((e: HTMLAnchorElement) => {\r\n        e.addEventListener(\"click\", ev => {\r\n            ev.preventDefault();\r\n            routingActionCreator.navigate(e.getAttribute(\"href\"));\r\n        });\r\n    });\r\n}","export class Popup extends HTMLElement {\r\n    private popupShown: boolean = false;\r\n    constructor() {\r\n        super();\r\n        this.keyListener = this.keyListener.bind(this);\r\n        this.clickListener = this.clickListener.bind(this);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.updateStyles();\r\n    }\r\n\r\n    private keyListener(ev: KeyboardEvent) {\r\n        if (ev.key == \"Escape\") {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    private clickListener(ev: MouseEvent | TouchEvent) {\r\n        if (!this.contains(<Element>(event.target))) {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    public hide() {\r\n        if (this.popupShown) {\r\n            document.removeEventListener(\"keydown\", this.keyListener);\r\n            document.removeEventListener(\"click\", this.clickListener);\r\n            this.popupShown = false;\r\n            this.updateStyles();\r\n        }\r\n    }\r\n\r\n    public show() {\r\n        if (!this.popupShown) {\r\n            document.addEventListener(\"keydown\", this.keyListener);\r\n            document.addEventListener(\"click\", this.clickListener);\r\n            this.popupShown = true;\r\n            this.updateStyles();\r\n        }\r\n    }\r\n\r\n    private updateStyles() {\r\n        this.style.display = this.popupShown ? \"block\" : \"none\";\r\n    }\r\n\r\n    public toggle() {\r\n        if (!this.popupShown) {\r\n            this.show();\r\n        }\r\n        else {\r\n            this.hide();\r\n\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.hide();\r\n    }\r\n}\r\ncustomElements.define(\"app-popup\", Popup);\r\n","// Module\nvar code = \"<div class=login-error-box> <div id=eventMissingError class=\\\"alert alert--error\\\" style=display:none>Kontokorrentnamen eingeben</div> <div id=notFoundError class=\\\"alert alert--error\\\" style=display:none>Kontokorrent wurde nicht gefunden</div> <div id=account-creation-failed class=\\\"alert alert--error\\\" style=display:none>Account konnte nicht erstellt werden</div> </div> <div class=login-box id=login-box> <div class=login-box__event-input> <input type=text id=eventInput placeholder=Kontokorrentname> <tip-button popup-id=oeffentlicherNameExplainer title=\\\"öffentlicher Name Erklärung\\\"> <span class=material-icons> info </span> </tip-button> <app-popup id=oeffentlicherNameExplainer class=\\\"tip tip--with-input\\\"> Gib hier den Namen des öffentlichen Kontokorrents ein. <ul> <li>frag die anderen Event-/Gruppen- Teilnehmer nach dem Namen</li> <li>such in eurem Chat</li> <li>oder lass dir einen Einladungslink schicken</li> </ul> </app-popup> </div> <div> <button id=loginButton class=\\\"button button--raised login-box__login-button\\\"> Login </button> <div id=processing class=login-box__processing style=display:none> <span class=spinner></span> </div> </div> <a id=createEventButton class=button href=create-event> <span class=material-icons> add </span> Gruppe erstellen </a> <a id=home-button class=button href=\\\"\\\"> <span class=material-icons> home </span> zurück </a> </div>\";\n// Exports\nmodule.exports = code;","import { Popup } from \"../popup/popup\";\r\n\r\nexport const PopupIdAttribute = \"popup-id\";\r\n\r\nexport class TipButton extends HTMLElement {\r\n    private popupId: string;\r\n    constructor() {\r\n        super();\r\n        this.clickListener = this.clickListener.bind(this);\r\n    }\r\n\r\n    attributeChangedCallback() {\r\n        this.updateAttributes();\r\n    }\r\n\r\n    private updateAttributes() {\r\n        this.popupId = this.getAttribute(PopupIdAttribute);\r\n\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return [PopupIdAttribute];\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.addEventListener(\"click\", this.clickListener);\r\n    }\r\n\r\n    private clickListener(ev: MouseEvent) {\r\n        let popup: Popup = document.querySelector(`#${this.popupId}`);\r\n        popup.toggle();\r\n        ev.stopPropagation();\r\n    }\r\n\r\n\r\n    disconnectedCallback() {\r\n        this.removeEventListener(\"click\", this.clickListener);\r\n    }\r\n}\r\ncustomElements.define(\"tip-button\", TipButton);\r\n","import template from \"./Login.html\";\r\nimport { Store } from \"../../state/Store\";\r\nimport { ServiceLocator } from \"../../ServiceLocator\";\r\nimport { RoutingActionCreator } from \"../../state/actions/RoutingActionCreator\";\r\nimport { State } from \"../../state/State\";\r\nimport { convertLinks } from \"../convertLinks\";\r\nimport { AccountActionCreator } from \"../../state/actions/AccountActionCreator\";\r\nimport { KontokorrentsActionCreator } from \"../../state/actions/KontokorrentsActionCreator\";\r\nimport \"./Login.scss\";\r\nimport \"../ui-components/popup/popup\";\r\nimport \"../ui-components/tip-button/tip-button\";\r\n\r\nexport class Login extends HTMLElement {\r\n    store: Store;\r\n    subscription: () => void;\r\n    routingActionCreator: RoutingActionCreator;\r\n    private accountActionCreator: AccountActionCreator;\r\n    private eventInput: HTMLInputElement;\r\n    private loginButton: HTMLButtonElement;\r\n    private eventMissingError: HTMLDivElement;\r\n    private accountCreationFailed: HTMLDivElement;\r\n    private notFoundError: HTMLDivElement;\r\n    private kontokorrentsActionCreator: KontokorrentsActionCreator;\r\n    private processing: HTMLDivElement;\r\n    private homeButton: HTMLButtonElement;\r\n    private loginBox: HTMLDivElement;\r\n\r\n    constructor() {\r\n        super();\r\n        this.innerHTML = template;\r\n    }\r\n\r\n    addServices(serviceLocator: ServiceLocator) {\r\n        this.store = serviceLocator.store;\r\n        this.routingActionCreator = serviceLocator.routingActionCreator;\r\n        this.accountActionCreator = serviceLocator.accountActionCreator;\r\n        this.kontokorrentsActionCreator = serviceLocator.kontokorrentsActionCreator;\r\n    }\r\n\r\n    connectedCallback() {\r\n        let element = this;\r\n        convertLinks(element.querySelectorAll(\"a\"), this.routingActionCreator);\r\n        this.eventInput = element.querySelector(\"#eventInput\");\r\n        this.loginButton = element.querySelector(\"#loginButton\");\r\n        this.homeButton = element.querySelector(\"#home-button\");\r\n        this.loginBox = element.querySelector(\"#login-box\");\r\n        this.eventMissingError = element.querySelector(\"#eventMissingError\");\r\n        this.accountCreationFailed = element.querySelector(\"#account-creation-failed\");\r\n        this.notFoundError = element.querySelector(\"#notFoundError\");\r\n        this.processing = element.querySelector(\"#processing\");\r\n\r\n        this.loginButton.addEventListener(\"click\", this.loginFuerEvent.bind(this));\r\n\r\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\r\n        this.applyStoreState(this.store.state);\r\n        this.accountActionCreator.initializeAccount();\r\n        this.kontokorrentsActionCreator.loginPageGeoeffnet();\r\n    }\r\n\r\n    async loginFuerEvent() {\r\n        let event = this.eventInput.value;\r\n        this.eventMissingError.style.display = event ? \"none\" : \"block\";\r\n        if (event) {\r\n            if (await this.accountActionCreator.ensureAccount()) {\r\n                let id = await this.kontokorrentsActionCreator.kontokorrentHinzufuegen(event);\r\n                if (id) {\r\n                    this.routingActionCreator.navigateKontokorrent(id);\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    private applyStoreState(state: State) {\r\n        this.accountCreationFailed.style.display = !state.account.accountCreating && state.account.accountCreationFailed ?\r\n            \"block\" : \"none\";\r\n        this.notFoundError.style.display = !state.kontokorrents.hinzufuegen && state.kontokorrents.hinzufuegenFailed && state.kontokorrents.hinzufuegenFailed.kontokorrentNotFound ?\r\n            \"block\" : \"none\";\r\n        let processing = state.kontokorrents.hinzufuegen || state.account.accountCreating;\r\n        this.processing.style.display = processing ? \"flex\" : \"none\";\r\n        this.homeButton.style.visibility = state.account.accountCreated &&\r\n            Object.keys(state.kontokorrents.kontokorrents).length ? \"visible\" : \"hidden\";\r\n        this.loginButton.style.display = !processing ? \"inline-flex\" : \"none\";\r\n    }\r\n\r\n    disconnectedCallback() {\r\n\r\n        this.subscription();\r\n    }\r\n}\r\n\r\ncustomElements.define('app-login', Login);"],"sourceRoot":""}