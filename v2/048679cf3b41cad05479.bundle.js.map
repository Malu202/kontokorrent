{"version":3,"file":"048679cf3b41cad05479.bundle.js","mappings":"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","sources":["webpack://kontokorrent/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/toDate/index.js","webpack://kontokorrent/./src/components/AppBar/AppBar.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.html","webpack://kontokorrent/./src/components/AppBar/AppBar.ts","webpack://kontokorrent/./src/components/KontokorrentPage/KontokorrentPage.html","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeigeElement.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeigeElement.html","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeige.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeige.html","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenView.html","webpack://kontokorrent/./src/components/BezahlungCard/BezahlungCard.ts","webpack://kontokorrent/./src/components/BezahlungCard/BezahlungCard.html","webpack://kontokorrent/./node_modules/date-fns/esm/startOfWeek/index.js","webpack://kontokorrent/./src/utils/groupBy.ts","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenGroup.ts","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenGroup.html","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenView.ts","webpack://kontokorrent/./node_modules/date-fns/esm/addDays/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfToday/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/endOfWeek/index.js","webpack://kontokorrent/./src/state/actions/KontokorrentActionCreator.ts","webpack://kontokorrent/./src/components/KontokorrentPage/KontokorrentPage.ts","webpack://kontokorrent/./src/components/convertLinks.ts","webpack://kontokorrent/./src/components/ui-components/popup/popup.ts","webpack://kontokorrent/./src/lib/WorkerService.ts","webpack://kontokorrent/./src/utils/ArrayToElementRenderer.ts","webpack://kontokorrent/./src/utils/ReuseableTemplate.ts","webpack://kontokorrent/./src/utils/formatCurrency.ts","webpack://kontokorrent/./src/utils/round.ts"],"sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","// Module\nvar code = \"<header class=\\\"app-bar\\\"> <kontokorrent-select class=\\\"app-bar__kontokorrent-select\\\"></kontokorrent-select> <nav class=\\\"app-bar__links\\\"> <button id=\\\"logout-button\\\" class=\\\"app-bar__link\\\" title=\\\"Logout\\\"> <span class=\\\"material-icons\\\"> exit_to_app </span> </button> <a href=\\\"info\\\" class=\\\"app-bar__link\\\" title=\\\"Informationen über diese App\\\"> <span class=\\\"material-icons\\\"> info </span> </a> </nav> </header> <app-popup id=\\\"logout-dialog\\\"> <div class=\\\"dialog__backdrop\\\"></div> <div class=\\\"dialog\\\"> <p> Wirklich aus allen Kontokorrents ausloggen? </p> <div class=\\\"dialog__button-pane\\\"> <button id=\\\"abort-logout\\\" class=\\\"button\\\">Abbrechen</button> <button id=\\\"confirm-logout\\\" class=\\\"button\\\">Ausloggen</button> </div> </div> </app-popup>\";\n// Exports\nexport default code;","import template from \"./KontokorrentSelectListEntry.html\";\nimport { KontokorrentState } from \"../../state/State\";\n\n\nexport class KontokorrentSelectListEntry extends HTMLElement {\n    private name: HTMLSpanElement;\n    private link: HTMLAnchorElement;\n    private kontokorrent: KontokorrentState;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.name = this.querySelector(`[data-ref=\"name\"]`);\n        this.link = this.querySelector(`[data-ref=\"link\"]`);\n        this.clickEvent = this.clickEvent.bind(this);\n    }\n\n    connectedCallback() {\n        this.link.addEventListener(\"click\", this.clickEvent);\n    }\n\n    private clickEvent(e: MouseEvent): void {\n        e.preventDefault();\n        this.dispatchEvent(new CustomEvent(\"gotokontokorrent\", { detail: this.kontokorrent.id, bubbles: true }));\n    }\n\n    disconnectedCallback() {\n        this.link.removeEventListener(\"click\", this.clickEvent);\n    }\n\n    update(kontokorrent: KontokorrentState, isActive: boolean) {\n        this.kontokorrent = kontokorrent;\n        this.name.innerText = kontokorrent.name;\n        this.link.href = `kontokorrents/${kontokorrent.id}`;\n        this.link.classList.toggle(\"kontokorrent-select-list__entry--active\", isActive);\n    }\n}\nexport const KontokorrentSelectListEntryTagName = \"kontokorrent-select-list-entry\";\ncustomElements.define(KontokorrentSelectListEntryTagName, KontokorrentSelectListEntry);\n","// Module\nvar code = \"<a data-ref=\\\"link\\\" class=\\\"kontokorrent-select-list__entry\\\"> <span data-ref=\\\"name\\\"></span> </a>\";\n// Exports\nexport default code;","import template from \"./KontokorrentSelectList.html\";\nimport \"./KontokorrentSelectList.scss\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { sortByAlphabetically } from \"../../utils/sortBy\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { KontokorrentSelectListEntry } from \"./KontokorrentSelectListEntry\";\n\nexport class KontokorrentSelectList extends HTMLElement {\n    private list: HTMLOListElement;\n    private _kontokorrents: KontokorrentState[];\n    private _activeKontokorrentId: string;\n    private kontokorrentsRenderer: ArrayToElementRenderer<KontokorrentState, HTMLLIElement, string>;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.list = this.querySelector(`[data-ref=\"list\"]`);\n        this._kontokorrents = [];\n        this.kontokorrentsRenderer = new ArrayToElementRenderer(this.list,\n            (k: KontokorrentState) => k.id,\n            () => {\n                let li = document.createElement(\"li\");\n                li.appendChild(new KontokorrentSelectListEntry());\n                return li;\n            });\n    }\n\n    connectedCallback() {\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private update() {\n        this.kontokorrentsRenderer.update(this._kontokorrents,\n            (li, kontokorrent) => {\n                let x: KontokorrentSelectListEntry = <KontokorrentSelectListEntry>li.firstChild;\n                x.update(kontokorrent, this._activeKontokorrentId == kontokorrent.id);\n            });\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this._kontokorrents = sortByAlphabetically(kontokorrents, k => k.name);\n        this.update();\n    }\n\n    set activeKontokorrentId(id: string) {\n        this._activeKontokorrentId = id;\n        this.update();\n    }\n}\nexport const KontokorrentSelectListTagName = \"kontokorrent-select-list\";\ncustomElements.define(KontokorrentSelectListTagName, KontokorrentSelectList);\n","// Module\nvar code = \"<ol data-ref=\\\"list\\\" class=\\\"kontokorrent-select-list\\\"> </ol>\";\n// Exports\nexport default code;","import template from \"./KontokorrentSelect.html\";\nimport \"./KontokorrentSelect.scss\";\nimport \"./KontokorrentSelectList\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { KontokorrentSelectListTagName, KontokorrentSelectList } from \"./KontokorrentSelectList\";\nimport { Popup } from \"../ui-components/popup/popup\";\nimport \"../ui-components/popup/popup\";\n\nexport class KontokorrentSelect extends HTMLElement {\n    private kontokorrentName: HTMLHeadingElement;\n    private popup: Popup;\n    private kontokorrentSelectList: KontokorrentSelectList;\n    private addButton: HTMLButtonElement;\n    private activeKontokorrentId: string;\n    private _kontokorrents: KontokorrentState[];\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.kontokorrentName = this.querySelector(`[data-ref=\"kontokorrent-name\"]`);\n        this.kontokorrentSelectList = this.querySelector(KontokorrentSelectListTagName);\n        this.addButton = this.querySelector(`#add-kontokorrent`);\n        this._kontokorrents = null;\n    }\n\n    connectedCallback() {\n        this.popup = this.querySelector(`app-popup`);\n        this.updateAttributes();\n        this.addEventListener(\"click\", e => {\n            if (!this.popup.contains(<Element>(event.target))) {\n                this.popup.toggle();\n                e.stopPropagation();\n            }\n        });\n        this.addButton.addEventListener(\"click\", e => {\n            this.dispatchEvent(new CustomEvent(\"addkontokorrent\"));\n        });\n        this.kontokorrentSelectList.addEventListener(\"gotokontokorrent\", () => {\n            this.popup.hide();\n        })\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.activeKontokorrentId = this.getAttribute(\"active-kontokorrent-id\");\n        this.kontokorrentSelectList.activeKontokorrentId = this.activeKontokorrentId;\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [\"active-kontokorrent-id\"];\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this.kontokorrentSelectList.kontokorrents = kontokorrents;\n        this._kontokorrents = kontokorrents;\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        if (this._kontokorrents && this._kontokorrents.length) {\n            let activeKontokorrent = this._kontokorrents.find(k => k.id == this.activeKontokorrentId);\n            if (activeKontokorrent) {\n                this.kontokorrentName.innerText = activeKontokorrent.name;\n            }\n            else {\n                this.kontokorrentName.innerText = \"(Kontokorrent wählen)\";\n            }\n        }\n    }\n\n}\nexport const KontokorrentSelectTagName = \"kontokorrent-select\";\ncustomElements.define(KontokorrentSelectTagName, KontokorrentSelect);\n","// Module\nvar code = \"<div class=\\\"kontokorrent-select-wrapper\\\"> <div class=\\\"kontokorrent-select\\\"> <h1 data-ref=\\\"kontokorrent-name\\\" class=\\\"kontokorrent-select__name\\\">Kontokorrent</h1> <button class=\\\"kontokorrent-select__choose\\\" title=\\\"anderen Kontokorrent wählen\\\"> <span class=\\\"material-icons\\\"> arrow_drop_down </span> </button> </div> <app-popup class=\\\"kontokorrent-select__popup\\\"> <kontokorrent-select-list></kontokorrent-select-list> <div class=\\\"kontokorrent-select__buttons\\\"> <button id=\\\"add-kontokorrent\\\" class=\\\"button\\\">weiteren hinzufügen</button> </div> </app-popup> </div>\";\n// Exports\nexport default code;","import template from \"./AppBar.html\";\nimport \"./AppBar.scss\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { convertLinks } from \"../convertLinks\";\nimport \"../KontokorrentSelect/KontokorrentSelect\";\nimport { KontokorrentSelectTagName, KontokorrentSelect } from \"../KontokorrentSelect/KontokorrentSelect\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { AccountActionCreator, accountActionCreatorFactory } from \"../../state/actions/AccountActionCreator\";\nimport { Store } from \"../../state/Store\";\nimport { State } from \"../../state/State\";\nimport { Popup } from \"../ui-components/popup/popup\";\n\nexport class AppBar extends HTMLElement {\n    private kontokorrentSelect: KontokorrentSelect;\n    private store: Store;\n    private routingActionCreator: RoutingActionCreator;\n    private accountActionCreator: AccountActionCreator;\n    private logoutDialog: Popup;\n    private subscription: () => void;\n    private rendered: boolean = false;\n\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n\n            this.kontokorrentSelect = this.querySelector(KontokorrentSelectTagName);\n            this.logoutDialog = this.querySelector(\"#logout-dialog\");\n        }\n        this.querySelector(\"#logout-button\").addEventListener(\"click\", (e: MouseEvent) => {\n            this.logoutDialog.toggle();\n            e.stopPropagation();\n        });\n        this.querySelector(\"#confirm-logout\").addEventListener(\"click\", async () => {\n            await this.accountActionCreator.logout();\n        });\n        this.querySelector(\"#abort-logout\").addEventListener(\"click\", () => {\n            this.logoutDialog.hide();\n        });\n        convertLinks(this.querySelectorAll(\"a\"), this.routingActionCreator);\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n        this.kontokorrentSelect.addEventListener(\"addkontokorrent\", () => {\n            this.routingActionCreator.navigateLogin();\n        });\n    }\n\n    applyStoreState(state: State): void {\n        this.kontokorrentSelect.kontokorrents = Object.values(state.kontokorrents.kontokorrents);\n        this.kontokorrentSelect.setAttribute(\"active-kontokorrent-id\", state.kontokorrents.activeKontokorrentId);\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.accountActionCreator = accountActionCreatorFactory(serviceLocator);\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n    }\n}\nexport const AppBarTagName = \"app-bar\";\ncustomElements.define(AppBarTagName, AppBar);\n","// Module\nvar code = \"<app-bar></app-bar> <div style=\\\"display:none\\\" id=\\\"login-expired\\\">Google-Login abgelaufen: zum Synchronisieren neu anmelden</div> <balance-anzeige id=\\\"balance-anzeige\\\"></balance-anzeige> <div class=\\\"kontokorrentpage-menu\\\"> <a id=\\\"eintragen-desktop\\\" class=\\\"floating-action-button floating-action-button--embed\\\" href=\\\"eintragen\\\"> <span class=\\\"material-icons\\\"> add </span> eintragen </a> <span class=\\\"kontokorrentpage-menu__sync-display\\\" id=\\\"spinner\\\" style=\\\"display:none\\\"> <div class=\\\"spinner\\\"></div> synchronisieren </span> </div> <bezahlungen-view id=\\\"bezahlungen-view\\\"></bezahlungen-view> <a id=\\\"eintragen-mobile\\\" class=\\\"floating-action-button floating-action-button--fixed\\\" href=\\\"eintragen\\\"> <span class=\\\"material-icons\\\"> add </span> eintragen </a>\";\n// Exports\nexport default code;","import templateContent from \"./BalanceAnzeigeElement.html\";\nimport \"./BalanceAnzeigeElement.scss\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { ReuseableTemplate, TemplateInstance } from \"../../utils/ReuseableTemplate\";\n\nexport const PersonNameAttribute = \"person-name\";\nexport const BalanceAttribute = \"balance\";\nexport const BalanceRangeAttribute = \"balance-range\";\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class BalanceAnzeigeElement extends HTMLElement {\n    private personName: string;\n    private balance: number;\n    private personNameElement: HTMLSpanElement;\n    private balanceTextElement: HTMLSpanElement;\n    private balanceRange: number;\n    private barElement: HTMLDivElement;\n    private balanceContainerElement: HTMLSpanElement;\n    private templateInstance: TemplateInstance;\n\n    constructor() {\n        super();\n        this.templateInstance = template.getInstance();\n    }\n\n    connectedCallback() {\n        if (this.templateInstance.apply(this)) {\n            this.personNameElement = this.querySelector(`[data-ref=\"person-name\"]`);\n            this.balanceTextElement = this.querySelector(`[data-ref=\"balance-text\"]`);\n            this.balanceContainerElement = this.querySelector(`[data-ref=\"balance-container\"]`);\n            this.barElement = this.querySelector(`[data-ref=\"bar\"]`);\n        }\n        requestAnimationFrame(() => {\n            this.barElement.style.transform = `scaleY(0)`;\n            this.updatesStyle();\n        });\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.personName = this.getAttribute(PersonNameAttribute);\n        this.balance = parseFloat(this.getAttribute(BalanceAttribute));\n        this.balanceRange = Math.max(2, parseFloat(this.getAttribute(BalanceRangeAttribute)));\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [PersonNameAttribute, BalanceAttribute, BalanceRangeAttribute];\n    }\n\n    private updatesStyle() {\n        requestAnimationFrame(() => {\n            this.personNameElement.innerText = this.personName;\n            this.balanceTextElement.innerText = formatCurrency(this.balance);\n            let scale = Math.sign(this.balance) * Math.abs(this.balance) / this.balanceRange;\n            let balanceTransform = scale * 1.9;\n            this.barElement.style.transform = `scaleY(${scale})`;\n            this.balanceContainerElement.style.transform = Math.sign(this.balance) < 0 ? `translateY(calc(${balanceTransform}em - 150%))`\n                : `translateY(calc(${balanceTransform}em + 50%))`;\n            if (scale > 0) {\n                this.barElement.classList.add(\"balance-anzeige-element__bar--negative\");\n                this.barElement.classList.remove(\"balance-anzeige-element__bar--positive\");\n            }\n            else {\n                this.barElement.classList.remove(\"balance-anzeige-element__bar--negative\");\n                this.barElement.classList.add(\"balance-anzeige-element__bar--positive\");\n            }\n        });\n    }\n\n}\nexport const BalanceAnzeigeElementTagName = \"balance-anzeige-element\";\ncustomElements.define(BalanceAnzeigeElementTagName, BalanceAnzeigeElement);\n","// Module\nvar code = \"<div class=\\\"balance-anzeige-element__graphic-container\\\"> <div class=\\\"balance-anzeige-element__bar\\\" data-ref=\\\"bar\\\"></div> <div class=\\\"balance-anzeige-element__horizontal-line\\\"></div> <span class=\\\"balance-anzeige-element__balance\\\" data-ref=\\\"balance-container\\\"> <span data-ref=\\\"balance-text\\\"></span>€ </span> </div> <div class=\\\"balance-anzeige-element__text-container\\\"> <span data-ref=\\\"person-name\\\" class=\\\"balance-anzeige-element__name\\\"></span> </div>\";\n// Exports\nexport default code;","import template from \"./BalanceAnzeige.html\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BalanceAnzeigeElement, PersonNameAttribute, BalanceAttribute, BalanceRangeAttribute } from \"./BalanceAnzeigeElement\";\nimport { Person } from \"../../state/State\";\n\nexport class BalanceAnzeige extends HTMLElement {\n    private balanceRange: number;\n    private personen: Person[];\n    private personenRenderer: ArrayToElementRenderer<Person, HTMLElement, string>;\n    private rendered = false;\n\n    constructor() {\n        super();\n        this.personenRenderer = new ArrayToElementRenderer(this,\n            (b: Person) => b.id,\n            b => new BalanceAnzeigeElement());\n    }\n\n    connectedCallback() {\n        if(!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n        }\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    setBalance(personen: Person[]) {\n        this.personen = personen;\n        this.balanceRange = Math.max(...Object.values(personen).map(v => Math.abs(v.balance)));\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        this.personenRenderer.update(this.personen,\n            (e, b) => {\n                e.setAttribute(PersonNameAttribute, b.name);\n                e.setAttribute(BalanceAttribute, \"\" + b.balance);\n                e.setAttribute(BalanceRangeAttribute, \"\" + this.balanceRange);\n            });\n    }\n\n}\nexport const BalanceAnzeigeTagName = \"balance-anzeige\";\ncustomElements.define(BalanceAnzeigeTagName, BalanceAnzeige);\n","// Module\nvar code = \"<div class=\\\"balance-anzeige-element__graphic-container\\\"> <div class=\\\"balance-anzeige-element__bar\\\" data-ref=\\\"bar\\\"></div> <div class=\\\"balance-anzeige-element__horizontal-line\\\"></div> <span class=\\\"balance-anzeige-element__balance\\\" data-ref=\\\"balance-container\\\"> <span data-ref=\\\"balance-text\\\"></span>€ </span> </div> <div class=\\\"balance-anzeige-element__text-container\\\"> <span data-ref=\\\"person-name\\\" class=\\\"balance-anzeige-element__name\\\"></span> </div>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div id=\\\"bezahlungen-container\\\"> </div> <button id=\\\"show-more\\\" class=\\\"button\\\">Mehr anzeigen</button>\";\n// Exports\nexport default code;","import templateContent from \"./BezahlungCard.html\";\nimport \"./BezahlungCard.scss\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { ReuseableTemplate, TemplateInstance } from \"../../utils/ReuseableTemplate\";\nimport { BezahlungStatus } from \"../../state/State\";\n\nexport const BeschreibungAttribute = \"beschreibung\";\nexport const WertAttribute = \"wert\";\nexport const BezahlendePersonAttribute = \"bezahlende-person\";\nexport const EmpfaengerAttribute = \"empfaenger\";\nexport const StatusAttribute = \"status\";\nexport const BezahlungIdAttribute = \"bezahlung-id\";\n\ninterface AttributeStore {\n    bezahlendePerson: string;\n    beschreibung: string;\n    wert: number;\n    empfaenger: string;\n    status: string;\n}\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class BezahlungCard extends HTMLElement {\n    private attributeStore: AttributeStore;\n    private wertElement: HTMLSpanElement;\n    private empfaengerElement: HTMLSpanElement;\n    private bezahlendePersonElement: HTMLSpanElement;\n    private beschreibungElement: HTMLDivElement;\n    private doneElement: HTMLSpanElement;\n    private doneAllElement: HTMLSpanElement;\n    private syncElement: HTMLSpanElement;\n    private clickListener: (e: MouseEvent) => void;\n    private templateInstance: TemplateInstance;\n\n    constructor() {\n        super();\n        this.attributeStore = {\n            beschreibung: null,\n            bezahlendePerson: null,\n            empfaenger: null,\n            wert: null,\n            status: null\n        };\n        this.templateInstance = template.getInstance();\n    }\n\n    private onClick(e: MouseEvent) {\n        this.dispatchEvent(new CustomEvent(\"bezahlungclick\", { detail: this.getAttribute(BezahlungIdAttribute), bubbles: true }));\n    }\n\n    connectedCallback() {\n        if (this.templateInstance.apply(this)) {\n            this.beschreibungElement = this.querySelector(`[data-ref=\"beschreibung\"]`);\n            this.bezahlendePersonElement = this.querySelector(`[data-ref=\"bezahlende-person\"]`);\n            this.empfaengerElement = this.querySelector(`[data-ref=\"empfaenger\"]`);\n            this.wertElement = this.querySelector(`[data-ref=\"wert\"]`);\n            this.doneElement = this.querySelector(`[data-ref=\"icon-done\"]`);\n            this.doneAllElement = this.querySelector(`[data-ref=\"icon-done-all\"]`);\n            this.syncElement = this.querySelector(`[data-ref=\"icon-sync\"]`);\n            this.updatesStyle();\n        }\n        this.clickListener = e => this.onClick(e);\n        this.addEventListener(\"click\", this.clickListener);\n    }\n\n    disconnectedCallback() {\n        this.removeEventListener(\"click\", this.clickListener);\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private checkChanged<K extends keyof AttributeStore>(prop: K, getAtt: () => AttributeStore[K]) {\n        let att = getAtt();\n        if (this.attributeStore[prop] != att) {\n            this.attributeStore[prop] = att;\n            return true;\n        }\n        return false;\n    }\n\n    private updateAttributes() {\n        let changed = [\n            this.checkChanged(\"bezahlendePerson\", () => this.getAttribute(BezahlendePersonAttribute)),\n            this.checkChanged(\"beschreibung\", () => this.getAttribute(BeschreibungAttribute)),\n            this.checkChanged(\"wert\", () => parseFloat(this.getAttribute(WertAttribute))),\n            this.checkChanged(\"empfaenger\", () => this.getAttribute(EmpfaengerAttribute)),\n            this.checkChanged(\"status\", () => this.getAttribute(StatusAttribute))\n        ].some(v => v);\n        if (changed) {\n            this.updatesStyle();\n        }\n    }\n\n    static get observedAttributes() {\n        return [BeschreibungAttribute, BezahlendePersonAttribute, WertAttribute, EmpfaengerAttribute, StatusAttribute];\n    }\n\n    private updatesStyle() {\n        if (this.templateInstance.isApplied()) {\n            this.beschreibungElement.innerText = this.attributeStore.beschreibung;\n            this.bezahlendePersonElement.innerText = this.attributeStore.bezahlendePerson;\n            this.wertElement.innerText = formatCurrency(this.attributeStore.wert);\n            this.empfaengerElement.innerText = this.attributeStore.empfaenger;\n            this.doneAllElement.style.display = this.attributeStore.status == BezahlungStatus.Gespeichert ? \"inline\" : \"none\";\n            this.doneElement.style.display = this.attributeStore.status == BezahlungStatus.Zwischengespeichert ? \"inline\" : \"none\";\n            this.syncElement.style.display = this.attributeStore.status == BezahlungStatus.Speichern ? \"inline\" : \"none\";\n        }\n    }\n\n}\nexport const BezahlungCardTagName = \"bezahlung-card\";\ncustomElements.define(BezahlungCardTagName, BezahlungCard);\n","// Module\nvar code = \"<div class=\\\"bezahlung-card__beschreibung\\\"> <div data-ref=\\\"beschreibung\\\"></div> <div class=\\\"bezahlung-card__personen\\\"> <span data-ref=\\\"bezahlende-person\\\"></span> für <span data-ref=\\\"empfaenger\\\"></span> </div> </div> <div class=\\\"bezahlung-card__col2\\\"> <div class=\\\"bezahlung-card__dummy\\\"></div> <div class=\\\"bezahlung-card__wert\\\"> <span data-ref=\\\"wert\\\"></span>€ </div> <div class=\\\"bezahlung-card__status\\\"> <span class=\\\"material-icons\\\" data-ref=\\\"icon-done\\\" style=\\\"display:none\\\" title=\\\"lokal zwischengespeichert\\\"> schedule </span> <span class=\\\"material-icons\\\" data-ref=\\\"icon-done-all\\\" style=\\\"display:none\\\" title=\\\"synchronisiert\\\"> done_all </span> <span class=\\\"material-icons\\\" data-ref=\\\"icon-sync\\\" style=\\\"display:none\\\" title=\\\"synchronisieren...\\\"> sync </span> </div> </div>\";\n// Exports\nexport default code;","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","export function groupBy<T, K extends keyof T>(list: T[], key: K) {\n    const map = new Map<T[K], T[]>();\n    list.forEach((item) => {\n        const k = item[key];\n        const collection = map.get(k);\n        if (!collection) {\n            map.set(k, [item]);\n        } else {\n            collection.push(item);\n        }\n    });\n    return map;\n}\n","import template from \"./BezahlungenGroup.html\";\nimport \"../BezahlungCard/BezahlungCard\";\nimport { BezahlungViewModel } from \"./BezahlungViewModel\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BeschreibungAttribute, BezahlendePersonAttribute, BezahlungCard, BezahlungIdAttribute, EmpfaengerAttribute, StatusAttribute, WertAttribute } from \"../BezahlungCard/BezahlungCard\";\n\nexport class BezahlungenGroup extends HTMLElement {\n    private container: HTMLDivElement;\n    private titleElement: HTMLHeadingElement;\n    private bezahlungenRenderer: ArrayToElementRenderer<BezahlungViewModel, BezahlungCard, string>;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.container = this.querySelector(`[data-ref=\"container\"]`);\n        this.titleElement = this.querySelector(`[data-ref=\"title\"]`);\n        this.bezahlungenRenderer = new ArrayToElementRenderer(this.container,\n            (b: BezahlungViewModel) => b.id,\n            b => new BezahlungCard());\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n\n\n    setBezahlungen(bezahlungen: BezahlungViewModel[]) {\n        this.bezahlungenRenderer.update(bezahlungen, (e, b) => {\n            e.setAttribute(BeschreibungAttribute, b.beschreibung);\n            e.setAttribute(WertAttribute, \"\" + b.wert);\n            e.setAttribute(BezahlendePersonAttribute, b.bezahlendePersonName);\n            e.setAttribute(EmpfaengerAttribute, b.empfaenger);\n            e.setAttribute(StatusAttribute, b.status);\n            e.setAttribute(BezahlungIdAttribute, b.id);\n        });\n    }\n\n    set title(t: string) {\n        this.titleElement.innerText = t;\n    }\n\n}\nexport const BezahlungenGroupTagName = \"bezahlungen-group\";\ncustomElements.define(BezahlungenGroupTagName, BezahlungenGroup);\n","// Module\nvar code = \"<h3 data-ref=\\\"title\\\" class=\\\"bezahlungen-group__title\\\">Gruppe</h3> <div class=\\\"bezahlungen-group__container\\\" data-ref=\\\"container\\\"></div>\";\n// Exports\nexport default code;","import template from \"./BezahlungenView.html\";\nimport \"./BezahlungenView.scss\";\nimport \"../BezahlungCard/BezahlungCard\";\nimport { Bezahlung, Person } from \"../../state/State\";\nimport { addDays, startOfToday, startOfDay, startOfWeek, endOfWeek } from \"date-fns\";\nimport { groupBy } from \"../../utils/groupBy\";\nimport \"./BezahlungenGroup\";\nimport { BezahlungViewModel } from \"./BezahlungViewModel\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BezahlungenGroup } from \"./BezahlungenGroup\";\n\nexport class BezahlungenView extends HTMLElement {\n    private minEintraege: number;\n    private minTage: number;\n    private all: boolean;\n    private bezahlungen: Bezahlung[];\n    private personen: Person[];\n    private bezahlungenContainer: HTMLDivElement;\n    private showMoreButton: HTMLButtonElement;\n    private groupRenderer: ArrayToElementRenderer<[number, BezahlungViewModel[]], BezahlungenGroup, string>;\n\n    constructor() {\n        super();\n        this.minTage = 3;\n        this.minEintraege = 20;\n        this.all = false;\n        this.innerHTML = template;\n        this.bezahlungenContainer = this.querySelector(\"#bezahlungen-container\");\n        this.showMoreButton = this.querySelector(\"#show-more\");\n        this.showMoreClick = this.showMoreClick.bind(this);\n        this.groupRenderer = new ArrayToElementRenderer(this.bezahlungenContainer,\n            (s: [number, BezahlungViewModel[]]) => \"\" + s[0], () => new BezahlungenGroup());\n    }\n\n    connectedCallback() {\n        this.showMoreButton.addEventListener(\"click\", this.showMoreClick);\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private setShowMoreButtonDisplay() {\n        if (this.bezahlungen) {\n            this.showMoreButton.style.display = this.bezahlungen.length > this.anzahlEintraege ? \"inline\" : \"none\";\n        }\n    }\n\n    showMoreClick() {\n        let last: BezahlungenGroup = <BezahlungenGroup>this.bezahlungenContainer.lastElementChild;\n        this.anzahlEintraege += 20;\n        if (last) {\n            last.scrollIntoView({ behavior: \"smooth\" });\n        }\n        this.setShowMoreButtonDisplay();\n    }\n\n    private formatEmpfaenger(z: Bezahlung, personen: Person[]) {\n        if (z.empfaengerIds.length == personen.length) {\n            return \"alle\";\n        }\n        return z.empfaengerIds.map(id => personen.find(p => p.id == id).name).join(\", \");\n    }\n\n    setBezahlungen(bezahlungen: Bezahlung[], personen: Person[]) {\n        this.bezahlungen = bezahlungen;\n        this.personen = personen;\n        this.setShowMoreButtonDisplay();\n        this.render();\n    }\n\n    private render() {\n        let sorted = this.bezahlungen.sort((a, b) => +b.zeitpunkt - +a.zeitpunkt);\n\n        let filtered = sorted;\n        if (!this.all) {\n            filtered = sorted.filter(z => z.zeitpunkt > addDays(startOfToday(), -this.minTage));\n            if (filtered.length < this.minEintraege) {\n                filtered = sorted.slice(0, this.minEintraege)\n            }\n        }\n\n        let mapped = filtered.map(z => {\n            let x: BezahlungViewModel = {\n                bezahlendePersonName: this.personen.find(p => p.id == z.bezahlendePersonId).name,\n                wert: z.wert,\n                beschreibung: z.beschreibung,\n                empfaenger: this.formatEmpfaenger(z, this.personen),\n                tag: +startOfDay(z.zeitpunkt),\n                id: z.id,\n                woche: +startOfWeek(z.zeitpunkt),\n                status: z.status\n            };\n            return x;\n        });\n\n        let isWeek = false;\n        let grouped = Array.of(...groupBy(mapped, \"tag\").entries());\n        let avgGroupSize = grouped.reduce((p, c) => p + c[1].length, 0) / grouped.length;\n        if (avgGroupSize < 3) {\n            grouped = Array.of(...groupBy(mapped, \"woche\").entries());\n            isWeek = true;\n        }\n        let sortedGroups = grouped.sort((a, b) => b[0] - a[0]);\n        this.groupRenderer.update(sortedGroups,\n            (e, d) => {\n                e.setBezahlungen(d[1]);\n                if (isWeek) {\n                    e.title = this.formatWeek(new Date(d[0]));\n                }\n                else {\n\n                    e.title = this.formatDay(new Date(d[0]));\n                }\n            });\n\n    }\n\n    get anzahlEintraege() {\n        return this.minEintraege;\n    }\n\n    set anzahlEintraege(val: number) {\n        this.minEintraege = val;\n        this.render();\n    }\n\n\n    private formatWeek(date: Date) {\n        let endWeek = endOfWeek(date);\n        let weekformat: string;\n        const dayAndMonth = (d: Date) => new Intl.DateTimeFormat([\"de-AT\"], { day: \"numeric\", month: \"long\" }).format(d);\n        if (endWeek.getMonth() == date.getMonth()) {\n            weekformat = `${new Intl.DateTimeFormat([\"de-AT\"], { day: \"numeric\" }).format(date)}. - ${dayAndMonth(endWeek)}`;\n        }\n        else {\n            weekformat = `${dayAndMonth(date)} - ${dayAndMonth(endWeek)}`;\n        }\n        return weekformat;\n    }\n\n    private formatDay(date: Date) {\n        return new Intl.DateTimeFormat([\"de-AT\"], { weekday: \"short\", year: \"numeric\", month: \"2-digit\", day: \"2-digit\" }).format(date);\n    }\n}\nexport const BezahlungenViewTagName = \"bezahlungen-view\";\ncustomElements.define(BezahlungenViewTagName, BezahlungenView);\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import startOfDay from \"../startOfDay/index.js\";\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import { ServiceLocator } from \"../../ServiceLocator\";\nimport { WorkerService, workerServiceFactory } from \"../../lib/WorkerService\";\n\nexport class KontokorrentActionCreator {\n\n    constructor(private workerService: WorkerService) {\n\n    }\n\n    kontokorrentOeffnen(id: string) {\n        this.workerService.kontokorrentOeffnen(id);\n    }\n}\n\nexport function kontokorrentActionCreatorFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"KontokorrentActionCreator\",\n        serviceLocator => new KontokorrentActionCreator(\n            workerServiceFactory(serviceLocator)\n        ));\n}","import template from \"./KontokorrentPage.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { KontokorrentState, State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport \"../BalanceAnzeige/BalanceAnzeigeElement\";\nimport { BalanceAnzeige } from \"../BalanceAnzeige/BalanceAnzeige\";\nimport \"../BalanceAnzeige/BalanceAnzeige\";\nimport \"../BezahlungenView/BezahlungenView\";\nimport { BezahlungenView } from \"../BezahlungenView/BezahlungenView\";\nimport \"./KontokorrentPage.scss\";\nimport { KontokorrentActionCreator, kontokorrentActionCreatorFactory } from \"../../state/actions/KontokorrentActionCreator\";\nimport { KontokorrentListenActionCreator, kontokorrentListenActionCreatorFactory } from \"../../state/actions/KontokorrentListenActionCreator\";\n\nexport class KontokorrentPage extends HTMLElement {\n    private store: Store;\n    private subscription: () => void;\n    private routingActionCreator: RoutingActionCreator;\n    private kontokorrentActionCreator: KontokorrentActionCreator;\n    private appBar: AppBar;\n    private balanceAnzeige: BalanceAnzeige;\n    private bezahlungenView: BezahlungenView;\n    private kontokorrentSpinner: HTMLSpanElement;\n    private kontokorrent: KontokorrentState;\n    private kontokorrentIdParameter: string;\n    private kontokorrentListenActionCreator: KontokorrentListenActionCreator;\n    private bezahlungClickListener: (e: CustomEvent) => void;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.appBar = this.querySelector(AppBarTagName);\n        this.balanceAnzeige = this.querySelector(\"#balance-anzeige\");\n        this.bezahlungenView = this.querySelector(\"#bezahlungen-view\");\n        this.kontokorrentSpinner = this.querySelector(\"#spinner\");\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.kontokorrentActionCreator = kontokorrentActionCreatorFactory(serviceLocator);\n        this.kontokorrentListenActionCreator = kontokorrentListenActionCreatorFactory(serviceLocator);\n        this.appBar.addServices(serviceLocator);\n    }\n\n    private bezahlungClick(id: string) {\n        this.routingActionCreator.navigateBezahlung(this.kontokorrentIdParameter, id);\n    }\n\n    connectedCallback() {\n        if (!this.kontokorrentIdParameter) {\n            this.kontokorrentListenActionCreator.navigiereZuLetztGesehenem(true);\n        }\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.appBar.addEventListener(\"gotokontokorrent\", (e: CustomEvent) => {\n            this.routingActionCreator.navigateKontokorrent(e.detail);\n        });\n        convertLinks(this.querySelectorAll(\"#eintragen-desktop, #eintragen-mobile\"), this.routingActionCreator);\n        this.applyStoreState(this.store.state);\n        this.bezahlungClickListener = e => this.bezahlungClick(e.detail);\n        this.bezahlungenView.addEventListener(\"bezahlungclick\", this.bezahlungClickListener);\n    }\n\n    private applyStoreState(state: State) {\n        this.kontokorrent = state.kontokorrents.kontokorrents[state.kontokorrents.activeKontokorrentId];\n        if (this.kontokorrent) {\n            document.title = `${this.kontokorrent.name} - Kontokorrent`;\n            if (this.kontokorrent.personen) {\n                this.balanceAnzeige.setBalance(this.kontokorrent.personen);\n                this.bezahlungenView.setBezahlungen(this.kontokorrent.bezahlungen, this.kontokorrent.personen);\n            }\n            this.kontokorrentSpinner.style.display = this.kontokorrent.synchronisieren ? \"flex\" : \"none\";\n        }\n    }\n\n    setRouteParameters(id: string) {\n        this.kontokorrentActionCreator.kontokorrentOeffnen(id);\n        this.kontokorrentIdParameter = id;\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n        this.bezahlungenView.removeEventListener(\"bezahlungclick\", this.bezahlungClickListener);\n    }\n}\n\ncustomElements.define('kontokorrent-page', KontokorrentPage);\n","import { RoutingActionCreator } from \"../state/actions/RoutingActionCreator\";\n\nexport function convertLinks(elements: Array<HTMLAnchorElement> | NodeListOf<HTMLAnchorElement>, routingActionCreator: RoutingActionCreator) {\n    elements.forEach((e: HTMLAnchorElement) => {\n        e.addEventListener(\"click\", ev => {\n            ev.preventDefault();\n            routingActionCreator.navigate(e.getAttribute(\"href\"));\n        });\n    });\n}","export class Popup extends HTMLElement {\n    private popupShown: boolean = false;\n    constructor() {\n        super();\n        this.keyListener = this.keyListener.bind(this);\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    connectedCallback() {\n        this.updateStyles();\n    }\n\n    private keyListener(ev: KeyboardEvent) {\n        if (ev.key == \"Escape\") {\n            this.hide();\n        }\n    }\n\n    private clickListener(ev: MouseEvent | TouchEvent) {\n        if (!this.contains(<Element>(event.target))) {\n            this.hide();\n        }\n    }\n\n    public hide() {\n        if (this.popupShown) {\n            document.removeEventListener(\"keydown\", this.keyListener);\n            document.removeEventListener(\"click\", this.clickListener);\n            this.popupShown = false;\n            this.updateStyles();\n        }\n    }\n\n    public show() {\n        if (!this.popupShown) {\n            document.addEventListener(\"keydown\", this.keyListener);\n            document.addEventListener(\"click\", this.clickListener);\n            this.popupShown = true;\n            this.updateStyles();\n        }\n    }\n\n    private updateStyles() {\n        this.style.display = this.popupShown ? \"block\" : \"none\";\n    }\n\n    public toggle() {\n        if (!this.popupShown) {\n            this.show();\n        }\n        else {\n            this.hide();\n\n        }\n    }\n\n    disconnectedCallback() {\n        this.hide();\n    }\n}\ncustomElements.define(\"app-popup\", Popup);\n","import { ServiceLocator } from \"../ServiceLocator\";\nimport { Store } from \"../state/Store\";\nimport { GetBeschreibungVorschlaegeMessage, KontokorrentOeffnenMessage, ResetBeschreibungenCacheMessage, WorkerMessageType } from \"../worker/KontokorrentWorker\";\n\nexport class WorkerService {\n    constructor(private store: Store) {\n\n    }\n    private worker: Worker;\n\n    private getWorker() {\n        if (!this.worker) {\n            this.worker = new Worker(new URL(\"../worker/KontokorrentWorker\", import.meta.url));\n            this.worker.addEventListener(\"message\", ev => {\n                if (ev.data?.type == \"statedispatch\") {\n                    let msg = ev.data.msg;\n                    this.store.dispatch(msg);\n                }\n            });\n        }\n        return this.worker;\n    }\n\n    getBeschreibungVorschlaege(kontokorrentId: string, eingabe: string) {\n        let msg: GetBeschreibungVorschlaegeMessage = {\n            kontokorrentId: kontokorrentId,\n            type: WorkerMessageType.GetBeschreibungVorschlaege,\n            eingabe: eingabe\n        };\n        this.getWorker().postMessage(msg);\n    }\n\n    resetBeschreibungenCache() {\n        let msg: ResetBeschreibungenCacheMessage = {\n            type: WorkerMessageType.ResetBeschreibungenCache,\n        };\n        this.getWorker().postMessage(msg);\n    }\n\n    kontokorrentOeffnen(id: string) {\n        let msg: KontokorrentOeffnenMessage = {\n            type: WorkerMessageType.KontokorrentOeffnen,\n            kontokorrentId: id\n        };\n        this.getWorker().postMessage(msg);\n    }\n}\n\nexport function workerServiceFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"WorkerService\",\n        serviceLocator => new WorkerService(serviceLocator.store));\n}","export class ArrayToElementRenderer<T, E extends Element, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n    \n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find(i => this.elementToKey.get(el) == getKey(i));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let t of list) {\n            let key = getKey(t);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}","export interface TemplateInstance {\n    apply(e: HTMLElement): boolean;\n    isApplied(): boolean;\n}\n\nexport class ReuseableTemplate {\n    private instance: HTMLTemplateElement;\n    constructor(private readonly template: string) {\n    }\n\n    private _get(): DocumentFragment {\n        if (null == this.instance) {\n            this.instance = document.createElement(\"template\");\n            this.instance.innerHTML = this.template;\n        }\n        return document.importNode(this.instance.content, true);\n    }\n\n    getInstance(): TemplateInstance {\n        class TemplateInstance {\n            private applied = false;\n\n            constructor(private r: ReuseableTemplate) {\n            }\n\n            apply(e: HTMLElement): boolean {\n                if (this.applied) {\n                    return false;\n                }\n                e.appendChild(this.r._get());\n                this.applied = true;\n                return true;\n            }\n            isApplied() {\n                return this.applied;\n            }\n        }\n        return new TemplateInstance(this);\n    }\n}\n\n\n","import { round } from \"./round\";\n\nexport function formatCurrency(wert: number) {\n    var Betrag: string = \"\" + round(wert, 2);\n    var Kommaindex = Betrag.toString().indexOf(\".\");\n    var Nachkommastellen = 0;\n    if (Kommaindex != -1) {\n        Nachkommastellen = Betrag.toString().length - (Kommaindex + 1);\n        if (Nachkommastellen == 1)\n            Betrag += '0';\n    }\n    return Betrag;\n}\n","export function round(value: number, decimals: number) {\n\n    //Removing scientific notation if used:\n    var valueString = value.toString();\n    var indexOfE = valueString.indexOf(\"E\");\n    var indexOfe = valueString.indexOf(\"e\");\n    var power = 0;\n    if (indexOfe > -1) {\n        power = parseFloat(valueString.substring(indexOfe + 1));\n        valueString = valueString.substring(0, indexOfe)\n    } else if (indexOfE > -1) {\n        power = parseFloat(valueString.substring(indexOfE + 1));\n        valueString = valueString.substring(0, indexOfE)\n    }\n    //round\n    return Number(Math.round(Number(valueString + 'e' + (power + decimals))) + 'e-' + (decimals));\n}"],"names":["requiredArgs","required","args","length","TypeError","toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","startOfDay","dirtyDate","arguments","date","toDate","setHours","argument","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","KontokorrentSelectListEntry","HTMLElement","constructor","super","this","innerHTML","name","querySelector","link","clickEvent","bind","connectedCallback","addEventListener","e","preventDefault","dispatchEvent","CustomEvent","detail","kontokorrent","id","bubbles","disconnectedCallback","removeEventListener","update","isActive","innerText","href","classList","toggle","customElements","define","KontokorrentSelectList","list","_kontokorrents","kontokorrentsRenderer","ArrayToElementRenderer","k","li","document","createElement","appendChild","firstChild","_activeKontokorrentId","kontokorrents","sortBy","KontokorrentSelectListTagName","KontokorrentSelect","kontokorrentName","kontokorrentSelectList","addButton","popup","updateAttributes","contains","event","target","stopPropagation","hide","attributeChangedCallback","activeKontokorrentId","getAttribute","updatesStyle","activeKontokorrent","find","KontokorrentSelectTagName","AppBar","rendered","kontokorrentSelect","logoutDialog","async","accountActionCreator","logout","convertLinks","querySelectorAll","routingActionCreator","subscription","store","subscribe","state","applyStoreState","navigateLogin","values","setAttribute","addServices","serviceLocator","AppBarTagName","PersonNameAttribute","BalanceAttribute","BalanceRangeAttribute","template","ReuseableTemplate","templateInstance","getInstance","apply","personNameElement","balanceTextElement","balanceContainerElement","barElement","requestAnimationFrame","style","transform","personName","balance","parseFloat","balanceRange","max","formatCurrency","scale","sign","abs","balanceTransform","add","remove","BalanceAnzeige","personenRenderer","b","setBalance","personen","map","v","BeschreibungAttribute","WertAttribute","BezahlendePersonAttribute","EmpfaengerAttribute","StatusAttribute","BezahlungIdAttribute","attributeStore","beschreibung","bezahlendePerson","empfaenger","wert","status","onClick","beschreibungElement","bezahlendePersonElement","empfaengerElement","wertElement","doneElement","doneAllElement","syncElement","clickListener","checkChanged","prop","getAtt","att","some","isApplied","display","startOfWeek","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","day","getDay","diff","setDate","getDate","groupBy","key","Map","forEach","item","collection","get","push","set","BezahlungenGroup","container","titleElement","bezahlungenRenderer","setBezahlungen","bezahlungen","bezahlendePersonName","t","BezahlungenView","minTage","minEintraege","all","bezahlungenContainer","showMoreButton","showMoreClick","groupRenderer","s","setShowMoreButtonDisplay","anzahlEintraege","last","lastElementChild","scrollIntoView","behavior","formatEmpfaenger","z","empfaengerIds","p","join","render","sorted","sort","a","zeitpunkt","filtered","filter","dirtyAmount","amount","addDays","now","slice","mapped","bezahlendePersonId","tag","woche","isWeek","grouped","Array","of","entries","reduce","c","sortedGroups","d","title","formatWeek","formatDay","val","weekformat","endWeek","endOfWeek","dayAndMonth","Intl","DateTimeFormat","month","format","getMonth","weekday","year","KontokorrentActionCreator","workerService","kontokorrentOeffnen","KontokorrentPage","appBar","balanceAnzeige","bezahlungenView","kontokorrentSpinner","kontokorrentActionCreator","kontokorrentActionCreatorFactory","kontokorrentListenActionCreator","bezahlungClick","navigateBezahlung","kontokorrentIdParameter","navigiereZuLetztGesehenem","navigateKontokorrent","bezahlungClickListener","synchronisieren","setRouteParameters","elements","ev","navigate","Popup","popupShown","keyListener","updateStyles","show","WorkerService","getWorker","worker","Worker","URL","data","type","msg","dispatch","getBeschreibungVorschlaege","kontokorrentId","eingabe","postMessage","resetBeschreibungenCache","workerServiceFactory","listElement","keySelector","keyToElement","elementToKey","WeakMap","updateElement","keyCache","getKey","x","from","children","el","i","removeChild","before","nextKeyToElement","childElement","firstElementChild","prepend","nextElementSibling","insertAdjacentElement","_get","instance","importNode","content","r","applied","valueString","indexOfE","indexOfe","power","Betrag","indexOf","substring","round","Kommaindex"],"sourceRoot":""}