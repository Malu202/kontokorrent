{"version":3,"sources":["webpack://kontokorrent/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/toDate/index.js","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.ts","webpack://kontokorrent/./src/components/AppBar/AppBar.ts","webpack://kontokorrent/./src/utils/formatCurrency.ts","webpack://kontokorrent/./src/utils/round.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeigeElement.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeige.ts","webpack://kontokorrent/./src/components/BezahlungCard/BezahlungCard.ts","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfWeek/index.js","webpack://kontokorrent/./src/utils/groupBy.ts","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenGroup.ts","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenView.ts","webpack://kontokorrent/./node_modules/date-fns/esm/addDays/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfToday/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/endOfWeek/index.js","webpack://kontokorrent/../src/comlink.ts","webpack://kontokorrent/./src/state/actions/KontokorrentActionCreator.ts","webpack://kontokorrent/./src/lib/filterBezahlungen.ts","webpack://kontokorrent/./src/components/KontokorrentPage/KontokorrentPage.ts","webpack://kontokorrent/./src/components/convertLinks.ts","webpack://kontokorrent/./src/components/ui-components/popup/popup.ts","webpack://kontokorrent/./src/utils/ArrayToElementRenderer.ts","webpack://kontokorrent/./src/utils/ReuseableTemplate.ts","webpack://kontokorrent/./src/components/AppBar/AppBar.html","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeige.html","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeigeElement.html","webpack://kontokorrent/./src/components/BezahlungCard/BezahlungCard.html","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenGroup.html","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenView.html","webpack://kontokorrent/./src/components/KontokorrentPage/KontokorrentPage.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.html"],"names":["requiredArgs","required","args","length","TypeError","startOfDay","dirtyDate","arguments","date","toDate","setHours","argument","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","KontokorrentSelectListEntry","HTMLElement","super","this","innerHTML","name","querySelector","link","clickEvent","bind","addEventListener","e","preventDefault","dispatchEvent","CustomEvent","detail","kontokorrent","id","bubbles","removeEventListener","isActive","innerText","href","classList","toggle","customElements","define","KontokorrentSelectList","list","_kontokorrents","kontokorrentsRenderer","ArrayToElementRenderer","k","li","document","createElement","appendChild","update","firstChild","_activeKontokorrentId","kontokorrents","sortBy","KontokorrentSelectListTagName","KontokorrentSelect","kontokorrentName","kontokorrentSelectList","addButton","popup","updateAttributes","contains","event","target","stopPropagation","hide","activeKontokorrentId","getAttribute","updatesStyle","activeKontokorrent","find","KontokorrentSelectTagName","AppBar","kontokorrentSelect","logoutDialog","async","accountActionCreator","logout","convertLinks","querySelectorAll","routingActionCreator","subscription","store","subscribe","state","applyStoreState","navigateLogin","values","setAttribute","serviceLocator","AppBarTagName","formatCurrency","wert","valueString","indexOfE","indexOfe","power","Betrag","indexOf","parseFloat","substring","Number","Math","round","Kommaindex","PersonNameAttribute","BalanceAttribute","BalanceRangeAttribute","template","ReuseableTemplate","get","personNameElement","balanceTextElement","balanceContainerElement","barElement","requestAnimationFrame","style","transform","personName","balance","balanceRange","max","scale","sign","abs","balanceTransform","add","remove","BalanceAnzeige","personenRenderer","b","personen","map","v","BeschreibungAttribute","WertAttribute","BezahlendePersonAttribute","EmpfaengerAttribute","StatusAttribute","attributeStore","beschreibung","bezahlendePerson","empfaenger","status","beschreibungElement","bezahlendePersonElement","empfaengerElement","wertElement","doneElement","doneAllElement","syncElement","prop","getAtt","att","checkChanged","some","display","toInteger","dirtyNumber","number","isNaN","ceil","floor","startOfWeek","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","day","getDay","diff","setDate","getDate","groupBy","key","Map","forEach","item","collection","push","set","BezahlungenGroup","container","titleElement","bezahlungenRenderer","bezahlungen","bezahlendePersonName","t","BezahlungenView","minTage","minEintraege","all","bezahlungenContainer","showMoreButton","showMoreClick","groupRenderer","s","anzahlEintraege","last","lastElementChild","scrollIntoView","setShowMoreButtonDisplay","z","empfaengerIds","p","join","render","sorted","sort","a","zeitpunkt","filtered","filter","dirtyAmount","amount","addDays","now","slice","mapped","bezahlendePersonId","formatEmpfaenger","tag","woche","isWeek","grouped","Array","of","entries","reduce","c","sortedGroups","d","setBezahlungen","title","formatWeek","formatDay","val","weekformat","endWeek","endOfWeek","dayAndMonth","Intl","DateTimeFormat","month","format","getMonth","weekday","year","proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","transferHandlers","canHandle","obj","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","value","serialized","isError","message","assign","ep","self","callback","ev","data","type","path","argumentList","fromWireValue","returnValue","parent","rawValue","apply","proxy","transfers","transferCache","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","closeEndPoint","endpoint","constructor","isMessagePort","close","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","_target","requestResponseMessage","r","_thisArg","rawArgumentList","processArguments","processed","arr","concat","WeakMap","handler","serializedValue","serialize","msg","fill","random","MAX_SAFE_INTEGER","l","KontokorrentGeoeffnet","KontokorrentBezahlungen","kontokorrentId","KontokorrentSynchronisieren","KontokorrentSynchronisiert","KontokorrentBalanceAktualisiert","KontokorrentActionCreator","apiClient","db","aktionen","bezahlungenMap","ordered","laufendeNummer","bearbeiteteBezahlungId","geloeschteBezahlungId","bezahlung","filterBezahlungen","getAktionen","zwischengespeicherte","getZwischengespeicherteBezahlungenForKontokorrent","dispatch","getWorkerApi","calculateBalance","refreshBezahlungen","getLaufendeNummer","res","success","addAktionen","refreshKontokorrent","workerApi","worker","Worker","URL","getKontokorrent","tasks","setZuletztGesehenerKontokorrentId","kontokorrentSynchronisieren","KontokorrentPage","appBar","balanceAnzeige","bezahlungenView","kontokorrentSpinner","kontokorrentActionCreator","kontokorrentActionCreatorFactory","kontokorrentListenActionCreator","addServices","kontokorrentIdParameter","navigiereZuLetztGesehenem","navigateKontokorrent","setBalance","synchronisieren","kontokorrentOeffnen","elements","navigate","Popup","popupShown","keyListener","clickListener","updateStyles","show","listElement","keySelector","keyToElement","elementToKey","updateElement","keyCache","getKey","x","from","children","el","i","removeChild","before","nextKeyToElement","childElement","firstElementChild","prepend","nextElementSibling","insertAdjacentElement","instance","importNode","content","module","exports"],"mappings":"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","file":"5e7d630c69418d66bb27.bundle.js","sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import template from \"./KontokorrentSelectListEntry.html\";\nimport { KontokorrentState } from \"../../state/State\";\n\n\nexport class KontokorrentSelectListEntry extends HTMLElement {\n    private name: HTMLSpanElement;\n    private link: HTMLAnchorElement;\n    private kontokorrent: KontokorrentState;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.name = this.querySelector(`[data-ref=\"name\"]`);\n        this.link = this.querySelector(`[data-ref=\"link\"]`);\n        this.clickEvent = this.clickEvent.bind(this);\n    }\n\n    connectedCallback() {\n        this.link.addEventListener(\"click\", this.clickEvent);\n    }\n\n    private clickEvent(e: MouseEvent): void {\n        e.preventDefault();\n        this.dispatchEvent(new CustomEvent(\"gotokontokorrent\", { detail: this.kontokorrent.id, bubbles: true }));\n    }\n\n    disconnectedCallback() {\n        this.link.removeEventListener(\"click\", this.clickEvent);\n    }\n\n    update(kontokorrent: KontokorrentState, isActive: boolean) {\n        this.kontokorrent = kontokorrent;\n        this.name.innerText = kontokorrent.name;\n        this.link.href = `kontokorrents/${kontokorrent.id}`;\n        this.link.classList.toggle(\"kontokorrent-select-list__entry--active\", isActive);\n    }\n}\nexport const KontokorrentSelectListEntryTagName = \"kontokorrent-select-list-entry\";\ncustomElements.define(KontokorrentSelectListEntryTagName, KontokorrentSelectListEntry);\n","import template from \"./KontokorrentSelectList.html\";\nimport \"./KontokorrentSelectList.scss\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { sortByAlphabetically } from \"../../utils/sortBy\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { KontokorrentSelectListEntry } from \"./KontokorrentSelectListEntry\";\n\nexport class KontokorrentSelectList extends HTMLElement {\n    private list: HTMLOListElement;\n    private _kontokorrents: KontokorrentState[];\n    private _activeKontokorrentId: string;\n    private kontokorrentsRenderer: ArrayToElementRenderer<KontokorrentState, HTMLLIElement, string>;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.list = this.querySelector(`[data-ref=\"list\"]`);\n        this._kontokorrents = [];\n        this.kontokorrentsRenderer = new ArrayToElementRenderer(this.list,\n            (k: KontokorrentState) => k.id,\n            () => {\n                let li = document.createElement(\"li\");\n                li.appendChild(new KontokorrentSelectListEntry());\n                return li;\n            });\n    }\n\n    connectedCallback() {\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private update() {\n        this.kontokorrentsRenderer.update(this._kontokorrents,\n            (li, kontokorrent) => {\n                let x: KontokorrentSelectListEntry = <KontokorrentSelectListEntry>li.firstChild;\n                x.update(kontokorrent, this._activeKontokorrentId == kontokorrent.id);\n            });\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this._kontokorrents = sortByAlphabetically(kontokorrents, k => k.name);\n        this.update();\n    }\n\n    set activeKontokorrentId(id: string) {\n        this._activeKontokorrentId = id;\n        this.update();\n    }\n}\nexport const KontokorrentSelectListTagName = \"kontokorrent-select-list\";\ncustomElements.define(KontokorrentSelectListTagName, KontokorrentSelectList);\n","import template from \"./KontokorrentSelect.html\";\nimport \"./KontokorrentSelect.scss\";\nimport \"./KontokorrentSelectList\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { KontokorrentSelectListTagName, KontokorrentSelectList } from \"./KontokorrentSelectList\";\nimport { Popup } from \"../ui-components/popup/popup\";\nimport \"../ui-components/popup/popup\";\n\nexport class KontokorrentSelect extends HTMLElement {\n    private kontokorrentName: HTMLHeadingElement;\n    private popup: Popup;\n    private kontokorrentSelectList: KontokorrentSelectList;\n    private addButton: HTMLButtonElement;\n    private activeKontokorrentId: string;\n    private _kontokorrents: KontokorrentState[];\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.kontokorrentName = this.querySelector(`[data-ref=\"kontokorrent-name\"]`);\n        this.kontokorrentSelectList = this.querySelector(KontokorrentSelectListTagName);\n        this.addButton = this.querySelector(`#add-kontokorrent`);\n        this._kontokorrents = null;\n    }\n\n    connectedCallback() {\n        this.popup = this.querySelector(`app-popup`);\n        this.updateAttributes();\n        this.addEventListener(\"click\", e => {\n            if (!this.popup.contains(<Element>(event.target))) {\n                this.popup.toggle();\n                e.stopPropagation();\n            }\n        });\n        this.addButton.addEventListener(\"click\", e => {\n            this.dispatchEvent(new CustomEvent(\"addkontokorrent\"));\n        });\n        this.kontokorrentSelectList.addEventListener(\"gotokontokorrent\", () => {\n            this.popup.hide();\n        })\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.activeKontokorrentId = this.getAttribute(\"active-kontokorrent-id\");\n        this.kontokorrentSelectList.activeKontokorrentId = this.activeKontokorrentId;\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [\"active-kontokorrent-id\"];\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this.kontokorrentSelectList.kontokorrents = kontokorrents;\n        this._kontokorrents = kontokorrents;\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        if (this._kontokorrents && this._kontokorrents.length) {\n            let activeKontokorrent = this._kontokorrents.find(k => k.id == this.activeKontokorrentId);\n            if (activeKontokorrent) {\n                this.kontokorrentName.innerText = activeKontokorrent.name;\n            }\n            else {\n                this.kontokorrentName.innerText = \"(Kontokorrent wählen)\";\n            }\n        }\n    }\n\n}\nexport const KontokorrentSelectTagName = \"kontokorrent-select\";\ncustomElements.define(KontokorrentSelectTagName, KontokorrentSelect);\n","import template from \"./AppBar.html\";\nimport \"./AppBar.scss\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { convertLinks } from \"../convertLinks\";\nimport \"../KontokorrentSelect/KontokorrentSelect\";\nimport { KontokorrentSelectTagName, KontokorrentSelect } from \"../KontokorrentSelect/KontokorrentSelect\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { AccountActionCreator, accountActionCreatorFactory } from \"../../state/actions/AccountActionCreator\";\nimport { Store } from \"../../state/Store\";\nimport { State } from \"../../state/State\";\nimport { Popup } from \"../ui-components/popup/popup\";\n\nexport class AppBar extends HTMLElement {\n    private kontokorrentSelect: KontokorrentSelect;\n    private store: Store;\n    private routingActionCreator: RoutingActionCreator;\n    private accountActionCreator: AccountActionCreator;\n    private logoutDialog: Popup;\n    private subscription: () => void;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.kontokorrentSelect = this.querySelector(KontokorrentSelectTagName);\n        this.logoutDialog = this.querySelector(\"#logout-dialog\");\n    }\n\n    connectedCallback() {\n        this.querySelector(\"#logout-button\").addEventListener(\"click\", (e: MouseEvent) => {\n            this.logoutDialog.toggle();\n            e.stopPropagation();\n        });\n        this.querySelector(\"#confirm-logout\").addEventListener(\"click\", async () => {\n            await this.accountActionCreator.logout();\n        });\n        this.querySelector(\"#abort-logout\").addEventListener(\"click\", () => {\n            this.logoutDialog.hide();\n        });\n        convertLinks(this.querySelectorAll(\"a\"), this.routingActionCreator);\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n        this.kontokorrentSelect.addEventListener(\"addkontokorrent\", () => {\n            this.routingActionCreator.navigateLogin();\n        });\n    }\n\n    applyStoreState(state: State): void {\n        this.kontokorrentSelect.kontokorrents = Object.values(state.kontokorrents.kontokorrents);\n        this.kontokorrentSelect.setAttribute(\"active-kontokorrent-id\", state.kontokorrents.activeKontokorrentId);\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.accountActionCreator = accountActionCreatorFactory(serviceLocator);\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n    }\n}\nexport const AppBarTagName = \"app-bar\";\ncustomElements.define(AppBarTagName, AppBar);\n","import { round } from \"./round\";\n\nexport function formatCurrency(wert: number) {\n    var Betrag: string = \"\" + round(wert, 2);\n    var Kommaindex = Betrag.toString().indexOf(\".\");\n    var Nachkommastellen = 0;\n    if (Kommaindex != -1) {\n        Nachkommastellen = Betrag.toString().length - (Kommaindex + 1);\n        if (Nachkommastellen == 1)\n            Betrag += '0';\n    }\n    return Betrag;\n}\n","export function round(value: number, decimals: number) {\n\n    //Removing scientific notation if used:\n    var valueString = value.toString();\n    var indexOfE = valueString.indexOf(\"E\");\n    var indexOfe = valueString.indexOf(\"e\");\n    var power = 0;\n    if (indexOfe > -1) {\n        power = parseFloat(valueString.substring(indexOfe + 1));\n        valueString = valueString.substring(0, indexOfe)\n    } else if (indexOfE > -1) {\n        power = parseFloat(valueString.substring(indexOfE + 1));\n        valueString = valueString.substring(0, indexOfE)\n    }\n    //round\n    return Number(Math.round(Number(valueString + 'e' + (power + decimals))) + 'e-' + (decimals));\n}","import templateContent from \"./BalanceAnzeigeElement.html\";\nimport \"./BalanceAnzeigeElement.scss\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { ReuseableTemplate } from \"../../utils/ReuseableTemplate\";\n\nexport const PersonNameAttribute = \"person-name\";\nexport const BalanceAttribute = \"balance\";\nexport const BalanceRangeAttribute = \"balance-range\";\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class BalanceAnzeigeElement extends HTMLElement {\n    private personName: string;\n    private balance: number;\n    private personNameElement: HTMLSpanElement;\n    private balanceTextElement: HTMLSpanElement;\n    private balanceRange: number;\n    private barElement: HTMLDivElement;\n    private balanceContainerElement: HTMLSpanElement;\n\n    constructor() {\n        super();\n        this.appendChild(template.get());\n        this.personNameElement = this.querySelector(`[data-ref=\"person-name\"]`);\n        this.balanceTextElement = this.querySelector(`[data-ref=\"balance-text\"]`);\n        this.balanceContainerElement = this.querySelector(`[data-ref=\"balance-container\"]`);\n        this.barElement = this.querySelector(`[data-ref=\"bar\"]`);\n    }\n\n    connectedCallback() {\n        requestAnimationFrame(() => {\n            this.barElement.style.transform = `scaleY(0)`;\n            this.updatesStyle();\n        });\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.personName = this.getAttribute(PersonNameAttribute);\n        this.balance = parseFloat(this.getAttribute(BalanceAttribute));\n        this.balanceRange = Math.max(2, parseFloat(this.getAttribute(BalanceRangeAttribute)));\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [PersonNameAttribute, BalanceAttribute, BalanceRangeAttribute];\n    }\n\n    private updatesStyle() {\n        requestAnimationFrame(() => {\n            this.personNameElement.innerText = this.personName;\n            this.balanceTextElement.innerText = formatCurrency(this.balance);\n            let scale = Math.sign(this.balance) * Math.abs(this.balance) / this.balanceRange;\n            let balanceTransform = scale * 1.9;\n            this.barElement.style.transform = `scaleY(${scale})`;\n            this.balanceContainerElement.style.transform = Math.sign(this.balance) < 0 ? `translateY(calc(${balanceTransform}em - 150%))`\n                : `translateY(calc(${balanceTransform}em + 50%))`;\n            if (scale > 0) {\n                this.barElement.classList.add(\"balance-anzeige-element__bar--negative\");\n                this.barElement.classList.remove(\"balance-anzeige-element__bar--positive\");\n            }\n            else {\n                this.barElement.classList.remove(\"balance-anzeige-element__bar--negative\");\n                this.barElement.classList.add(\"balance-anzeige-element__bar--positive\");\n            }\n        });\n    }\n\n}\nexport const BalanceAnzeigeElementTagName = \"balance-anzeige-element\";\ncustomElements.define(BalanceAnzeigeElementTagName, BalanceAnzeigeElement);\n","import template from \"./BalanceAnzeige.html\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BalanceAnzeigeElement, PersonNameAttribute, BalanceAttribute, BalanceRangeAttribute } from \"./BalanceAnzeigeElement\";\nimport { Person } from \"../../state/State\";\n\nexport class BalanceAnzeige extends HTMLElement {\n    private balanceRange: number;\n    private personen: Person[];\n    private personenRenderer: ArrayToElementRenderer<Person, HTMLElement, string>;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.personenRenderer = new ArrayToElementRenderer(this,\n            (b: Person) => b.id,\n            b => new BalanceAnzeigeElement());\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    setBalance(personen: Person[]) {\n        this.personen = personen;\n        this.balanceRange = Math.max(...Object.values(personen).map(v => Math.abs(v.balance)));\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        this.personenRenderer.update(this.personen,\n            (e, b) => {\n                e.setAttribute(PersonNameAttribute, b.name);\n                e.setAttribute(BalanceAttribute, \"\" + b.balance);\n                e.setAttribute(BalanceRangeAttribute, \"\" + this.balanceRange);\n            });\n    }\n\n}\nexport const BalanceAnzeigeTagName = \"balance-anzeige\";\ncustomElements.define(BalanceAnzeigeTagName, BalanceAnzeige);\n","import templateContent from \"./BezahlungCard.html\";\nimport \"./BezahlungCard.scss\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { ReuseableTemplate } from \"../../utils/ReuseableTemplate\";\nimport { BezahlungStatus } from \"../../state/State\";\n\nexport const BeschreibungAttribute = \"beschreibung\";\nexport const WertAttribute = \"wert\";\nexport const BezahlendePersonAttribute = \"bezahlende-person\";\nexport const EmpfaengerAttribute = \"empfaenger\";\nexport const StatusAttribute = \"status\";\n\ninterface AttributeStore {\n    bezahlendePerson: string;\n    beschreibung: string;\n    wert: number;\n    empfaenger: string;\n    status: string;\n}\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class BezahlungCard extends HTMLElement {\n    private attributeStore: AttributeStore;\n    private wertElement: HTMLSpanElement;\n    private empfaengerElement: HTMLSpanElement;\n    private bezahlendePersonElement: HTMLSpanElement;\n    private beschreibungElement: HTMLDivElement;\n    private doneElement: HTMLSpanElement;\n    private doneAllElement: HTMLSpanElement;\n    private syncElement: HTMLSpanElement;\n\n    constructor() {\n        super();\n        this.attributeStore = {\n            beschreibung: null,\n            bezahlendePerson: null,\n            empfaenger: null,\n            wert: null,\n            status: null\n        };\n        this.appendChild(template.get());\n        this.beschreibungElement = this.querySelector(`[data-ref=\"beschreibung\"]`);\n        this.bezahlendePersonElement = this.querySelector(`[data-ref=\"bezahlende-person\"]`);\n        this.empfaengerElement = this.querySelector(`[data-ref=\"empfaenger\"]`);\n        this.wertElement = this.querySelector(`[data-ref=\"wert\"]`);\n        this.doneElement = this.querySelector(`[data-ref=\"icon-done\"]`);\n        this.doneAllElement = this.querySelector(`[data-ref=\"icon-done-all\"]`);\n        this.syncElement = this.querySelector(`[data-ref=\"icon-sync\"]`);\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private checkChanged<K extends keyof AttributeStore>(prop: K, getAtt: () => AttributeStore[K]) {\n        let att = getAtt();\n        if (this.attributeStore[prop] != att) {\n            this.attributeStore[prop] = att;\n            return true;\n        }\n        return false;\n    }\n\n    private updateAttributes() {\n        let changed = [\n            this.checkChanged(\"bezahlendePerson\", () => this.getAttribute(BezahlendePersonAttribute)),\n            this.checkChanged(\"beschreibung\", () => this.getAttribute(BeschreibungAttribute)),\n            this.checkChanged(\"wert\", () => parseFloat(this.getAttribute(WertAttribute))),\n            this.checkChanged(\"empfaenger\", () => this.getAttribute(EmpfaengerAttribute)),\n            this.checkChanged(\"status\", () => this.getAttribute(StatusAttribute))\n        ].some(v => v);\n        if (changed) {\n            this.updatesStyle();\n        }\n    }\n\n    static get observedAttributes() {\n        return [BeschreibungAttribute, BezahlendePersonAttribute, WertAttribute, EmpfaengerAttribute, StatusAttribute];\n    }\n\n    private updatesStyle() {\n        this.beschreibungElement.innerText = this.attributeStore.beschreibung;\n        this.bezahlendePersonElement.innerText = this.attributeStore.bezahlendePerson;\n        this.wertElement.innerText = formatCurrency(this.attributeStore.wert);\n        this.empfaengerElement.innerText = this.attributeStore.empfaenger;\n        this.doneAllElement.style.display = this.attributeStore.status == BezahlungStatus.Gespeichert ? \"inline\" : \"none\";\n        this.doneElement.style.display = this.attributeStore.status == BezahlungStatus.Zwischengespeichert ? \"inline\" : \"none\";\n        this.syncElement.style.display = this.attributeStore.status == BezahlungStatus.Speichern ? \"inline\" : \"none\";\n    }\n\n}\nexport const BezahlungCardTagName = \"bezahlung-card\";\ncustomElements.define(BezahlungCardTagName, BezahlungCard);\n","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","export function groupBy<T, K extends keyof T>(list: T[], key: K) {\n    const map = new Map<T[K], T[]>();\n    list.forEach((item) => {\n        const k = item[key];\n        const collection = map.get(k);\n        if (!collection) {\n            map.set(k, [item]);\n        } else {\n            collection.push(item);\n        }\n    });\n    return map;\n}\n","import template from \"./BezahlungenGroup.html\";\nimport \"../BezahlungCard/BezahlungCard\";\nimport { BezahlungViewModel } from \"./BezahlungViewModel\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BeschreibungAttribute, BezahlendePersonAttribute, BezahlungCard, EmpfaengerAttribute, StatusAttribute, WertAttribute } from \"../BezahlungCard/BezahlungCard\";\n\nexport class BezahlungenGroup extends HTMLElement {\n    private container: HTMLDivElement;\n    private titleElement: HTMLHeadingElement;\n    private bezahlungenRenderer: ArrayToElementRenderer<BezahlungViewModel, BezahlungCard, string>;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.container = this.querySelector(`[data-ref=\"container\"]`);\n        this.titleElement = this.querySelector(`[data-ref=\"title\"]`);\n        this.bezahlungenRenderer = new ArrayToElementRenderer(this.container,\n            (b: BezahlungViewModel) => b.id,\n            b => new BezahlungCard());\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n\n\n    setBezahlungen(bezahlungen: BezahlungViewModel[]) {\n        this.bezahlungenRenderer.update(bezahlungen, (e, b) => {\n            e.setAttribute(BeschreibungAttribute, b.beschreibung);\n            e.setAttribute(WertAttribute, \"\" + b.wert);\n            e.setAttribute(BezahlendePersonAttribute, b.bezahlendePersonName);\n            e.setAttribute(EmpfaengerAttribute, b.empfaenger);\n            e.setAttribute(StatusAttribute, b.status)\n        });\n    }\n\n    set title(t: string) {\n        this.titleElement.innerText = t;\n    }\n\n}\nexport const BezahlungenGroupTagName = \"bezahlungen-group\";\ncustomElements.define(BezahlungenGroupTagName, BezahlungenGroup);\n","import template from \"./BezahlungenView.html\";\nimport \"./BezahlungenView.scss\";\nimport \"../BezahlungCard/BezahlungCard\";\nimport { Bezahlung, Person } from \"../../state/State\";\nimport { addDays, startOfToday, startOfDay, startOfWeek, endOfWeek } from \"date-fns\";\nimport { groupBy } from \"../../utils/groupBy\";\nimport \"./BezahlungenGroup\";\nimport { BezahlungViewModel } from \"./BezahlungViewModel\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BezahlungenGroup } from \"./BezahlungenGroup\";\n\nexport class BezahlungenView extends HTMLElement {\n    private minEintraege: number;\n    private minTage: number;\n    private all: boolean;\n    private bezahlungen: Bezahlung[];\n    private personen: Person[];\n    private bezahlungenContainer: HTMLDivElement;\n    private showMoreButton: HTMLButtonElement;\n    private groupRenderer: ArrayToElementRenderer<[number, BezahlungViewModel[]], BezahlungenGroup, string>;\n\n    constructor() {\n        super();\n        this.minTage = 3;\n        this.minEintraege = 20;\n        this.all = false;\n        this.innerHTML = template;\n        this.bezahlungenContainer = this.querySelector(\"#bezahlungen-container\");\n        this.showMoreButton = this.querySelector(\"#show-more\");\n        this.showMoreClick = this.showMoreClick.bind(this);\n        this.groupRenderer = new ArrayToElementRenderer(this.bezahlungenContainer,\n            (s: [number, BezahlungViewModel[]]) => \"\" + s[0], () => new BezahlungenGroup());\n    }\n\n    connectedCallback() {\n        this.showMoreButton.addEventListener(\"click\", this.showMoreClick);\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private setShowMoreButtonDisplay() {\n        if (this.bezahlungen) {\n            this.showMoreButton.style.display = this.bezahlungen.length > this.anzahlEintraege ? \"inline\" : \"none\";\n        }\n    }\n\n    showMoreClick() {\n        let last: BezahlungenGroup = <BezahlungenGroup>this.bezahlungenContainer.lastElementChild;\n        this.anzahlEintraege += 20;\n        if (last) {\n            last.scrollIntoView();\n        }\n        this.setShowMoreButtonDisplay();\n    }\n\n    private formatEmpfaenger(z: Bezahlung, personen: Person[]) {\n        if (z.empfaengerIds.length == personen.length) {\n            return \"alle\";\n        }\n        return z.empfaengerIds.map(id => personen.find(p => p.id == id).name).join(\", \");\n    }\n\n    setBezahlungen(bezahlungen: Bezahlung[], personen: Person[]) {\n        this.bezahlungen = bezahlungen;\n        this.personen = personen;\n        this.setShowMoreButtonDisplay();\n        this.render();\n    }\n\n    private render() {\n        let sorted = this.bezahlungen.sort((a, b) => +b.zeitpunkt - +a.zeitpunkt);\n\n        let filtered = sorted;\n        if (!this.all) {\n            filtered = sorted.filter(z => z.zeitpunkt > addDays(startOfToday(), -this.minTage));\n            if (filtered.length < this.minEintraege) {\n                filtered = sorted.slice(0, this.minEintraege)\n            }\n        }\n\n        let mapped = filtered.map(z => {\n            let x: BezahlungViewModel = {\n                bezahlendePersonName: this.personen.find(p => p.id == z.bezahlendePersonId).name,\n                wert: z.wert,\n                beschreibung: z.beschreibung,\n                empfaenger: this.formatEmpfaenger(z, this.personen),\n                tag: +startOfDay(z.zeitpunkt),\n                id: z.id,\n                woche: +startOfWeek(z.zeitpunkt),\n                status: z.status\n            };\n            return x;\n        });\n\n        let isWeek = false;\n        let grouped = Array.of(...groupBy(mapped, \"tag\").entries());\n        let avgGroupSize = grouped.reduce((p, c) => p + c[1].length, 0) / grouped.length;\n        if (avgGroupSize < 3) {\n            grouped = Array.of(...groupBy(mapped, \"woche\").entries());\n            isWeek = true;\n        }\n        let sortedGroups = grouped.sort((a, b) => b[0] - a[0]);\n        this.groupRenderer.update(sortedGroups,\n            (e, d) => {\n                e.setBezahlungen(d[1]);\n                if (isWeek) {\n                    e.title = this.formatWeek(new Date(d[0]));\n                }\n                else {\n\n                    e.title = this.formatDay(new Date(d[0]));\n                }\n            });\n\n    }\n\n    get anzahlEintraege() {\n        return this.minEintraege;\n    }\n\n    set anzahlEintraege(val: number) {\n        this.minEintraege = val;\n        this.render();\n    }\n\n\n    private formatWeek(date: Date) {\n        let endWeek = endOfWeek(date);\n        let weekformat: string;\n        const dayAndMonth = (d: Date) => new Intl.DateTimeFormat([\"de-AT\"], { day: \"numeric\", month: \"long\" }).format(d);\n        if (endWeek.getMonth() == date.getMonth()) {\n            weekformat = `${new Intl.DateTimeFormat([\"de-AT\"], { day: \"numeric\" }).format(date)}. - ${dayAndMonth(endWeek)}`;\n        }\n        else {\n            weekformat = `${dayAndMonth(date)} - ${dayAndMonth(endWeek)}`;\n        }\n        return weekformat;\n    }\n\n    private formatDay(date: Date) {\n        return new Intl.DateTimeFormat([\"de-AT\"], { weekday: \"short\", year: \"numeric\", month: \"2-digit\", day: \"2-digit\" }).format(date);\n    }\n}\nexport const BezahlungenViewTagName = \"bezahlungen-view\";\ncustomElements.define(BezahlungenViewTagName, BezahlungenView);\n","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import { Store } from \"../Store\";\nimport { ApiClient } from \"../../api/ApiClient\";\nimport { Action } from \"../lib/Action\";\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\nimport { Bezahlung, BezahlungStatus } from \"../State\";\ntype KontokorrentWorkerApi = import(\"../../worker/KontokorrentWorker\").KontokorrentWorkerApi;\nimport { wrap } from \"comlink\";\nimport { filterBezahlungen } from \"../../lib/filterBezahlungen\";\nimport { KontokorrentBalance } from \"../../lib/KontokorrentBalance\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { ActionNames } from \"./ActionNames\";\n\nexport class KontokorrentGeoeffnet implements Action {\n    readonly type = ActionNames.KontokorrentGeoeffnet;\n    constructor(public id: string) {\n\n    }\n}\n\nexport class KontokorrentBezahlungen implements Action {\n    readonly type = ActionNames.KontokorrentBezahlungen;\n    constructor(public kontokorrentId: string, public bezahlungen: Bezahlung[]) {\n\n    }\n}\n\nexport class KontokorrentSynchronisieren implements Action {\n    readonly type = ActionNames.KontokorrentSynchronisieren;\n    constructor(public kontokorrentId: string) {\n\n    }\n}\n\nexport class KontokorrentSynchronisiert implements Action {\n    readonly type = ActionNames.KontokorrentSynchronisiert;\n    constructor(public kontokorrentId: string) {\n\n    }\n}\n\nexport class KontokorrentBalanceAktualisiert implements Action {\n    readonly type = ActionNames.KontokorrentBalanceAktualisiert;\n    constructor(public kontokorrentId: string, public balance: KontokorrentBalance) {\n\n    }\n}\n\nexport type KontokorrentActions =\n    | KontokorrentGeoeffnet\n    | KontokorrentBezahlungen\n    | KontokorrentSynchronisieren\n    | KontokorrentSynchronisiert\n    | KontokorrentBalanceAktualisiert;\n\nexport class KontokorrentActionCreator {\n    private workerApi: KontokorrentWorkerApi;\n    constructor(private store: Store,\n        private apiClient: ApiClient,\n        private db: KontokorrentDatabase) {\n\n    }\n    private async refreshBezahlungen(id: string) {\n        let aktionen = filterBezahlungen(await this.db.getAktionen(id)).map(b => {\n            return {\n                ...b,\n                status: BezahlungStatus.Gespeichert\n            };\n        });\n        let zwischengespeicherte = (await this.db.getZwischengespeicherteBezahlungenForKontokorrent(id)).map(b => {\n            let x: Bezahlung = {\n                status: BezahlungStatus.Zwischengespeichert,\n                beschreibung: b.beschreibung,\n                bezahlendePersonId: b.bezahlendePersonId,\n                empfaengerIds: b.empfaengerIds,\n                id: b.id,\n                wert: b.wert,\n                zeitpunkt: b.zeitpunkt\n            };\n            return x;\n        });\n        this.store.dispatch(new KontokorrentBezahlungen(id, [...aktionen, ...zwischengespeicherte]));\n    }\n\n    private async calculateBalance(id: string) {\n        let balance = await (await this.getWorkerApi()).calculateBalance(id);\n        this.store.dispatch(new KontokorrentBalanceAktualisiert(id, balance));\n    }\n\n    private async refreshKontokorrent(id: string) {\n        await Promise.all([this.refreshBezahlungen(id), this.calculateBalance(id)]);\n    }\n\n    private async kontokorrentSynchronisieren(id: string) {\n        this.store.dispatch(new KontokorrentSynchronisieren(id));\n        let laufendeNummer = await (await this.getWorkerApi()).getLaufendeNummer(id);\n        let res = await this.apiClient.getAktionen(id, laufendeNummer);\n        if (res.success) {\n            await this.db.addAktionen(id, res.aktionen);\n            if (res.aktionen.length > 0) {\n                await this.refreshKontokorrent(id);\n            }\n        }\n        this.store.dispatch(new KontokorrentSynchronisiert(id));\n    }\n\n    private async getWorkerApi() {\n        if (this.workerApi) {\n            return this.workerApi;\n        }\n        const worker = new Worker(new URL(\"../../worker/KontokorrentWorker\", import.meta.url));\n        this.workerApi = wrap<KontokorrentWorkerApi>(worker);\n        return this.workerApi;\n    }\n\n    async kontokorrentOeffnen(id: string) {\n        let kk = await this.db.getKontokorrent(id);\n        if (null != kk) {\n            this.store.dispatch(new KontokorrentGeoeffnet(id));\n            let tasks = [];\n            tasks.push(this.db.setZuletztGesehenerKontokorrentId(id));\n            tasks.push(this.refreshKontokorrent(id));\n            tasks.push(this.kontokorrentSynchronisieren(id));\n            await Promise.all(tasks);\n        }\n    }\n}\n\nexport function kontokorrentActionCreatorFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"KontokorrentActionCreator\",\n        serviceLocator => new KontokorrentActionCreator(\n            serviceLocator.store,\n            serviceLocator.apiClient,\n            serviceLocator.db\n        ));\n}","import { BezahlungDbModel } from \"./BezahlungDbModel\";\nimport { AktionDbModel } from \"./AktionDbModel\";\n\nexport function filterBezahlungen(aktionen: AktionDbModel[]) {\n    let bezahlungenMap: { [id: string]: BezahlungDbModel } = {};\n    let ordered = aktionen.sort((a,b)=> a.laufendeNummer - b.laufendeNummer);\n    for (let b of ordered) {\n        if (b.bearbeiteteBezahlungId) {\n            delete bezahlungenMap[b.bearbeiteteBezahlungId];\n        }\n        if (b.geloeschteBezahlungId) {\n            delete bezahlungenMap[b.geloeschteBezahlungId];\n        }\n        else {\n            bezahlungenMap[b.bezahlung.id] = b.bezahlung;\n        }\n    }\n    let bezahlungen = Object.values(bezahlungenMap);\n    return bezahlungen;\n}","import template from \"./KontokorrentPage.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { KontokorrentState, State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport \"../BalanceAnzeige/BalanceAnzeigeElement\";\nimport { BalanceAnzeige } from \"../BalanceAnzeige/BalanceAnzeige\";\nimport \"../BalanceAnzeige/BalanceAnzeige\";\nimport \"../BezahlungenView/BezahlungenView\";\nimport { BezahlungenView } from \"../BezahlungenView/BezahlungenView\";\nimport \"./KontokorrentPage.scss\";\nimport { KontokorrentActionCreator, kontokorrentActionCreatorFactory } from \"../../state/actions/KontokorrentActionCreator\";\nimport { KontokorrentListenActionCreator, kontokorrentListenActionCreatorFactory } from \"../../state/actions/KontokorrentListenActionCreator\";\n\nexport class KontokorrentPage extends HTMLElement {\n    private store: Store;\n    private subscription: () => void;\n    private routingActionCreator: RoutingActionCreator;\n    private kontokorrentActionCreator: KontokorrentActionCreator;\n    private appBar: AppBar;\n    private balanceAnzeige: BalanceAnzeige;\n    private bezahlungenView: BezahlungenView;\n    private kontokorrentSpinner: HTMLSpanElement;\n    private kontokorrent: KontokorrentState;\n    private kontokorrentIdParameter: string;\n    private kontokorrentListenActionCreator: KontokorrentListenActionCreator;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.appBar = this.querySelector(AppBarTagName);\n        this.balanceAnzeige = this.querySelector(\"#balance-anzeige\");\n        this.bezahlungenView = this.querySelector(\"#bezahlungen-view\");\n        this.kontokorrentSpinner = this.querySelector(\"#spinner\");\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.kontokorrentActionCreator = kontokorrentActionCreatorFactory(serviceLocator);\n        this.kontokorrentListenActionCreator = kontokorrentListenActionCreatorFactory(serviceLocator);\n        this.appBar.addServices(serviceLocator);\n    }\n\n    connectedCallback() {\n        if (!this.kontokorrentIdParameter) {\n            this.kontokorrentListenActionCreator.navigiereZuLetztGesehenem(true);\n        }\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.appBar.addEventListener(\"gotokontokorrent\", (e: CustomEvent) => {\n            this.routingActionCreator.navigateKontokorrent(e.detail);\n        });\n        convertLinks(this.querySelectorAll(\"#eintragen-desktop, #eintragen-mobile\"), this.routingActionCreator);\n        this.applyStoreState(this.store.state);\n    }\n\n    private applyStoreState(state: State) {\n        this.kontokorrent = state.kontokorrents.kontokorrents[state.kontokorrents.activeKontokorrentId];\n        if (this.kontokorrent) {\n            document.title = `${this.kontokorrent.name} - Kontokorrent`;\n            if (this.kontokorrent.personen) {\n                this.balanceAnzeige.setBalance(this.kontokorrent.personen);\n                this.bezahlungenView.setBezahlungen(this.kontokorrent.bezahlungen, this.kontokorrent.personen);\n            }\n            this.kontokorrentSpinner.style.display = this.kontokorrent.synchronisieren ? \"flex\" : \"none\";\n        }\n    }\n\n    setRouteParameters(id: string) {\n        this.kontokorrentActionCreator.kontokorrentOeffnen(id);\n        this.kontokorrentIdParameter = id;\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n    }\n}\n\ncustomElements.define('kontokorrent-page', KontokorrentPage);\n","import { RoutingActionCreator } from \"../state/actions/RoutingActionCreator\";\n\nexport function convertLinks(elements: Array<HTMLAnchorElement> | NodeListOf<HTMLAnchorElement>, routingActionCreator: RoutingActionCreator) {\n    elements.forEach((e: HTMLAnchorElement) => {\n        e.addEventListener(\"click\", ev => {\n            ev.preventDefault();\n            routingActionCreator.navigate(e.getAttribute(\"href\"));\n        });\n    });\n}","export class Popup extends HTMLElement {\n    private popupShown: boolean = false;\n    constructor() {\n        super();\n        this.keyListener = this.keyListener.bind(this);\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    connectedCallback() {\n        this.updateStyles();\n    }\n\n    private keyListener(ev: KeyboardEvent) {\n        if (ev.key == \"Escape\") {\n            this.hide();\n        }\n    }\n\n    private clickListener(ev: MouseEvent | TouchEvent) {\n        if (!this.contains(<Element>(event.target))) {\n            this.hide();\n        }\n    }\n\n    public hide() {\n        if (this.popupShown) {\n            document.removeEventListener(\"keydown\", this.keyListener);\n            document.removeEventListener(\"click\", this.clickListener);\n            this.popupShown = false;\n            this.updateStyles();\n        }\n    }\n\n    public show() {\n        if (!this.popupShown) {\n            document.addEventListener(\"keydown\", this.keyListener);\n            document.addEventListener(\"click\", this.clickListener);\n            this.popupShown = true;\n            this.updateStyles();\n        }\n    }\n\n    private updateStyles() {\n        this.style.display = this.popupShown ? \"block\" : \"none\";\n    }\n\n    public toggle() {\n        if (!this.popupShown) {\n            this.show();\n        }\n        else {\n            this.hide();\n\n        }\n    }\n\n    disconnectedCallback() {\n        this.hide();\n    }\n}\ncustomElements.define(\"app-popup\", Popup);\n","export class ArrayToElementRenderer<T, E extends Element, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n    \n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find(i => this.elementToKey.get(el) == getKey(i));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let t of list) {\n            let key = getKey(t);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}","export class ReuseableTemplate {\n    private instance: HTMLTemplateElement;\n    constructor(private readonly template: string) {\n    }\n\n    get(): DocumentFragment {\n        if (null == this.instance) {\n            this.instance = document.createElement(\"template\");\n            this.instance.innerHTML = this.template;\n        }\n        return document.importNode(this.instance.content, true);\n    }\n}\n","// Module\nvar code = \"<header class=\\\"app-bar\\\"> <kontokorrent-select class=\\\"app-bar__kontokorrent-select\\\"></kontokorrent-select> <nav class=\\\"app-bar__links\\\"> <button id=\\\"logout-button\\\" class=\\\"app-bar__link\\\" title=\\\"Logout\\\"> <span class=\\\"material-icons\\\"> exit_to_app </span> </button> <a href=\\\"info\\\" class=\\\"app-bar__link\\\" title=\\\"Informationen über diese App\\\"> <span class=\\\"material-icons\\\"> info </span> </a> </nav> </header> <app-popup id=\\\"logout-dialog\\\"> <div class=\\\"dialog__backdrop\\\"></div> <div class=\\\"dialog\\\"> <p> Wirklich aus allen Kontokorrents ausloggen? </p> <div class=\\\"dialog__button-pane\\\"> <button id=\\\"abort-logout\\\" class=\\\"button\\\">Abbrechen</button> <button id=\\\"confirm-logout\\\" class=\\\"button\\\">Ausloggen</button> </div> </div> </app-popup>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"balance-anzeige-element__graphic-container\\\"> <div class=\\\"balance-anzeige-element__bar\\\" data-ref=\\\"bar\\\"></div> <div class=\\\"balance-anzeige-element__horizontal-line\\\"></div> <span class=\\\"balance-anzeige-element__balance\\\" data-ref=\\\"balance-container\\\"> <span data-ref=\\\"balance-text\\\"></span>€ </span> </div> <div class=\\\"balance-anzeige-element__text-container\\\"> <span data-ref=\\\"person-name\\\" class=\\\"balance-anzeige-element__name\\\"></span> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"balance-anzeige-element__graphic-container\\\"> <div class=\\\"balance-anzeige-element__bar\\\" data-ref=\\\"bar\\\"></div> <div class=\\\"balance-anzeige-element__horizontal-line\\\"></div> <span class=\\\"balance-anzeige-element__balance\\\" data-ref=\\\"balance-container\\\"> <span data-ref=\\\"balance-text\\\"></span>€ </span> </div> <div class=\\\"balance-anzeige-element__text-container\\\"> <span data-ref=\\\"person-name\\\" class=\\\"balance-anzeige-element__name\\\"></span> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"bezahlung-card__beschreibung\\\"> <div data-ref=\\\"beschreibung\\\"></div> <div class=\\\"bezahlung-card__personen\\\"> <span data-ref=\\\"bezahlende-person\\\"></span> für <span data-ref=\\\"empfaenger\\\"></span> </div> </div> <div class=\\\"bezahlung-card__wert\\\"> <span data-ref=\\\"wert\\\"></span>€ </div> <div class=\\\"bezahlung-card__status\\\"> <span class=\\\"material-icons\\\" data-ref=\\\"icon-done\\\" style=\\\"display:none\\\" title=\\\"lokal zwischengespeichert\\\"> schedule </span> <span class=\\\"material-icons\\\" data-ref=\\\"icon-done-all\\\" style=\\\"display:none\\\" title=\\\"synchronisiert\\\"> done_all </span> <span class=\\\"material-icons\\\" data-ref=\\\"icon-sync\\\" style=\\\"display:none\\\" title=\\\"synchronisieren...\\\"> sync </span> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<h3 data-ref=\\\"title\\\" class=\\\"bezahlungen-group__title\\\">Gruppe</h3> <div class=\\\"bezahlungen-group__container\\\" data-ref=\\\"container\\\"></div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div id=\\\"bezahlungen-container\\\"> </div> <button id=\\\"show-more\\\" class=\\\"button\\\">Mehr anzeigen</button>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<app-bar></app-bar> <div style=\\\"display:none\\\" id=\\\"login-expired\\\">Google-Login abgelaufen: zum Synchronisieren neu anmelden</div> <balance-anzeige id=\\\"balance-anzeige\\\"></balance-anzeige> <div class=\\\"kontokorrentpage-menu\\\"> <a id=\\\"eintragen-desktop\\\" class=\\\"floating-action-button floating-action-button--embed\\\" href=\\\"eintragen\\\"> <span class=\\\"material-icons\\\"> add </span> eintragen </a> <span class=\\\"kontokorrentpage-menu__sync-display\\\" id=\\\"spinner\\\" style=\\\"display:none\\\"> <div class=\\\"spinner\\\"></div> synchronisieren </span> </div> <bezahlungen-view id=\\\"bezahlungen-view\\\"></bezahlungen-view> <a id=\\\"eintragen-mobile\\\" class=\\\"floating-action-button floating-action-button--fixed\\\" href=\\\"eintragen\\\"> <span class=\\\"material-icons\\\"> add </span> eintragen </a>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"kontokorrent-select-wrapper\\\"> <div class=\\\"kontokorrent-select\\\"> <h1 data-ref=\\\"kontokorrent-name\\\" class=\\\"kontokorrent-select__name\\\">Kontokorrent</h1> <button class=\\\"kontokorrent-select__choose\\\" title=\\\"anderen Kontokorrent wählen\\\"> <span class=\\\"material-icons\\\"> arrow_drop_down </span> </button> </div> <app-popup class=\\\"kontokorrent-select__popup\\\"> <kontokorrent-select-list></kontokorrent-select-list> <div class=\\\"kontokorrent-select__buttons\\\"> <button id=\\\"add-kontokorrent\\\" class=\\\"button\\\">weiteren hinzufügen</button> </div> </app-popup> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<ol data-ref=\\\"list\\\" class=\\\"kontokorrent-select-list\\\"> </ol>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<a data-ref=\\\"link\\\" class=\\\"kontokorrent-select-list__entry\\\"> <span data-ref=\\\"name\\\"></span> </a>\";\n// Exports\nmodule.exports = code;"],"sourceRoot":""}