{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/state/actions/KontokorrentsActionCreator.ts","webpack:///./src/api/InteractionRequiredException.ts","webpack:///./src/utils/sortBy.ts","webpack:///./src/components/FeaturesRequired/FeaturesRequired.html","webpack:///./node_modules/comlink/dist/esm/comlink.mjs","webpack:///./src/lib/filterBezahlungen.ts","webpack:///./node_modules/serviceworker-webpack-plugin/lib/runtime.js","webpack:///./src/worker/KontokorrentWorker.ts","webpack:///./src/favicons.ts","webpack:///./favicons sync \\.(svg|png|ico|xml|json)$","webpack:///./favicons/android-chrome-192x192.png","webpack:///./favicons/android-chrome-512x512.png","webpack:///./favicons/apple-touch-icon.png","webpack:///./favicons/browserconfig.xml","webpack:///./favicons/favicon-16x16.png","webpack:///./favicons/favicon-32x32.png","webpack:///./favicons/favicon.ico","webpack:///./favicons/mstile-144x144.png","webpack:///./favicons/mstile-150x150.png","webpack:///./favicons/mstile-310x150.png","webpack:///./favicons/mstile-310x310.png","webpack:///./favicons/mstile-70x70.png","webpack:///./favicons/safari-pinned-tab.svg","webpack:///./node_modules/route-it/dist/index.js","webpack:///./src/lib/testFeatures.ts","webpack:///./src/components/FeaturesRequired/FeaturesRequired.ts","webpack:///./src/routing/KontokorrentRouteResolver.ts","webpack:///./src/state/Store.ts","webpack:///./src/state/lib/BaseStore.ts","webpack:///./src/state/actions/InitializationActionCreator.ts","webpack:///./src/state/actions/RoutingActionCreator.ts","webpack:///./src/ServiceLocator.ts","webpack:///./src/lib/AccountInfoStore.ts","webpack:///./src/lib/AccountType.ts","webpack:///./src/api/postJson.ts","webpack:///./src/api/TokenRenewFailedException.ts","webpack:///./src/api/ApiException.ts","webpack:///./src/environment.ts","webpack:///./src/api/ApiClient.ts","webpack:///./src/state/actions/AccountActionCreator.ts","webpack:///./src/state/reducers/AccountReducer.ts","webpack:///./src/state/actions/BezahlungActionCreator.ts","webpack:///./src/state/reducers/KontokorrentsReducer.ts","webpack:///./favicons/site.webmanifest","webpack:///./node_modules/idb/build/esm/wrap-idb-value.js","webpack:///./node_modules/idb/build/esm/index.js","webpack:///./src/lib/KontokorrentDatabase.ts","webpack:///./src/index.ts","webpack:///./node_modules/uuid/dist/esm-browser/rng.js","webpack:///./node_modules/uuid/dist/esm-browser/regex.js","webpack:///./node_modules/uuid/dist/esm-browser/stringify.js","webpack:///./node_modules/uuid/dist/esm-browser/validate.js","webpack:///./node_modules/uuid/dist/esm-browser/v4.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","installedModules","installedCssChunks","0","__webpack_require__","exports","module","l","e","promises","Promise","resolve","reject","href","fullhref","p","existingLinkTags","document","getElementsByTagName","dataHref","tag","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","jsonpScriptSrc","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","head","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","self","oldJsonpFunction","slice","s","KontokorrentsActionNames","KontokorrentCreationFailed","exists","KontokorrentCreating","KontokorrentCreated","kontokorrent","KontokorrentHinzufuegenFailed","notFound","KontokorrentHinzufuegen","KontokorrentHinzufuegenSuccess","kontokorrents","KontokorrentListeLaden","KontokorrentListe","KontokorrentListeLadenFailed","interactionRequired","KontokorrentGeoeffnet","id","KontokorrentBezahlungen","kontokorrentId","bezahlungen","KontokorrentSynchronisieren","KontokorrentSynchronisiert","KontokorrentBalanceAktualisiert","balance","LoginPageGeoeffnet","KontokorrentsActionCreator","store","apiClient","routingActionCreator","db","this","dispatch","oeffentlicherName","personen","map","v","res","neuerKontokorrent","success","addKontokorrent","kk","getPerOeffentlichName","kontokorrentHinzufuegen","newIds","setKontokorrents","redirect","getZuletztGesehenerKontokorrentId","navigateKontokorrent","listenTask","kontokorrentsAuflisten","getKontokorrents","liste","aktionen","getAktionen","getWorkerApi","calculateBalance","refreshBezahlungen","laufendeNummer","getLaufendeNummer","addAktionen","refreshKontokorrent","workerApi","worker","Worker","getKontokorrent","tasks","setZuletztGesehenerKontokorrentId","kontokorrentSynchronisieren","InteractionRequiredException","sortByAlphabetically","collection","keySelector","sort","a","b","toLowerCase","localeCompare","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","obj","port1","port2","MessageChannel","expose","ep","addEventListener","callback","ev","path","assign","argumentList","fromWireValue","returnValue","parent","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","catch","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","start","deserialize","port","wrap","serialized","isError","stack","endpoint","constructor","isMessagePort","close","createProxy","isProxyReleased","Proxy","_target","throwIfProxyReleased","requestResponseMessage","toString","_thisArg","rawArgumentList","last","processArguments","isReleased","processed","arr","Array","concat","WeakMap","handler","serializedValue","serialize","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","filterBezahlungen","bezahlungenMap","ordered","bearbeiteteBezahlungId","geloeschteBezahlungId","bezahlung","values","serviceWorkerOption","default","register","options","arguments","navigator","serviceWorker","faviconsContext","keys","forEach","webpackContext","req","webpackContextResolve","routeResolver","routeRenderer","lastRoute","popStateListener","handlePopState","doRouting","window","location","pathname","querySelector","basePrefix","baseHref","getRoute","render","substr","substring","URL","history","replaceState","title","pushState","currentComponent","body","testFeatures","indexedDBEnabled","localStorageEnabled","storageAllowed","localStorage","setItem","allPassed","HTMLElement","super","innerHTML","serviceLocator","navigateHome","reload","customElements","define","Paths","EventTarget","currentRoute","router","dispatchEvent","CustomEvent","detail","Info","component","addServices","FeaturesRequired","Login","CreateEvent","CreateKontokorrent","state","account","accountCreated","BezahlungEintragen","BezahlungEintragenPage","kontokorrentsRoute","exec","KontokorrentPage","setKontokorrentId","Home","initState","subscriptions","reducerSubscriptions","area","sub","splice","indexOf","reducer","action","updatedAreas","applyUpdateFn","cb","onDispatch","accountActionCreator","kontokorrentsActionCreator","run","navigateFeaturesRequired","initialized","initializeAccount","syncKontokorrentListe","navigateLogin","navigate","Kontokorrents","ServiceLocator","bezahlungActionCreator","AccountInfoStore","accountInfo","JSON","stringify","info","getItem","parse","removeItem","AccountType","postJson","url","token","init","method","headers","fetch","TokenRenewFailedException","networkError","ApiException","API_URL","baseUrl","accountInfoStore","secret","ok","getAuthHeader","json","getAccessToken","einladungsCode","params","encodeURIComponent","status","ab","query","notfound","zeitpunkt","Date","tokenInfo","expires","anonym","google","tokenResponse","AccountActionNames","AccountCreating","AccountCreationFailed","AccountCreated","AccountInitialized","LoggedOut","LoginExpired","getUserInfo","clear","neuerBenutzer","updateStore","accountCreating","accountCreationFailed","loginExpired","BezahlungActionNames","BezahlungKontokorrentGeandert","BezahlungActionCreator","activeKontokorrentId","listeLaden","extendMap","hinzufuegen","hinzufuegenFailed","kontokorrentNotFound","creating","creationFailed","synchronisieren","k","find","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","has","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","includes","args","unwrap","storeNames","tx","transformCachableValue","done","unlisten","complete","DOMException","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","some","IDBRequest","result","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","replace","useIndex","isWrite","async","storeName","index","returnVal","oldTraps","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","oldVersion","newVersion","openDB","createObjectStore","keyPath","createIndex","put","zuletztGesehenerKontokorrentId","withInitialized","sortBy","getAll","add","appState","kks","existing","filter","delete","ex","combined","getFromIndex","getAllFromIndex","addReducer","initializationActionCreator","setServiceLocator","initializeApplication","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","rng","uuid","test","byteToHex","offset","TypeError","buf","rnds"],"mappings":"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","file":"957d565317ca3f5a2588.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t0: 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".\" + {\"1\":\"ddea68962dbbff98c177\",\"2\":\"b2519655ee1908e5e61b\",\"3\":\"cfab764da228ce76f525\",\"4\":\"ae0dfb9f3ff8d426925d\",\"5\":\"4837ce287f92df833c8d\",\"6\":\"35e2609f833156d63762\"}[chunkId] + \".bundle.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"1\":1,\"2\":1,\"3\":1,\"4\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"\" + chunkId + \".\" + {\"1\":\"b7fc4ca24e8c1c792273\",\"2\":\"5bfe84ed41f0bc1012d7\",\"3\":\"c16dd092655b6ad0ce7d\",\"4\":\"eddfcfc4d90393f6a5c8\",\"5\":\"31d6cfe0d16ae931b73c\",\"6\":\"31d6cfe0d16ae931b73c\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/v2/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = self[\"webpackJsonp\"] = self[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","import { Store } from \"../Store\";\r\nimport { ApiClient } from \"../../api/ApiClient\";\r\nimport { Action } from \"../lib/Action\";\r\nimport { KontokorrentInfo } from \"../../api/KontokorrentInfo\";\r\nimport { NeuerKontokorrentRequest } from \"../../api/NeuerKontokorrentRequest\";\r\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\r\nimport { InteractionRequiredException } from \"../../api/InteractionRequiredException\";\r\nimport { RoutingActionCreator } from \"./RoutingActionCreator\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Bezahlung } from \"../State\";\r\ntype KontokorrentWorkerApi = import(\"../../worker/KontokorrentWorker\").KontokorrentWorkerApi;\r\nimport { wrap } from \"comlink\";\r\nimport { filterBezahlungen } from \"../../lib/filterBezahlungen\";\r\nimport { KontokorrentBalance } from \"../../lib/KontokorrentBalance\";\r\n\r\n\r\nexport enum KontokorrentsActionNames {\r\n    KontokorrentCreating = \"KontokorrentCreating\",\r\n    KontokorrentCreated = \"KontokorrentCreated\",\r\n    KontokorrentCreationFailed = \"KontokorrentCreationFailed\",\r\n    KontokorrentHinzufuegenFailed = \"KontokorrentHinzufuegenFailed\",\r\n    KontokorrentHinzufuegen = \"KontokorrentHinzufuegen\",\r\n    KontokorrentHinzufuegenSuccess = \"KontokorrentHinzufuegenSuccess\",\r\n    KontokorrentListeLaden = \"KontokorrentListeLaden\",\r\n    KontokorrentListe = \"KontokorrentListe\",\r\n    KontokorrentListeLadenFailed = \"KontokorrentListeLadenFailed\",\r\n    KontokorrentGeoeffnet = \"KontokorrentGeoeffnet\",\r\n    KontokorrentBezahlungen = \"KontokorrentBezahlungen\",\r\n    KontokorrentSynchronisieren = \"KontokorrentSynchronisieren\",\r\n    KontokorrentSynchronisiert = \"KontokorrentSynchronisiert\",\r\n    KontokorrentBalanceAktualisiert = \"KontokorrentBalanceAktualisiert\",\r\n    LoginPageGeoeffnet = \"LoginPageGeoeffnet\"\r\n}\r\n\r\nexport class KontokorrentCreationFailed implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentCreationFailed;\r\n    constructor(public exists: boolean) {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentCreating implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentCreating;\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentCreated implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentCreated;\r\n    constructor(public kontokorrent: KontokorrentInfo) {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentHinzufuegenFailed implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentHinzufuegenFailed;\r\n    constructor(public notFound: boolean) {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentHinzufuegen implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentHinzufuegen;\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentHinzufuegenSuccess implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentHinzufuegenSuccess;\r\n    constructor(public kontokorrents: KontokorrentInfo[]) {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentListeLaden implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentListeLaden;\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentListe implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentListe;\r\n    constructor(public kontokorrents: KontokorrentInfo[]) {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentListeLadenFailed implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentListeLadenFailed;\r\n    constructor(public interactionRequired: boolean) {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentGeoeffnet implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentGeoeffnet;\r\n    constructor(public id: string) {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentBezahlungen implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentBezahlungen;\r\n    constructor(public kontokorrentId: string, public bezahlungen: Bezahlung[]) {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentSynchronisieren implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentSynchronisieren;\r\n    constructor(public kontokorrentId: string) {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentSynchronisiert implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentSynchronisiert;\r\n    constructor(public kontokorrentId: string) {\r\n\r\n    }\r\n}\r\n\r\nexport class KontokorrentBalanceAktualisiert implements Action {\r\n    readonly type = KontokorrentsActionNames.KontokorrentBalanceAktualisiert;\r\n    constructor(public kontokorrentId: string, public balance: KontokorrentBalance) {\r\n\r\n    }\r\n}\r\n\r\nexport class LoginPageGeoeffnet implements Action {\r\n    readonly type = KontokorrentsActionNames.LoginPageGeoeffnet;\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport type KontokorrentsActions = KontokorrentCreationFailed\r\n    | KontokorrentCreating\r\n    | KontokorrentCreated\r\n    | KontokorrentHinzufuegenFailed\r\n    | KontokorrentHinzufuegen\r\n    | KontokorrentHinzufuegenSuccess\r\n    | KontokorrentListeLaden\r\n    | KontokorrentListeLadenFailed\r\n    | KontokorrentListe\r\n    | KontokorrentGeoeffnet\r\n    | KontokorrentBezahlungen\r\n    | KontokorrentSynchronisieren\r\n    | KontokorrentSynchronisiert\r\n    | KontokorrentBalanceAktualisiert\r\n    | LoginPageGeoeffnet;\r\n\r\nexport class KontokorrentsActionCreator {\r\n    private workerApi: KontokorrentWorkerApi;\r\n    constructor(private store: Store,\r\n        private apiClient: ApiClient,\r\n        private routingActionCreator: RoutingActionCreator,\r\n        private db: KontokorrentDatabase) {\r\n\r\n    }\r\n\r\n    loginPageGeoeffnet() {\r\n        this.store.dispatch(new LoginPageGeoeffnet());\r\n    }\r\n\r\n    async kontokorrentErstellen(id: string, name: string, oeffentlicherName: string, personen: string[]) {\r\n        let request: NeuerKontokorrentRequest = {\r\n            name,\r\n            id,\r\n            oeffentlicherName,\r\n            personen: personen.map(v => { return { name: v, id: uuid() } })\r\n        };\r\n        this.store.dispatch(new KontokorrentCreating());\r\n        let res = await this.apiClient.neuerKontokorrent(request);\r\n        if (!res.success) {\r\n            this.store.dispatch(new KontokorrentCreationFailed(res.exists));\r\n        }\r\n        else {\r\n            await this.db.addKontokorrent({\r\n                id: id,\r\n                name: name,\r\n                personen: request.personen,\r\n                oeffentlicherName: oeffentlicherName\r\n            });\r\n            this.store.dispatch(new KontokorrentCreated({\r\n                id: id,\r\n                name: name,\r\n                personen: request.personen,\r\n                oeffentlicherName: oeffentlicherName\r\n            }));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async kontokorrentHinzufuegen(oeffentlicherName: string) {\r\n        let kk = await this.db.getPerOeffentlichName(oeffentlicherName);\r\n        if (null != kk) {\r\n            return kk.id;\r\n        }\r\n        this.store.dispatch(new KontokorrentHinzufuegen());\r\n        try {\r\n            let res = await this.apiClient.kontokorrentHinzufuegen(oeffentlicherName, null);\r\n            if (null == res) {\r\n                this.store.dispatch(new KontokorrentHinzufuegenFailed(true));\r\n            }\r\n            else {\r\n                let newIds = await this.db.setKontokorrents(res.map(v => {\r\n                    return {\r\n                        id: v.id,\r\n                        name: v.name,\r\n                        personen: v.personen,\r\n                        oeffentlicherName: v.oeffentlicherName\r\n                    };\r\n                }));\r\n                this.store.dispatch(new KontokorrentHinzufuegenSuccess(res));\r\n                return newIds[0];\r\n            }\r\n        }\r\n        catch {\r\n            this.store.dispatch(new KontokorrentHinzufuegenFailed(false));\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async navigiereZuLetztGesehenem(redirect?: boolean) {\r\n        let id = await this.db.getZuletztGesehenerKontokorrentId();\r\n        if (id) {\r\n            this.routingActionCreator.navigateKontokorrent(id, redirect);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async syncKontokorrentListe() {\r\n        this.store.dispatch(new KontokorrentListeLaden());\r\n        const listenTask = this.apiClient.kontokorrentsAuflisten();\r\n\r\n        let kontokorrents = await this.db.getKontokorrents();\r\n        this.store.dispatch(new KontokorrentListe(kontokorrents));\r\n        try {\r\n            let liste = await listenTask;\r\n            await this.db.setKontokorrents(liste.map(e => {\r\n                return {\r\n                    id: e.id,\r\n                    name: e.name,\r\n                    personen: e.personen,\r\n                    oeffentlicherName: e.oeffentlicherName\r\n                }\r\n            }));\r\n            this.store.dispatch(new KontokorrentListe(liste));\r\n        }\r\n        catch (e) {\r\n            if (e instanceof InteractionRequiredException) {\r\n                this.store.dispatch(new KontokorrentListeLadenFailed(true));\r\n            }\r\n            else {\r\n                this.store.dispatch(new KontokorrentListeLadenFailed(false));\r\n            }\r\n        }\r\n    }\r\n\r\n    private async refreshBezahlungen(id: string) {\r\n        let aktionen = await this.db.getAktionen(id);\r\n        this.store.dispatch(new KontokorrentBezahlungen(id, filterBezahlungen(aktionen)));\r\n    }\r\n\r\n    private async calculateBalance(id: string) {\r\n        let balance = await (await this.getWorkerApi()).calculateBalance(id);\r\n        this.store.dispatch(new KontokorrentBalanceAktualisiert(id, balance));\r\n    }\r\n\r\n    private async refreshKontokorrent(id: string) {\r\n        await Promise.all([this.refreshBezahlungen(id), this.calculateBalance(id)]);\r\n    }\r\n\r\n    private async kontokorrentSynchronisieren(id: string) {\r\n        this.store.dispatch(new KontokorrentSynchronisieren(id));\r\n        let laufendeNummer = await (await this.getWorkerApi()).getLaufendeNummer(id);\r\n        let res = await this.apiClient.getAktionen(id, laufendeNummer);\r\n        if (res.success) {\r\n            await this.db.addAktionen(id, res.aktionen);\r\n            if (res.aktionen.length > 0) {\r\n                await this.refreshKontokorrent(id);\r\n            }\r\n        }\r\n        this.store.dispatch(new KontokorrentSynchronisiert(id));\r\n    }\r\n\r\n    private async getWorkerApi() {\r\n        if (this.workerApi) {\r\n            return this.workerApi;\r\n        }\r\n        const worker = new Worker(\r\n            \"../../worker/KontokorrentWorker\",\r\n            { name: 'kontokorrent-worker', type: \"module\" },\r\n        ) as Worker;\r\n        this.workerApi = wrap<KontokorrentWorkerApi>(worker);\r\n        return this.workerApi;\r\n    }\r\n\r\n\r\n\r\n    async kontokorrentOeffnen(id: string) {\r\n        let kk = await this.db.getKontokorrent(id);\r\n        if (null != kk) {\r\n            this.store.dispatch(new KontokorrentGeoeffnet(id));\r\n            let tasks = [];\r\n            tasks.push(this.db.setZuletztGesehenerKontokorrentId(id));\r\n            tasks.push(this.refreshKontokorrent(id));\r\n            tasks.push(this.kontokorrentSynchronisieren(id));\r\n            await Promise.all(tasks);\r\n        }\r\n    }\r\n}\r\n","export class InteractionRequiredException {\r\n\r\n}\r\n\r\n","export function sortByAlphabetically<T, P extends keyof T>(collection: T[], keySelector: (x: T) => string): T[] {\r\n    return collection.sort((a, b) => keySelector(a).toLowerCase().localeCompare(keySelector(b).toLowerCase()));\r\n}","// Module\nvar code = \"<h1>Speicherzugriff benötigt</h1> Kontokorrent speichert die Zahlungen und weitere Informationen im lokalen Speicher dieses Geräts. Auf diese Weise kann man für einige Tage eingeloggt bleiben, und die Anwendung auch verwenden, wenn die Internetverbindung schlecht ist. In den meisten Browsern (Chrome, Edge) muss dazu der Webseite erlaubt werden <strong>Cookies</strong> zu speichern. Nachdem die Berechtigung erteilt wurde die Webseite neu laden.\";\n// Exports\nmodule.exports = code;","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case 0 /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case 1 /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case 2 /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case 3 /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case 4 /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case 5 /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === 5 /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: 5 /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: 0 /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: 1 /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: 4 /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 2 /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 3 /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: 3 /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: 0 /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case 3 /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case 0 /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import { BezahlungDbModel } from \"./BezahlungDbModel\";\r\nimport { AktionDbModel } from \"./AktionDbModel\";\r\n\r\nexport function filterBezahlungen(aktionen: AktionDbModel[]) {\r\n    let bezahlungenMap: { [id: string]: BezahlungDbModel } = {};\r\n    let ordered = aktionen.sort((a,b)=> a.laufendeNummer - b.laufendeNummer);\r\n    for (let b of ordered) {\r\n        if (b.bearbeiteteBezahlungId) {\r\n            delete bezahlungenMap[b.bearbeiteteBezahlungId];\r\n        }\r\n        if (b.geloeschteBezahlungId) {\r\n            delete bezahlungenMap[b.geloeschteBezahlungId];\r\n        }\r\n        else {\r\n            bezahlungenMap[b.bezahlung.id] = b.bezahlung;\r\n        }\r\n    }\r\n    let bezahlungen = Object.values(bezahlungenMap);\r\n    return bezahlungen;\r\n}","var serviceWorkerOption = {\"scriptURL\":\"\\\\v2\\\\sw.js\"};\n      \"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable flowtype/require-valid-file-annotation */\n/* global serviceWorkerOption */\n\nexports.default = {\n  register: function register() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (navigator.serviceWorker) {\n      return navigator.serviceWorker.register(serviceWorkerOption.scriptURL, options);\n    }\n\n    return false;\n  }\n};\nmodule.exports = exports[\"default\"];","module.exports = __webpack_public_path__ + \"0.02975c45d9ed11a910e9.bundle.worker.js\"","const faviconsContext = require.context(\r\n  \"../favicons\",\r\n  true,\r\n  /\\.(svg|png|ico|xml|json)$/\r\n);\r\nfaviconsContext.keys().forEach(faviconsContext);","var map = {\n\t\"./android-chrome-192x192.png\": 12,\n\t\"./android-chrome-512x512.png\": 13,\n\t\"./apple-touch-icon.png\": 14,\n\t\"./browserconfig.xml\": 15,\n\t\"./favicon-16x16.png\": 16,\n\t\"./favicon-32x32.png\": 17,\n\t\"./favicon.ico\": 18,\n\t\"./mstile-144x144.png\": 19,\n\t\"./mstile-150x150.png\": 20,\n\t\"./mstile-310x150.png\": 21,\n\t\"./mstile-310x310.png\": 22,\n\t\"./mstile-70x70.png\": 23,\n\t\"./safari-pinned-tab.svg\": 24\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 11;","export default __webpack_public_path__ + \"favicons/android-chrome-192x192.png\";","export default __webpack_public_path__ + \"favicons/android-chrome-512x512.png\";","export default __webpack_public_path__ + \"favicons/apple-touch-icon.png\";","export default __webpack_public_path__ + \"favicons/browserconfig.xml\";","export default __webpack_public_path__ + \"favicons/favicon-16x16.png\";","export default __webpack_public_path__ + \"favicons/favicon-32x32.png\";","export default __webpack_public_path__ + \"favicons/favicon.ico\";","export default __webpack_public_path__ + \"favicons/mstile-144x144.png\";","export default __webpack_public_path__ + \"favicons/mstile-150x150.png\";","export default __webpack_public_path__ + \"favicons/mstile-310x150.png\";","export default __webpack_public_path__ + \"favicons/mstile-310x310.png\";","export default __webpack_public_path__ + \"favicons/mstile-70x70.png\";","export default __webpack_public_path__ + \"favicons/safari-pinned-tab.svg\";","class t{constructor(t,e){this.routeResolver=t,this.routeRenderer=e,this.lastRoute=null,this.popStateListener=this.handlePopState.bind(this)}handlePopState(t){this.doRouting(window.location.pathname)}run(){let t=document.querySelector(\"base\");this.basePrefix=t.getAttribute(\"href\"),this.baseHref=t.href,window.addEventListener(\"popstate\",this.popStateListener),this.doRouting(window.location.pathname)}destroy(){window.removeEventListener(\"popstate\",this.popStateListener)}doRouting(t){let e=this.getRoute(t);return Promise.resolve(this.routeResolver.resolve(this.lastRoute,e,this)).then(t=>!!t&&(this.routeRenderer.render(t),this.lastRoute=e,!0))}getRoute(t){let e=t===this.baseHref,n=t.substr(0,this.basePrefix.length)===this.basePrefix;return e?\"/\":n?t.substring(this.basePrefix.length):t}navigate(t,e,n){let o=new URL(t,this.baseHref);this.doRouting(o.pathname).then(t=>{t&&(n?window.history.replaceState({},e||document.title,o.href):window.history.pushState({},e||document.title,o.href))})}}class e{constructor(){this.currentComponent=null}render(t){t&&(this.currentComponent&&document.body.removeChild(this.currentComponent),document.body.appendChild(t),this.currentComponent=t)}}class n{constructor(t){this.container=t,this.currentComponent=!1}render(t){t&&(this.currentComponent&&(this.container.innerHTML=\"\"),this.container.appendChild(t),this.currentComponent=!0)}}export{e as BodyChildRouteRenderer,n as ContainerRouteRenderer,t as Router};\n//# sourceMappingURL=index.js.map\n","export function testFeatures() {\r\n    let indexedDBEnabled = \"indexedDB\" in window;\r\n    let localStorageEnabled = \"localStorage\" in window;\r\n    let storageAllowed = null;\r\n    try {\r\n        localStorage.setItem(\"test\", \"1\");\r\n        storageAllowed = true;\r\n    }\r\n    catch {\r\n        storageAllowed = false;\r\n    }\r\n    return {\r\n        allPassed: indexedDBEnabled && localStorageEnabled && storageAllowed,\r\n        indexedDBEnabled,\r\n        localStorageEnabled,\r\n        storageAllowed\r\n    };\r\n}","import template from \"./FeaturesRequired.html\";\r\nimport { ServiceLocator } from \"../../ServiceLocator\";\r\nimport { RoutingActionCreator } from \"../../state/actions/RoutingActionCreator\";\r\nimport { testFeatures } from \"../../lib/testFeatures\";\r\nexport class FeaturesRequired extends HTMLElement {\r\n    routingActionCreator: RoutingActionCreator;\r\n\r\n    constructor() {\r\n        super();\r\n        this.innerHTML = template;\r\n    }\r\n\r\n    addServices(serviceLocator: ServiceLocator) {\r\n        this.routingActionCreator = serviceLocator.routingActionCreator;\r\n    }\r\n\r\n    connectedCallback() {\r\n        if (testFeatures().allPassed) {\r\n            this.routingActionCreator.navigateHome();\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n\r\n    disconnectedCallback() {\r\n    }\r\n}\r\n\r\ncustomElements.define('app-features-required', FeaturesRequired);","import { Router } from \"route-it\";\r\nimport { ServiceLocator } from \"../ServiceLocator\";\r\nimport \"../components/FeaturesRequired/FeaturesRequired\";\r\nimport { FeaturesRequired } from \"../components/FeaturesRequired/FeaturesRequired\";\r\nimport { Store } from \"../state/Store\";\r\nimport { AsyncRouteResolver } from \"route-it/dist/router\";\r\n\r\n\r\nexport enum Paths {\r\n    Login = \"login\",\r\n    Info = \"info\",\r\n    Home = \"\",\r\n    FeaturesRequired = \"features-required\",\r\n    Kontokorrents = \"kontokorrents\",\r\n    CreateEvent = \"create-event\",\r\n    BezahlungEintragen = \"eintragen\"\r\n}\r\n\r\nexport class KontokorrentRouteResolver extends EventTarget implements AsyncRouteResolver<HTMLElement> {\r\n    constructor(private store: Store) {\r\n        super();\r\n    }\r\n\r\n    serviceLocator: ServiceLocator;\r\n    setServiceLocator(serviceLocator: ServiceLocator) {\r\n        this.serviceLocator = serviceLocator;\r\n    }\r\n\r\n    async resolve(lastRoute: string, currentRoute: string, router: Router<HTMLElement>) {\r\n        if (currentRoute in Paths) {\r\n            this.dispatchEvent(new CustomEvent(\"routedTo\", { detail: { currentRoute } }));\r\n        }\r\n        switch (currentRoute) {\r\n            case Paths.Info:\r\n                const { Info } = await import(\"../components/Info/info\");\r\n                let component = new Info();\r\n                component.addServices(this.serviceLocator);\r\n                return component;\r\n            case Paths.FeaturesRequired: {\r\n                let component = new FeaturesRequired();\r\n                component.addServices(this.serviceLocator);\r\n                return component;\r\n            }\r\n            case Paths.Login: {\r\n                const { Login } = await import(\"../components/Login/Login\");\r\n                let component = new Login();\r\n                component.addServices(this.serviceLocator);\r\n                return component;\r\n            }\r\n            case Paths.CreateEvent: {\r\n                const { CreateKontokorrent } = await import(\"../components/CreateKontokorrent/CreateKontokorrent\");\r\n                let component = new CreateKontokorrent();\r\n                component.addServices(this.serviceLocator);\r\n                return component;\r\n            }\r\n        }\r\n        if (!this.store.state.account.accountCreated) {\r\n            return false;\r\n        }\r\n        switch (currentRoute) {\r\n            case Paths.BezahlungEintragen:\r\n                const { BezahlungEintragenPage } = await import(\"../components/BezahlungEintragenPage/BezahlungEintragenPage\");\r\n                let component = new BezahlungEintragenPage();\r\n                component.addServices(this.serviceLocator);\r\n                return component;\r\n        }\r\n        let kontokorrentsRoute = /^kontokorrents\\/([a-zA-Z0-9\\-]+)$/.exec(currentRoute);\r\n        if (kontokorrentsRoute) {\r\n            let id: string = kontokorrentsRoute[1];\r\n            const { KontokorrentPage } = await import(\"../components/KontokorrentPage/KontokorrentPage\");\r\n            let component = new KontokorrentPage();\r\n            component.addServices(this.serviceLocator);\r\n            component.setKontokorrentId(id);\r\n            return component;\r\n        }\r\n        const { Home } = await import(\"../components/Home/home\");\r\n        let component = new Home();\r\n        component.addServices(this.serviceLocator);\r\n        return component;\r\n    }\r\n}\r\n","import { State } from \"./State\";\r\nimport { BaseStore } from \"./lib/BaseStore\";\r\n\r\nexport class Store extends BaseStore<State> {\r\n    \r\n};","import { Reducer } from \"./Reducer\";\r\nimport { Action } from \"./Action\";\r\n\r\ninterface Subscription<TState> {\r\n    call(a: TState): void;\r\n    area: keyof TState | \"\";\r\n}\r\n\r\ninterface ReducerSubscription<TState> {\r\n    reducer: Reducer<any, any>;\r\n    area: keyof TState | null;\r\n}\r\n\r\nexport class BaseStore<TState> {\r\n    public state: TState;\r\n    private subscriptions: Subscription<TState>[];\r\n    private reducerSubscriptions: ReducerSubscription<TState>[];\r\n    constructor(initState: () => TState) {\r\n        this.subscriptions = [];\r\n        this.reducerSubscriptions = [];\r\n        this.state = initState();\r\n    }\r\n    subscribe<K extends keyof TState>(area: K | null, call: (a: TState) => void) {\r\n        let sub = { area, call };\r\n        this.subscriptions.push(sub);\r\n        return () => {\r\n            this.subscriptions.splice(this.subscriptions.indexOf(sub), 1);\r\n        };\r\n    }\r\n    addReducer<K extends keyof TState>(area: K | null, reducer: Reducer<TState[K] | TState, any>) {\r\n        this.reducerSubscriptions.push({ area, reducer });\r\n    }\r\n    dispatch(action: Action) {\r\n        let updatedAreas: (keyof TState | \"\")[] = [];\r\n        for (let s of this.reducerSubscriptions) {\r\n            let applyUpdateFn;\r\n            if (s.area) {\r\n                applyUpdateFn = (cb: (a: any) => any) => {\r\n                    (<any>this.state[s.area]) = cb(this.state[s.area]);\r\n                    updatedAreas.push(s.area);\r\n                };\r\n            }\r\n            else {\r\n                applyUpdateFn = (cb: (a: any) => any) => {\r\n                    this.state = cb(this.state);\r\n                    updatedAreas.push(\"\");\r\n                };\r\n            }\r\n            try {\r\n                s.reducer.onDispatch(action, applyUpdateFn);\r\n            }\r\n            catch (err) {\r\n                console.error(`Error while dispatching ${action.type}.`, err);\r\n            }\r\n        }\r\n        if (updatedAreas.length) {\r\n            for (let s of this.subscriptions) {\r\n                if (!s.area || updatedAreas.indexOf(s.area) > -1) {\r\n                    try {\r\n                        s.call(this.state);\r\n                    }\r\n                    catch (err) {\r\n                        console.error(`Error while updating on ${s.area || \"global\"} after ${action.type}.`, err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Store } from \"../Store\";\r\nimport { RoutingActionCreator } from \"./RoutingActionCreator\";\r\nimport { testFeatures } from \"../../lib/testFeatures\";\r\nimport { AccountActionCreator } from \"./AccountActionCreator\";\r\nimport {  Router } from \"route-it/dist/router\";\r\nimport { KontokorrentsActionCreator } from \"./KontokorrentsActionCreator\";\r\n\r\nexport class InitializationActionCreator {\r\n\r\n    constructor(private store: Store,\r\n        private routingActionCreator: RoutingActionCreator,\r\n        private accountActionCreator: AccountActionCreator,\r\n        private kontokorrentsActionCreator : KontokorrentsActionCreator,\r\n        private router : Router<unknown>) {\r\n\r\n    }\r\n\r\n    async initializeApplication() {\r\n        if (!testFeatures().allPassed) {\r\n            this.router.run();\r\n            this.routingActionCreator.navigateFeaturesRequired();\r\n            return;\r\n        }\r\n        let initialized = await this.accountActionCreator.initializeAccount();\r\n        this.router.run();\r\n        if (!initialized) {\r\n            this.routingActionCreator.navigateLogin();\r\n        }\r\n        else {\r\n            await this.kontokorrentsActionCreator.syncKontokorrentListe();\r\n        }\r\n    }\r\n}","import { Router } from \"route-it\";\r\nimport { Paths } from \"../../routing/KontokorrentRouteResolver\";\r\nexport class RoutingActionCreator {\r\n    constructor(private router: Router<HTMLElement>) {\r\n    }\r\n    navigateHome() {\r\n        this.router.navigate(Paths.Home, null);\r\n    }\r\n    navigateLogin() {\r\n        this.router.navigate(Paths.Login, null);\r\n    }\r\n    navigateFeaturesRequired() {\r\n        this.router.navigate(Paths.FeaturesRequired, null);\r\n    }\r\n    navigate(path: string) {\r\n        this.router.navigate(path, null);\r\n    }\r\n    navigateKontokorrent(id: string, redirect?: boolean) {\r\n        this.router.navigate(`${Paths.Kontokorrents}/${id}`, null, redirect);\r\n    }\r\n}\r\n","import { Store } from \"./state/Store\";\r\nimport { RoutingActionCreator } from \"./state/actions/RoutingActionCreator\";\r\nimport { AccountActionCreator } from \"./state/actions/AccountActionCreator\";\r\nimport { KontokorrentsActionCreator } from \"./state/actions/KontokorrentsActionCreator\";\r\nimport { BezahlungActionCreator } from \"./state/actions/BezahlungActionCreator\";\r\n\r\nexport class ServiceLocator {\r\n    constructor(public store: Store, public routingActionCreator: RoutingActionCreator,\r\n        public accountActionCreator: AccountActionCreator,\r\n        public kontokorrentsActionCreator : KontokorrentsActionCreator,\r\n        public bezahlungActionCreator : BezahlungActionCreator) {\r\n\r\n    }\r\n}","import { AccountInfo } from \"./AccountInfo\";\r\n\r\nexport class AccountInfoStore {\r\n    set(accountInfo: AccountInfo) {\r\n        localStorage.setItem(\"account_info\", JSON.stringify(accountInfo));\r\n    }\r\n    get() {\r\n        let info = localStorage.getItem(\"account_info\");\r\n        if (null == info)\r\n            return null;\r\n        return <AccountInfo>JSON.parse(info);\r\n    }\r\n    clear() {\r\n        localStorage.removeItem(\"account_info\");\r\n        localStorage.removeItem(\"access_token_anonymous\");\r\n        localStorage.removeItem(\"access_token_google\");\r\n    }\r\n}\r\n\r\n","export enum AccountType {\r\n    google = \"google\",\r\n    anonym = \"anonym\"\r\n};\r\n","export async function postJson(url: string, body: any, token?: string) {\r\n    let init: RequestInit = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n    };\r\n    if (token) {\r\n        init.headers = { ...init.headers, \"Authorization\": `Bearer ${token}` };\r\n    }\r\n    return await fetch(url, init);\r\n}","export class TokenRenewFailedException {\r\n    constructor(public readonly networkError: boolean) {\r\n\r\n    }\r\n}","\r\nexport class ApiException {\r\n}\r\n","let API_URL = \"https://kontokorrent.azurewebsites.net\";\r\nif (__ENVIRONMENT == \"local\") {\r\n    API_URL = \"https://kontokorrent-v2.azurewebsites.net\";\r\n}\r\nelse if (__ENVIRONMENT == \"gh-pages\") {\r\n    API_URL = \"https://kontokorrent.azurewebsites.net\";\r\n}\r\nelse if (__ENVIRONMENT == \"gh-pagesv2\") {\r\n    API_URL = \"https://kontokorrent-v2.azurewebsites.net\";\r\n}\r\n\r\nexport const environment = {\r\n    API_URL: API_URL\r\n};\r\n","import { postJson } from \"./postJson\";\r\nimport { AccountType } from \"../lib/AccountType\";\r\nimport { AccountInfoStore } from \"../lib/AccountInfoStore\";\r\nimport { KontokorrentInfo } from \"./KontokorrentInfo\";\r\nimport { NeuerKontokorrentRequest } from \"./NeuerKontokorrentRequest\";\r\nimport { TokenRenewFailedException } from \"./TokenRenewFailedException\";\r\nimport { InteractionRequiredException } from \"./InteractionRequiredException\";\r\nimport { ApiException } from \"./ApiException\";\r\nimport { Aktion } from \"./Aktion\";\r\nimport { environment } from \"../environment\";\r\n\r\nconst baseUrl = environment.API_URL;\r\n\r\nexport class ApiClient {\r\n\r\n    constructor(private accountInfoStore: AccountInfoStore) {\r\n\r\n    }\r\n\r\n    async neuerBenutzer(id: string, secret: string) {\r\n        try {\r\n            let res = await postJson(`${baseUrl}/api/v2/accounts`, { id, secret });\r\n            if (!res.ok) {\r\n                return { success: false };\r\n            }\r\n            return { success: true };\r\n        }\r\n        catch {\r\n            return { success: false };\r\n        }\r\n    }\r\n\r\n    async getUserInfo() {\r\n        let res = await fetch(`${baseUrl}/api/v2/userinfo`, { headers: await this.getAuthHeader() });\r\n        return await res.json();\r\n    }\r\n\r\n    private async getAuthHeader() {\r\n        return { \"Authorization\": `Bearer ${await this.getAccessToken()}` };\r\n    }\r\n\r\n    async kontokorrentHinzufuegen(oeffentlicherName: string, einladungsCode: string) {\r\n        let params = \"\";\r\n        if (oeffentlicherName) {\r\n            params = `oeffentlicherName=${encodeURIComponent(oeffentlicherName)}`;\r\n        }\r\n        else {\r\n            params = `einladungsCode=${encodeURIComponent(einladungsCode)}`;\r\n        }\r\n        let headers = await this.getAuthHeader();\r\n        let res = await fetch(`${baseUrl}/api/v2/kontokorrents?${params}`, { method: \"PUT\", headers: headers });\r\n        if (res.status == 404) {\r\n            return null;\r\n        }\r\n        return <KontokorrentInfo[]>await res.json();\r\n    }\r\n\r\n    async kontokorrentsAuflisten() {\r\n        let res = await fetch(`${baseUrl}/api/v2/kontokorrents`, { headers: await this.getAuthHeader() });\r\n        if (!res.ok) {\r\n            throw new ApiException();\r\n        }\r\n        return <KontokorrentInfo[]>await res.json();\r\n    }\r\n\r\n\r\n    async neuerKontokorrent(request: NeuerKontokorrentRequest) {\r\n        let res = await postJson(`${baseUrl}/api/v2/kontokorrents`, request, await this.getAccessToken());\r\n        if (res.status == 422) {\r\n            return { success: false, exists: true };\r\n        }\r\n        else if (res.ok) {\r\n            return { success: true };\r\n        }\r\n        return { success: false };\r\n    }\r\n\r\n    async getAktionen(kontokorrentId: string, ab?: number) {\r\n        let query = ab ? `?ab=${ab}` : \"\";\r\n        let res = await fetch(`${baseUrl}/api/v2/kontokorrents/${kontokorrentId}/aktionen${query}`, { headers: await this.getAuthHeader() });\r\n        if (res.status == 404) {\r\n            return {\r\n                success: false,\r\n                notfound: true\r\n            };\r\n        }\r\n        else if (res.ok) {\r\n            let aktionen: Aktion[] = await res.json();\r\n            for (let a of aktionen) {\r\n                if (a.bezahlung) {\r\n                    a.bezahlung.zeitpunkt = new Date(a.bezahlung.zeitpunkt);\r\n                }\r\n            }\r\n            return {\r\n                success: true,\r\n                aktionen\r\n            }\r\n        }\r\n    }\r\n\r\n    private async getAccessToken() {\r\n        let info = this.accountInfoStore.get();\r\n        if (null == info) {\r\n            throw new Error(\"Keine Account Information gespeichert.\");\r\n        }\r\n        let tokenInfo = localStorage.getItem(\"access_token_anonymous\");\r\n        if (null != tokenInfo) {\r\n            let { token, expires } = JSON.parse(tokenInfo);\r\n            if (token && expires && expires >= +new Date()) {\r\n                return token;\r\n            }\r\n        }\r\n        if (info.type == AccountType.anonym) {\r\n\r\n            try {\r\n                let res = await postJson(`${baseUrl}/api/v2/token`, { id: info.id, secret: info.secret });\r\n                if (!res.ok) {\r\n                    throw new TokenRenewFailedException(false);\r\n                }\r\n                let tokenResponse = await res.json();\r\n                localStorage.setItem(\"access_token_anonymous\", JSON.stringify(tokenResponse));\r\n                return tokenResponse.token;\r\n            }\r\n            catch {\r\n                throw new TokenRenewFailedException(true);\r\n            }\r\n        }\r\n        else if (info.type == AccountType.google) {\r\n            throw new InteractionRequiredException();\r\n            // let flow = new OAuth2PopupFlow({\r\n            //     authorizationUri: \"https://accounts.google.com/o/oauth2/v2/auth/.well-known/openid-configuration\",\r\n            //     clientId: \"82890837151-n0e81vsn3ns2qn1ksh7bdohmnlau468k.apps.googleusercontent.com\",\r\n            //     redirectUri: \"http://localhost:4200\",\r\n            //     scope: \"openid\",\r\n            //     responseType: \"id_token\",\r\n            //     additionalAuthorizationParameters: { \"login_hint\": info.id },\r\n            //     accessTokenStorageKey: \"access_token_google\"\r\n            // });\r\n            // return await flow.token();\r\n        }\r\n        else {\r\n            throw new Error(`Account Typ ${info.type} unbekannt`);\r\n        }\r\n    }\r\n}","import { Store } from \"../Store\";\r\nimport { ApiClient } from \"../../api/ApiClient\";\r\nimport { Action } from \"../lib/Action\";\r\nimport { AccountInfoStore } from \"../../lib/AccountInfoStore\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { AccountType } from \"../../lib/AccountType\";\r\nimport { RoutingActionCreator } from \"./RoutingActionCreator\";\r\nimport { TokenRenewFailedException } from \"../../api/TokenRenewFailedException\";\r\nimport { InteractionRequiredException } from \"../../api/InteractionRequiredException\";\r\nimport { AccountInfo } from \"../../lib/AccountInfo\";\r\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\r\n\r\nexport enum AccountActionNames {\r\n    AccountCreating = \"AccountCreating\",\r\n    AccountCreationFailed = \"AccountCreationFailed\",\r\n    AccountCreated = \"AccountCreated\",\r\n    AccountInitialized = \"AccountInitialized\",\r\n    LoggedOut = \"LoggedOut\",\r\n    LoginExpired = \"LoginExpired\"\r\n}\r\n\r\nexport class AccountCreating implements Action {\r\n    readonly type = AccountActionNames.AccountCreating;\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class AccountCreationFailed implements Action {\r\n    readonly type = AccountActionNames.AccountCreationFailed;\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class AccountCreated implements Action {\r\n    readonly type = AccountActionNames.AccountCreated;\r\n    constructor(public info: AccountInfo) {\r\n\r\n    }\r\n}\r\n\r\nexport class AccountInitialized implements Action {\r\n    readonly type = AccountActionNames.AccountInitialized;\r\n    constructor(public info: AccountInfo) {\r\n\r\n    }\r\n}\r\n\r\nexport class LoggedOut implements Action {\r\n    readonly type = AccountActionNames.LoggedOut;\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class LoginExpired implements Action {\r\n    readonly type = AccountActionNames.LoginExpired;\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport type AccountActions = AccountInitialized\r\n    | AccountCreating\r\n    | AccountCreated\r\n    | AccountCreationFailed\r\n    | LoggedOut\r\n    | LoginExpired;\r\n\r\nexport class AccountActionCreator {\r\n    constructor(private store: Store,\r\n        private apiClient: ApiClient,\r\n        private accountInfoStore: AccountInfoStore,\r\n        private routingActionCreator: RoutingActionCreator,\r\n        private db: KontokorrentDatabase) {\r\n\r\n    }\r\n\r\n    initializeAccount() {\r\n        let info = this.accountInfoStore.get();\r\n        if (!this.accountInfoStore.get()) {\r\n            return false;\r\n        }\r\n        this.store.dispatch(new AccountInitialized(info));\r\n        this.getUserInfo();\r\n        return true;\r\n    }\r\n\r\n    async getUserInfo() {\r\n        try {\r\n            let userInfo = await this.apiClient.getUserInfo();\r\n        }\r\n        catch (e) {\r\n            if (e instanceof TokenRenewFailedException) {\r\n                let accountInfo = this.accountInfoStore.get();\r\n                if (!e.networkError && accountInfo.type == AccountType.anonym) {\r\n                    // anonymer token renew failed - wir haben ein ernstes problem\r\n                    // reset and duck out\r\n                    this.accountInfoStore.clear();\r\n                    window.location.reload();\r\n                }\r\n            }\r\n            else if (e instanceof InteractionRequiredException) {\r\n                this.store.dispatch(new LoginExpired());\r\n            }\r\n        }\r\n    }\r\n\r\n    async ensureAccount() {\r\n        if (!this.store.state.account.accountCreated) {\r\n            let accountInfo = {\r\n                id: uuid(),\r\n                secret: uuid(),\r\n                type: AccountType.anonym\r\n            };\r\n            this.store.dispatch(new AccountCreating());\r\n            let res = await this.apiClient.neuerBenutzer(accountInfo.id, accountInfo.secret);\r\n            if (!res.success) {\r\n                this.store.dispatch(new AccountCreationFailed());\r\n            }\r\n            else {\r\n                this.store.dispatch(new AccountCreated(accountInfo));\r\n                this.accountInfoStore.set(accountInfo);\r\n            }\r\n            return res.success;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async logout() {\r\n        this.accountInfoStore.clear();\r\n        await this.db.clear();\r\n        this.store.dispatch(new LoggedOut());\r\n        this.routingActionCreator.navigateLogin();\r\n    }\r\n}\r\n","import { Reducer } from \"../lib/Reducer\";\r\nimport { State, AccountState } from \"../State\";\r\nimport { AccountActions, AccountActionNames } from \"../actions/AccountActionCreator\";\r\nimport { KontokorrentsActions, KontokorrentsActionNames } from \"../actions/KontokorrentsActionCreator\";\r\n\r\nexport class AccountReducer implements Reducer<AccountState, AccountActions | KontokorrentsActions> {\r\n    onDispatch(action: AccountActions | KontokorrentsActions, updateStore: (a: (s: AccountState) => AccountState) => void): void {\r\n        switch (action.type) {\r\n            case AccountActionNames.AccountCreating: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        accountCreating: true,\r\n                        accountCreationFailed: false\r\n                    };\r\n                })\r\n            }\r\n                break;\r\n            case AccountActionNames.AccountCreated: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s, accountCreating: false,\r\n                        accountCreated: true,\r\n                        accountInfo: action.info\r\n                    };\r\n                })\r\n            }\r\n                break;\r\n            case AccountActionNames.AccountCreationFailed: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s, accountCreationFailed: true,\r\n                        accountCreating: false,\r\n                        accountCreated: false\r\n                    };\r\n                })\r\n            }\r\n                break;\r\n            case AccountActionNames.AccountInitialized: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        accountCreated: true,\r\n                        accountInfo: action.info\r\n                    };\r\n                })\r\n            }\r\n                break;\r\n            case AccountActionNames.LoggedOut: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        accountCreated: false\r\n                    };\r\n                })\r\n            }\r\n                break;\r\n            case AccountActionNames.LoginExpired:\r\n                {\r\n                    updateStore(s => {\r\n                        return {\r\n                            ...s,\r\n                            loginExpired: true\r\n                        };\r\n                    })\r\n                }\r\n                break;\r\n            case KontokorrentsActionNames.KontokorrentListeLadenFailed: {\r\n                if (action.interactionRequired) {\r\n                    updateStore(s => {\r\n                        return {\r\n                            ...s,\r\n                            loginExpired: true\r\n                        };\r\n                    })\r\n                }\r\n            }\r\n                break;\r\n        }\r\n    }\r\n}","import { Store } from \"../Store\";\r\nimport { Action } from \"../lib/Action\";\r\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\r\n\r\n\r\nexport enum BezahlungActionNames {\r\n    BezahlungKontokorrentGeandert = \"BezahlungKontokorrentGeandert\"\r\n}\r\n\r\nexport class BezahlungKontokorrentGeandert implements Action {\r\n    readonly type = BezahlungActionNames.BezahlungKontokorrentGeandert;\r\n    constructor(public kontokorrentId: string) {\r\n\r\n    }\r\n}\r\n\r\nexport type BezahlungActions = BezahlungKontokorrentGeandert\r\n    ;\r\n\r\nexport class BezahlungActionCreator {\r\n\r\n    constructor(private store: Store,\r\n        private db: KontokorrentDatabase) {\r\n\r\n    }\r\n\r\n    async bezahlungEintragenGeoeffnet() {\r\n        let id = this.store.state.kontokorrents.activeKontokorrentId || await this.db.getZuletztGesehenerKontokorrentId();\r\n        this.store.dispatch(new BezahlungKontokorrentGeandert(id));\r\n    }\r\n\r\n    async bezahlungEintragenKontokorrentChanged(id: string) {\r\n        this.store.dispatch(new BezahlungKontokorrentGeandert(id));\r\n        await this.db.setZuletztGesehenerKontokorrentId(id);\r\n    }\r\n}\r\n","import { Reducer } from \"../lib/Reducer\";\r\nimport { KontokorrentsState, KontokorrentState, Bezahlung } from \"../State\";\r\nimport { KontokorrentsActions, KontokorrentsActionNames } from \"../actions/KontokorrentsActionCreator\";\r\nimport { KontokorrentInfo } from \"../../api/KontokorrentInfo\";\r\nimport { AccountActionNames, AccountActions } from \"../actions/AccountActionCreator\";\r\nimport { BezahlungActionNames, BezahlungActions } from \"../actions/BezahlungActionCreator\";\r\n\r\ntype Actions = KontokorrentsActions | AccountActions | BezahlungActions;\r\n\r\nexport class KontokorrentsReducer implements Reducer<KontokorrentsState, KontokorrentsActions | AccountActions> {\r\n    onDispatch(action: Actions, updateStore: (a: (s: KontokorrentsState) => KontokorrentsState) => void): void {\r\n        switch (action.type) {\r\n            case KontokorrentsActionNames.KontokorrentListeLaden: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        listeLaden: true\r\n                    };\r\n                })\r\n            }\r\n                break;\r\n            case KontokorrentsActionNames.KontokorrentListeLadenFailed: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        listeLaden: false\r\n                    };\r\n                })\r\n            }\r\n                break;\r\n            case KontokorrentsActionNames.KontokorrentListe: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        kontokorrents: this.extendMap(s.kontokorrents, action.kontokorrents)\r\n                    };\r\n                })\r\n            }\r\n                break;\r\n            case KontokorrentsActionNames.KontokorrentHinzufuegen: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        hinzufuegen: true\r\n                    };\r\n                })\r\n            }\r\n                break;\r\n            case KontokorrentsActionNames.KontokorrentHinzufuegenFailed: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        hinzufuegen: false,\r\n                        hinzufuegenFailed: { kontokorrentNotFound: action.notFound },\r\n                    };\r\n                })\r\n            }\r\n                break;\r\n            case KontokorrentsActionNames.KontokorrentHinzufuegenSuccess: {\r\n                updateStore(s => {\r\n\r\n                    return {\r\n                        ...s,\r\n                        hinzufuegen: false,\r\n                        kontokorrents: this.extendMap(s.kontokorrents, action.kontokorrents)\r\n                    };\r\n                })\r\n            }\r\n            case KontokorrentsActionNames.KontokorrentCreating: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        creating: true,\r\n                        creationFailed: null\r\n                    };\r\n                })\r\n            }\r\n                break;\r\n            case KontokorrentsActionNames.KontokorrentCreationFailed: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        creating: false,\r\n                        creationFailed: {\r\n                            exists: action.exists\r\n                        }\r\n                    };\r\n                })\r\n            }\r\n                break;\r\n            case KontokorrentsActionNames.KontokorrentCreated: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        creating: false,\r\n                        kontokorrents: {\r\n                            ...s.kontokorrents, [action.kontokorrent.id]: {\r\n                                id: action.kontokorrent.id,\r\n                                name: action.kontokorrent.name,\r\n                                synchronisieren: false,\r\n                                personen: action.kontokorrent.personen.map(p => {\r\n                                    return {\r\n                                        balance: 0,\r\n                                        ...p\r\n                                    }\r\n                                }),\r\n                                bezahlungen: []\r\n                            }\r\n                        }\r\n                    };\r\n                });\r\n                break;\r\n            }\r\n            case KontokorrentsActionNames.KontokorrentGeoeffnet: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        activeKontokorrentId: action.id\r\n                    };\r\n                });\r\n                break;\r\n            }\r\n            case KontokorrentsActionNames.KontokorrentBezahlungen: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        kontokorrents: {\r\n                            ...s.kontokorrents, [action.kontokorrentId]: {\r\n                                ...s.kontokorrents[action.kontokorrentId],\r\n                                bezahlungen: action.bezahlungen\r\n                            }\r\n                        }\r\n                    };\r\n                });\r\n                break;\r\n            }\r\n            case KontokorrentsActionNames.KontokorrentSynchronisieren: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        kontokorrents: {\r\n                            ...s.kontokorrents, [action.kontokorrentId]: {\r\n                                ...s.kontokorrents[action.kontokorrentId],\r\n                                synchronisieren: true\r\n                            }\r\n                        }\r\n                    };\r\n                });\r\n                break;\r\n            }\r\n            case KontokorrentsActionNames.KontokorrentSynchronisiert: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        kontokorrents: {\r\n                            ...s.kontokorrents, [action.kontokorrentId]: {\r\n                                ...s.kontokorrents[action.kontokorrentId],\r\n                                synchronisieren: false\r\n                            }\r\n                        }\r\n                    };\r\n                });\r\n                break;\r\n            }\r\n            case KontokorrentsActionNames.KontokorrentBalanceAktualisiert: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        kontokorrents: {\r\n                            ...s.kontokorrents, [action.kontokorrentId]: {\r\n                                ...s.kontokorrents[action.kontokorrentId],\r\n                                personen: s.kontokorrents[action.kontokorrentId].personen.map(p => {\r\n                                    return {\r\n                                        ...p,\r\n                                        balance: action.balance[p.id]\r\n                                    };\r\n                                })\r\n                            }\r\n                        }\r\n                    };\r\n                });\r\n                break;\r\n            }\r\n            case KontokorrentsActionNames.LoginPageGeoeffnet: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        hinzufuegen: false,\r\n                        hinzufuegenFailed: null\r\n                    };\r\n                });\r\n                break;\r\n            }\r\n            case AccountActionNames.LoggedOut: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        activeKontokorrentId: null,\r\n                        kontokorrents: {}\r\n                    };\r\n                });\r\n                break;\r\n            }\r\n            case BezahlungActionNames.BezahlungKontokorrentGeandert: {\r\n                updateStore(s => {\r\n                    return {\r\n                        ...s,\r\n                        activeKontokorrentId: action.kontokorrentId\r\n                    };\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private extendMap(map: { [id: string]: KontokorrentState }, kk: KontokorrentInfo[]) {\r\n        let kontokorrents: { [id: string]: KontokorrentState } = {};\r\n        for (let k of kk) {\r\n            let kontokorrent = {\r\n                ...k,\r\n                synchronisieren: false,\r\n                bezahlungen: <Bezahlung[]>[],\r\n                ...map[k.id],\r\n                personen: k.personen.map(v => {\r\n                    let p = map[k.id]?.personen?.find(p => p.id == v.id);\r\n                    return {\r\n                        ...v,\r\n                        balance: 0,\r\n                        ...p\r\n                    }\r\n                })\r\n            };\r\n            kontokorrents[k.id] = kontokorrent;\r\n        }\r\n        return kontokorrents;\r\n    }\r\n}","export default __webpack_public_path__ + \"site.webmanifest\";","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        const returnVal = await target[targetFuncName](...args);\n        if (isWrite)\n            await tx.done;\n        return returnVal;\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { openDB, IDBPDatabase, DBSchema } from \"idb\";\r\nimport { KontokorrentDbModel } from \"./KontokorrentDbModel\";\r\nimport { sortByAlphabetically } from \"../utils/sortBy\";\r\nimport { Aktion } from \"../api/Aktion\";\r\nimport { AktionDbModel } from \"./AktionDbModel\";\r\n\r\n\r\nconst KontokorrentsStore = \"KontokorrentsStore\";\r\nconst AppStateStore = \"AppStateStore\";\r\nconst AktionenStore = \"AktionenStore\";\r\n\r\ninterface AppSettings {\r\n    id: number;\r\n    zuletztGesehenerKontokorrentId: string\r\n}\r\n\r\ninterface KontokorrentDbSchema extends DBSchema {\r\n    KontokorrentsStore: {\r\n        key: string;\r\n        value: KontokorrentDbModel;\r\n        indexes: { \"oeffentlicherName\": string };\r\n    };\r\n    AppStateStore: {\r\n        value: AppSettings;\r\n        key: number;\r\n    };\r\n    AktionenStore: {\r\n        key: [number, string],\r\n        value: AktionDbModel,\r\n        indexes: { \"kontokorrentId\": string };\r\n    };\r\n}\r\n\r\n\r\nconst initialSettings: (() => AppSettings) = () => { return { id: 0, zuletztGesehenerKontokorrentId: null } };\r\nexport class KontokorrentDatabase {\r\n\r\n    private async withInitialized<T>(cb: (db: IDBPDatabase<KontokorrentDbSchema>) => Promise<T>) {\r\n        let db = await openDB<KontokorrentDbSchema>(\"kontokorrent-db\", 3, {\r\n            upgrade(db, oldVersion: number, newVersion: number) {\r\n                if (oldVersion < 1) {\r\n                    let store = db.createObjectStore(KontokorrentsStore, { keyPath: \"id\" });\r\n                    store.createIndex(\"oeffentlicherName\", \"oeffentlicherName\");\r\n                }\r\n                if (oldVersion < 2) {\r\n                    let store = db.createObjectStore(AppStateStore, { keyPath: \"id\" });\r\n                    store.put(initialSettings());\r\n                }\r\n                if (oldVersion < 3) {\r\n                    let store = db.createObjectStore(AktionenStore, { keyPath: [\"laufendeNummer\", \"kontokorrentId\"] });\r\n                    store.createIndex(\"kontokorrentId\", \"kontokorrentId\");\r\n                }\r\n            },\r\n        });\r\n        try {\r\n            return await cb(db);\r\n        }\r\n        finally {\r\n            db.close();\r\n        }\r\n    }\r\n\r\n    async getKontokorrents(): Promise<KontokorrentDbModel[]> {\r\n        return await this.withInitialized(async db => {\r\n            return sortByAlphabetically((await db.getAll(KontokorrentsStore)), k => k.name);\r\n        });\r\n    }\r\n\r\n    async addAktionen(id: string, aktionen: Aktion[]): Promise<void> {\r\n        if (!aktionen.length) {\r\n            return;\r\n        }\r\n        return await this.withInitialized(async db => {\r\n            const tx = db.transaction(AktionenStore, \"readwrite\");\r\n            let tasks = aktionen.map(v => {\r\n                let a: AktionDbModel = {\r\n                    ...v,\r\n                    kontokorrentId: id\r\n                };\r\n                return a;\r\n            }).map(a => tx.store.add(a));\r\n            await Promise.all(tasks);\r\n            await tx.done;\r\n        });\r\n    }\r\n\r\n    async getZuletztGesehenerKontokorrentId(): Promise<string> {\r\n        return await this.withInitialized(async db => {\r\n            let appState = await db.get(AppStateStore, 0);\r\n            if (appState.zuletztGesehenerKontokorrentId) {\r\n                return appState.zuletztGesehenerKontokorrentId;\r\n            }\r\n            else {\r\n                let kks = await (await this.getKontokorrents());\r\n                if (kks.length) {\r\n                    return kks[0].id;\r\n                }\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    async setZuletztGesehenerKontokorrentId(id: string): Promise<void> {\r\n        return await this.withInitialized(async db => {\r\n            let appState = await db.get(AppStateStore, 0);\r\n            appState.zuletztGesehenerKontokorrentId = id;\r\n            await db.put(AppStateStore, appState);\r\n        });\r\n    }\r\n\r\n    async setKontokorrents(kontokorrents: {\r\n        name: string, id: string, personen: { name: string, id: string }[],\r\n        oeffentlicherName: string\r\n    }[]): Promise<string[]> {\r\n        return await this.withInitialized(async db => {\r\n            let existing: KontokorrentDbModel[] = (await db.getAll(KontokorrentsStore));\r\n            for (let v of existing.filter(e => !kontokorrents.some(d => e.id === d.id))) {\r\n                await db.delete(KontokorrentsStore, v.id);\r\n            }\r\n            let newIds: string[] = [];\r\n            for (let v of kontokorrents) {\r\n                let ex = existing.find(d => d.id == v.id);\r\n                if (!ex) {\r\n                    newIds.push(v.id);\r\n                }\r\n                let combined = {\r\n                    ...ex, name: v.name, personen: v.personen, id: v.id,\r\n                    oeffentlicherName: v.oeffentlicherName\r\n                };\r\n                await db.put(KontokorrentsStore, combined);\r\n            }\r\n            return newIds;\r\n        });\r\n    }\r\n\r\n    async addKontokorrent(kk: KontokorrentDbModel): Promise<void> {\r\n        return await this.withInitialized(async db => {\r\n            if (!await db.get(KontokorrentsStore, kk.id)) {\r\n                await db.add(KontokorrentsStore, kk);\r\n            }\r\n        });\r\n    }\r\n\r\n    async getKontokorrent(id: string): Promise<KontokorrentDbModel> {\r\n        return await this.withInitialized(async db => {\r\n            return <KontokorrentDbModel>await db.get(KontokorrentsStore, id);\r\n        });\r\n    }\r\n\r\n    async getPerOeffentlichName(id: string): Promise<KontokorrentDbModel> {\r\n        return await this.withInitialized(async db => {\r\n            return <KontokorrentDbModel>await db.getFromIndex(KontokorrentsStore, \"oeffentlicherName\", id);\r\n        });\r\n    }\r\n\r\n    async getAktionen(id: string): Promise<AktionDbModel[]> {\r\n        return await this.withInitialized(async db => {\r\n            return await db.getAllFromIndex(AktionenStore, \"kontokorrentId\", id);\r\n        });\r\n    }\r\n\r\n    async clear() {\r\n        return await this.withInitialized(async db => {\r\n            await db.clear(AktionenStore);\r\n            await db.clear(KontokorrentsStore);\r\n            await db.put(AppStateStore, initialSettings());\r\n        });\r\n    }\r\n}\r\n\r\n","import { Router, BodyChildRouteRenderer } from \"route-it\";\r\nimport { KontokorrentRouteResolver } from \"./routing/KontokorrentRouteResolver\";\r\nimport { Store } from \"./state/Store\";\r\nimport { InitializationActionCreator } from \"./state/actions/InitializationActionCreator\";\r\nimport { RoutingActionCreator } from \"./state/actions/RoutingActionCreator\";\r\nimport { ServiceLocator } from \"./ServiceLocator\";\r\nimport { AccountInfoStore } from \"./lib/AccountInfoStore\";\r\nimport { ApiClient } from \"./api/ApiClient\";\r\nimport { AccountActionCreator } from \"./state/actions/AccountActionCreator\";\r\nimport { AccountReducer } from \"./state/reducers/AccountReducer\";\r\nimport { KontokorrentsActionCreator } from \"./state/actions/KontokorrentsActionCreator\";\r\nimport { KontokorrentsReducer } from \"./state/reducers/KontokorrentsReducer\";\r\nimport \"./styles.scss\";\r\nimport \"./favicons\";\r\nimport \"../favicons/site.webmanifest\";\r\nimport { AsyncRouteResolver } from \"route-it/dist/router\";\r\nimport runtime from \"serviceworker-webpack-plugin/lib/runtime\";\r\nimport { KontokorrentDatabase } from \"./lib/KontokorrentDatabase\";\r\nimport { BezahlungActionCreator } from \"./state/actions/BezahlungActionCreator\";\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n    window.addEventListener(\"load\", async () => {\r\n        try {\r\n            let registration = await runtime.register();\r\n        } catch (err) {\r\n            console.error('ServiceWorker registration failed: ', err);\r\n        };\r\n    });\r\n}\r\n\r\nasync function run() {\r\n    const store = new Store(() => {\r\n        return {\r\n            account: {\r\n                accountCreated: false,\r\n                accountCreating: false,\r\n                accountCreationFailed: false,\r\n                loginExpired: false,\r\n                accountInfo: null\r\n            },\r\n            kontokorrents: {\r\n                hinzufuegen: false,\r\n                hinzufuegenFailed: null,\r\n                creating: false,\r\n                creationFailed: null,\r\n                kontokorrents: {},\r\n                listeLaden: false,\r\n                activeKontokorrentId: null\r\n            }\r\n        }\r\n    });\r\n    const routeResolver = new KontokorrentRouteResolver(store);\r\n    const router = new Router(routeResolver as AsyncRouteResolver<HTMLElement>, new BodyChildRouteRenderer());\r\n    const db = new KontokorrentDatabase();\r\n    store.addReducer(\"account\", new AccountReducer());\r\n    store.addReducer(\"kontokorrents\", new KontokorrentsReducer());\r\n\r\n\r\n    const routingActionCreator = new RoutingActionCreator(router);\r\n\r\n    const accountInfoStore = new AccountInfoStore();\r\n    const apiClient = new ApiClient(accountInfoStore);\r\n    const accountActionCreator = new AccountActionCreator(store, apiClient, accountInfoStore, routingActionCreator, db);\r\n\r\n    const kontokorrentsActionCreator = new KontokorrentsActionCreator(store, apiClient, routingActionCreator, db);\r\n    const initializationActionCreator = new InitializationActionCreator(store,\r\n        routingActionCreator,\r\n        accountActionCreator, kontokorrentsActionCreator,\r\n        router);\r\n    const bezahlungActionCreator = new BezahlungActionCreator(store, db);\r\n\r\n    const serviceLocator = new ServiceLocator(store,\r\n        routingActionCreator,\r\n        accountActionCreator,\r\n        kontokorrentsActionCreator,\r\n        bezahlungActionCreator);\r\n    routeResolver.setServiceLocator(serviceLocator);\r\n\r\n    await initializationActionCreator.initializeApplication();\r\n}\r\n\r\nrun().catch(err => console.error(err));","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"sourceRoot":""}