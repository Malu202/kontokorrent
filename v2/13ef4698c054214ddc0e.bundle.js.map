{"version":3,"file":"13ef4698c054214ddc0e.bundle.js","mappings":"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","sources":["webpack://kontokorrent/./src/components/AppBar/AppBar.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.html","webpack://kontokorrent/./src/components/ShareDialog/ShareDialog.ts","webpack://kontokorrent/./src/components/ShareDialog/ShareDialog.html","webpack://kontokorrent/./src/components/AppBar/AppBar.ts","webpack://kontokorrent/./src/components/KontokorrentNichtGefunden/KontokorrentNichtGefunden.ts","webpack://kontokorrent/./src/components/KontokorrentNichtGefunden/KontokorrentNichtGefunden.html","webpack://kontokorrent/./src/components/ui-components/popup/popup.ts","webpack://kontokorrent/./src/state/actions/KontokorrentHinzufuegenActionCreator.ts","webpack://kontokorrent/./src/utils/ArrayToElementRenderer.ts"],"sourcesContent":["// Module\nvar code = \"<header class=\\\"app-bar\\\"> <kontokorrent-select class=\\\"app-bar__kontokorrent-select\\\"></kontokorrent-select> <nav class=\\\"app-bar__links\\\"> <button id=\\\"share-button\\\" class=\\\"app-bar__link\\\" title=\\\"Teilen-Dialog öffnen\\\"> <span class=\\\"material-icons\\\"> share </span> </button> <button id=\\\"open-menu-button\\\" class=\\\"app-bar__link\\\" title=\\\"Menü öffnen\\\"> <span class=\\\"material-icons\\\"> menu </span> </button> <app-popup class=\\\"app-bar__nav-popup\\\" id=\\\"appbar-menu\\\"> <a href=\\\"info\\\" class=\\\"button\\\" title=\\\"Informationen über diese App\\\"> <span class=\\\"material-icons\\\"> info </span> Info </a> <button id=\\\"logout-button\\\" class=\\\"button\\\"> <span class=\\\"material-icons\\\"> exit_to_app </span> Ausloggen </button> </app-popup> </nav> </header> <app-popup id=\\\"logout-dialog\\\"> <div class=\\\"dialog__backdrop\\\"></div> <div class=\\\"dialog\\\"> <p class=\\\"dialog__question\\\"> Wirklich aus allen Kontokorrents ausloggen? </p> <div class=\\\"dialog__button-pane\\\"> <button id=\\\"abort-logout\\\" class=\\\"button\\\">Abbrechen</button> <button id=\\\"confirm-logout\\\" class=\\\"button\\\">Ausloggen</button> </div> </div> </app-popup> <app-popup id=\\\"share-dialog\\\"> </app-popup>\";\n// Exports\nexport default code;","import template from \"./KontokorrentSelectListEntry.html\";\nimport { KontokorrentState } from \"../../state/State\";\n\n\nexport class KontokorrentSelectListEntry extends HTMLElement {\n    private name: HTMLSpanElement;\n    private link: HTMLAnchorElement;\n    private kontokorrent: KontokorrentState;\n    private rendered = false;\n    private isActive: boolean = false;\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.name = this.querySelector(`[data-ref=\"name\"]`);\n            this.link = this.querySelector(`[data-ref=\"link\"]`);\n            this.updateStyle();\n        }\n        this.clickEvent = this.clickEvent.bind(this);\n        this.link.addEventListener(\"click\", this.clickEvent);\n    }\n\n    private clickEvent(e: MouseEvent): void {\n        e.preventDefault();\n        this.dispatchEvent(new CustomEvent(\"gotokontokorrent\", { detail: this.kontokorrent.id, bubbles: true }));\n    }\n\n    disconnectedCallback() {\n        this.link.removeEventListener(\"click\", this.clickEvent);\n    }\n\n    update(kontokorrent: KontokorrentState, isActive: boolean) {\n        this.kontokorrent = kontokorrent;\n        this.isActive = isActive;\n        this.updateStyle();\n    }\n\n    private updateStyle() {\n        if (this.rendered && this.kontokorrent) {\n            this.name.innerText = this.kontokorrent.name;\n            this.link.href = `kontokorrents/o/${this.kontokorrent.oeffentlicherName}`;\n            this.link.classList.toggle(\"kontokorrent-select-list__entry--active\", this.isActive);\n        }\n    }\n}\nexport const KontokorrentSelectListEntryTagName = \"kontokorrent-select-list-entry\";\ncustomElements.define(KontokorrentSelectListEntryTagName, KontokorrentSelectListEntry);\n","// Module\nvar code = \"<a data-ref=\\\"link\\\" class=\\\"kontokorrent-select-list__entry\\\"> <span data-ref=\\\"name\\\"></span> </a>\";\n// Exports\nexport default code;","import template from \"./KontokorrentSelectList.html\";\nimport \"./KontokorrentSelectList.scss\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { sortByAlphabetically } from \"../../utils/sortBy\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { KontokorrentSelectListEntry } from \"./KontokorrentSelectListEntry\";\n\nexport class KontokorrentSelectList extends HTMLElement {\n    private list: HTMLOListElement;\n    private _kontokorrents: KontokorrentState[];\n    private _activeKontokorrentId: string;\n    private kontokorrentsRenderer: ArrayToElementRenderer<KontokorrentState, HTMLLIElement, string>;\n    private rendered = false;\n\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.list = this.querySelector(`[data-ref=\"list\"]`);\n            this._kontokorrents = [];\n            this.kontokorrentsRenderer = new ArrayToElementRenderer(this.list,\n                (k: KontokorrentState) => k.id,\n                () => {\n                    let li = document.createElement(\"li\");\n                    li.appendChild(new KontokorrentSelectListEntry());\n                    return li;\n                });\n            this.update();\n        }\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private update() {\n        if (this.rendered) {\n            this.kontokorrentsRenderer.update(this._kontokorrents,\n                (li, kontokorrent) => {\n                    let x: KontokorrentSelectListEntry = <KontokorrentSelectListEntry>li.firstChild;\n                    x.update(kontokorrent, this._activeKontokorrentId == kontokorrent.id);\n                });\n        }\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this._kontokorrents = sortByAlphabetically(kontokorrents, k => k.name);\n        this.update();\n    }\n\n    set activeKontokorrentId(id: string) {\n        this._activeKontokorrentId = id;\n        this.update();\n    }\n}\nexport const KontokorrentSelectListTagName = \"kontokorrent-select-list\";\ncustomElements.define(KontokorrentSelectListTagName, KontokorrentSelectList);\n","// Module\nvar code = \"<ol data-ref=\\\"list\\\" class=\\\"kontokorrent-select-list\\\"> </ol>\";\n// Exports\nexport default code;","import template from \"./KontokorrentSelect.html\";\nimport \"./KontokorrentSelect.scss\";\nimport \"./KontokorrentSelectList\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { KontokorrentSelectListTagName, KontokorrentSelectList } from \"./KontokorrentSelectList\";\nimport { Popup } from \"../ui-components/popup/popup\";\nimport \"../ui-components/popup/popup\";\n\nexport class KontokorrentSelect extends HTMLElement {\n    private kontokorrentName: HTMLHeadingElement;\n    private popup: Popup;\n    private kontokorrentSelectList: KontokorrentSelectList;\n    private addButton: HTMLButtonElement;\n    private activeKontokorrentId: string;\n    private _kontokorrents: KontokorrentState[] = null;\n    private rendered = false;\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.kontokorrentName = this.querySelector(`[data-ref=\"kontokorrent-name\"]`);\n            this.kontokorrentSelectList = this.querySelector(KontokorrentSelectListTagName);\n            this.addButton = this.querySelector(`#add-kontokorrent`);\n            this.popup = this.querySelector(`app-popup`);\n        }\n        this.updateAttributes();\n        this.addEventListener(\"click\", e => {\n            if (!this.popup.contains(<Element>(event.target))) {\n                this.popup.toggle();\n                e.stopPropagation();\n            }\n        });\n        this.addButton.addEventListener(\"click\", e => {\n            this.dispatchEvent(new CustomEvent(\"addkontokorrent\"));\n        });\n        this.kontokorrentSelectList.addEventListener(\"gotokontokorrent\", () => {\n            this.popup.hide();\n        })\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.activeKontokorrentId = this.getAttribute(\"active-kontokorrent-id\");\n        this.kontokorrentSelectList.activeKontokorrentId = this.activeKontokorrentId;\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [\"active-kontokorrent-id\"];\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this.kontokorrentSelectList.kontokorrents = kontokorrents;\n        this._kontokorrents = kontokorrents;\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        if (this.rendered && this._kontokorrents && this._kontokorrents.length) {\n            let activeKontokorrent = this._kontokorrents.find(k => k.id == this.activeKontokorrentId);\n            if (activeKontokorrent) {\n                this.kontokorrentName.innerText = activeKontokorrent.name;\n                this.kontokorrentName.classList.remove(\"kontokorrent-select__name--unselected\");\n            }\n            else {\n                this.kontokorrentName.innerText = \"(Kontokorrent wählen)\";\n                this.kontokorrentName.classList.add(\"kontokorrent-select__name--unselected\");\n            }\n        }\n    }\n\n}\nexport const KontokorrentSelectTagName = \"kontokorrent-select\";\ncustomElements.define(KontokorrentSelectTagName, KontokorrentSelect);\n","// Module\nvar code = \"<div class=\\\"kontokorrent-select-wrapper\\\"> <div class=\\\"kontokorrent-select\\\"> <h1 data-ref=\\\"kontokorrent-name\\\" class=\\\"kontokorrent-select__name\\\">Kontokorrent</h1> <button class=\\\"kontokorrent-select__choose\\\" title=\\\"anderen Kontokorrent wählen\\\"> <span class=\\\"material-icons\\\"> arrow_drop_down </span> </button> </div> <app-popup class=\\\"kontokorrent-select__popup\\\"> <kontokorrent-select-list></kontokorrent-select-list> <div class=\\\"kontokorrent-select__buttons\\\"> <button id=\\\"add-kontokorrent\\\" class=\\\"button\\\">weiteren hinzufügen</button> </div> </app-popup> </div>\";\n// Exports\nexport default code;","import template from \"./ShareDialog.html\";\nimport \"./ShareDialog.scss\";\n\nexport const ShareKontokorrentDisplay = \"display\";\nexport const ShareKontokorrentOeffentlicherName = \"oeffentlicher-name\";\n\ninterface AttributeStore {\n    display: string;\n    oeffentlicherName: string;\n}\n\nexport class ShareDialog extends HTMLElement {\n    private rendered = false;\n    private shareDoneButton: HTMLButtonElement;\n    private shareDoneListener: (e: MouseEvent) => void;\n    private backdrop: HTMLDivElement;\n    private attributeStore: AttributeStore;\n    private shareDisplayName: HTMLSpanElement;\n    private shareOeffentlicherName: HTMLSpanElement;\n    private webShareSection: HTMLDivElement;\n    private shareLinkInput: HTMLInputElement;\n    private webShareButton: HTMLButtonElement;\n    private shareListener: (e: MouseEvent) => void;\n    private copyLinkButton : HTMLButtonElement;\n    private shareCopied : HTMLDivElement;\n    private copyLinkListener: (e: MouseEvent) => void;\n    constructor() {\n        super();\n        this.attributeStore = {\n            display: \"\",\n            oeffentlicherName: \"\"\n        };\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.shareDoneButton = this.querySelector(\"#share-done\");\n            this.backdrop = this.querySelector(\"#backdrop\");\n            this.shareDisplayName = this.querySelector(\"#share-display-name\");\n            this.shareOeffentlicherName = this.querySelector(\"#share-oeffentlicher-name\");\n            this.shareLinkInput = this.querySelector(\"#share-link\");\n            this.webShareSection = this.querySelector(\"#web-share\");\n            this.webShareButton = this.querySelector(\"#web-share-btn\");\n            this.copyLinkButton = this.querySelector(\"#share-copy-link-btn\");\n            this.shareCopied = this.querySelector(\"#share-copied\");\n            this.updateAttributes();\n        }\n        this.shareCopied.style.visibility = \"hidden\";\n        this.shareDoneListener = (e: MouseEvent) => {\n            e.stopPropagation();\n            this.dispatchEvent(new CustomEvent(\"sharedone\"));\n        };\n        this.shareDoneButton.addEventListener(\"click\", this.shareDoneListener);\n        this.backdrop.addEventListener(\"click\", this.shareDoneListener);\n        this.shareListener = (e: MouseEvent) => {\n            navigator.share({\n                title: `${this.attributeStore.display} - Kontokorrent`,\n                text: `Kontokorrent der Gruppe ${this.attributeStore.display}`,\n                url: `${document.baseURI}kontokorrents/o/${this.attributeStore.oeffentlicherName}`\n            }).then(() => {\n                this.dispatchEvent(new CustomEvent(\"sharedone\"));\n            });\n        };\n        this.webShareButton.addEventListener(\"click\", this.shareListener);\n        this.copyLinkListener = (e: MouseEvent) => {\n            navigator.clipboard.writeText(`${document.baseURI}kontokorrents/o/${this.attributeStore.oeffentlicherName}`).then(() => {\n                this.shareCopied.style.visibility = \"\";\n            });\n        };\n        this.copyLinkButton.addEventListener(\"click\", this.copyLinkListener);\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.attributeStore.display = this.getAttribute(ShareKontokorrentDisplay);\n        this.attributeStore.oeffentlicherName = this.getAttribute(ShareKontokorrentOeffentlicherName);\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [ShareKontokorrentDisplay, ShareKontokorrentOeffentlicherName];\n    }\n\n    disconnectedCallback() {\n        this.shareDoneButton.removeEventListener(\"click\", this.shareDoneListener);\n        this.backdrop.removeEventListener(\"click\", this.shareDoneListener);\n        this.webShareButton.removeEventListener(\"click\", this.shareListener);\n        this.copyLinkButton.removeEventListener(\"click\", this.copyLinkListener);\n    }\n\n    private updatesStyle() {\n        if (this.rendered) {\n            this.webShareSection.style.display = \"share\" in navigator ? \"\" : \"none\";\n            this.shareDisplayName.innerText = this.attributeStore.display;\n            this.shareOeffentlicherName.innerText = this.attributeStore.oeffentlicherName;\n            this.shareLinkInput.value = `${document.baseURI}kontokorrents/o/${this.attributeStore.oeffentlicherName}`;\n        }\n    }\n}\nexport const ShareDialogTagName = \"share-dialog\";\ncustomElements.define(ShareDialogTagName, ShareDialog);\n","// Module\nvar code = \"<div class=\\\"dialog__backdrop\\\" id=\\\"backdrop\\\"></div> <div class=\\\"dialog\\\"> <h2> <strong class=\\\"share-dialog__display-name\\\"> <span id=\\\"share-display-name\\\"></span> </strong> teilen </h2> <p> Alle die den Namen <strong><span id=\\\"share-oeffentlicher-name\\\"></span></strong> kennen, können sich einloggen. </p> <div id=\\\"web-share\\\"> <h3>Über eine App Teilen</h3> <p>Teile den Kontokorrent über eine App, zum Beispiel im Chat deiner Gruppe.</p> <button title=\\\"über eine App teilen\\\" class=\\\"button button--raised\\\" id=\\\"web-share-btn\\\"> <span class=\\\"material-icons\\\"> share </span> Teilen </button> </div> <div> <h3>Link kopieren</h3> <p>Kopiere den Link und sende ihn an weitere Personen.</p> <div class=\\\"share-dialog__link-box\\\"> <input type=\\\"text\\\" readonly=\\\"readonly\\\" id=\\\"share-link\\\"> <button class=\\\"button\\\" id=\\\"share-copy-link-btn\\\" title=\\\"Link kopieren\\\"> <span class=\\\"material-icons\\\"> content_copy </span> </button> </div> <div style=\\\"visibility:hidden\\\" class=\\\"share-dialog__copied\\\" id=\\\"share-copied\\\"> <span class=\\\"material-icons\\\"> done </span> kopiert. </div> </div> <div class=\\\"dialog__button-pane\\\"> <button id=\\\"share-done\\\" class=\\\"button\\\">Fertig</button> </div> </div>\";\n// Exports\nexport default code;","import template from \"./AppBar.html\";\nimport \"./AppBar.scss\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport \"../KontokorrentSelect/KontokorrentSelect\";\nimport { KontokorrentSelectTagName, KontokorrentSelect } from \"../KontokorrentSelect/KontokorrentSelect\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { AccountActionCreator, accountActionCreatorFactory } from \"../../state/actions/AccountActionCreator\";\nimport { Store } from \"../../state/Store\";\nimport { State } from \"../../state/State\";\nimport { Popup } from \"../ui-components/popup/popup\";\nimport { ShareDialog, ShareDialogTagName, ShareKontokorrentDisplay, ShareKontokorrentOeffentlicherName } from \"../ShareDialog/ShareDialog\";\n\nexport class AppBar extends HTMLElement {\n    private kontokorrentSelect: KontokorrentSelect;\n    private store: Store;\n    private routingActionCreator: RoutingActionCreator;\n    private accountActionCreator: AccountActionCreator;\n    private logoutDialog: Popup;\n    private subscription: () => void;\n    private rendered: boolean = false;\n    private menuPopup: Popup;\n    private openMenuButton: HTMLButtonElement;\n    private openMenuButtonListener: (e: MouseEvent) => void;\n    private shareButton: HTMLButtonElement;\n    private shareDialog: Popup;\n    private shareListener: (e: MouseEvent) => void;\n\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.kontokorrentSelect = this.querySelector(KontokorrentSelectTagName);\n            this.logoutDialog = this.querySelector(\"#logout-dialog\");\n            this.menuPopup = this.querySelector(\"#appbar-menu\");\n            this.shareDialog = this.querySelector(\"#share-dialog\");\n            this.shareButton = this.querySelector(\"#share-button\");\n            this.openMenuButton = this.querySelector(\"#open-menu-button\");\n            if (this.store) {\n                this.applyStoreState(this.store.state);\n            }\n        }\n        this.querySelector(\"#logout-button\").addEventListener(\"click\", (e: MouseEvent) => {\n            this.logoutDialog.toggle();\n            this.menuPopup.hide();\n            e.stopPropagation();\n        });\n        this.querySelector(\"#confirm-logout\").addEventListener(\"click\", async () => {\n            await this.accountActionCreator.logout();\n        });\n        this.querySelector(\"#abort-logout\").addEventListener(\"click\", () => {\n            this.logoutDialog.hide();\n        });\n        this.openMenuButtonListener = (e: MouseEvent) => {\n            this.menuPopup.toggle();\n            e.stopPropagation();\n        };\n        this.shareListener = (e: MouseEvent) => {\n            this.shareDialog.show();\n            e.stopPropagation();\n            if (!this.shareDialog.querySelector(ShareDialogTagName)) {\n                let dialog = new ShareDialog();\n                dialog.addEventListener(\"sharedone\", () => {\n                    this.shareDialog.hide();\n                });\n                this.shareDialog.appendChild(dialog);\n                this.applyStoreStateToShareDialog(this.store.state);\n            }\n        };\n        this.shareButton.addEventListener(\"click\", this.shareListener);\n        this.openMenuButton.addEventListener(\"click\", this.openMenuButtonListener);\n        this.querySelectorAll(\"a\").forEach((e: HTMLAnchorElement) => {\n            e.addEventListener(\"click\", ev => {\n                ev.preventDefault();\n                this.routingActionCreator.navigate(e.getAttribute(\"href\"));\n            });\n        });\n\n        this.kontokorrentSelect.addEventListener(\"addkontokorrent\", () => {\n            this.routingActionCreator.navigateLogin();\n        });\n    }\n\n    private applyStoreState(state: State): void {\n        if (this.rendered) {\n            this.kontokorrentSelect.kontokorrents = Object.values(state.kontokorrents.kontokorrents);\n            this.kontokorrentSelect.setAttribute(\"active-kontokorrent-id\", state.kontokorrents.activeKontokorrentId);\n            this.shareButton.disabled = !state.kontokorrents.activeKontokorrentId;\n            this.applyStoreStateToShareDialog(state);\n        }\n    }\n\n    private applyStoreStateToShareDialog(state: State) {\n        let dialog = this.shareDialog.querySelector(ShareDialogTagName);\n        let kontokorrent = state.kontokorrents.kontokorrents[state.kontokorrents.activeKontokorrentId];\n        if (dialog && kontokorrent) {\n            dialog.setAttribute(ShareKontokorrentDisplay, kontokorrent.name);\n            dialog.setAttribute(ShareKontokorrentOeffentlicherName, kontokorrent.oeffentlicherName);\n        }\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.accountActionCreator = accountActionCreatorFactory(serviceLocator);\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n    }\n\n    disconnectedCallback() {\n        if (this.subscription) {\n            this.subscription();\n            this.subscription = null;\n        }\n        this.openMenuButton.removeEventListener(\"click\", this.openMenuButtonListener);\n        this.shareButton.removeEventListener(\"click\", this.shareListener);\n    }\n}\nexport const AppBarTagName = \"app-bar\";\ncustomElements.define(AppBarTagName, AppBar);\n","import { OeffentlicherNameParam } from \"../../routing/KontokorrentRouteResolver\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { Store } from \"../../state/Store\";\nimport { State } from \"../../state/State\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport template from \"./KontokorrentNichtGefunden.html\";\nimport \"./KontokorrentNichtGefunden.scss\";\nimport { KontokorrentHinzufuegenActionCreator, kontokorrentHinzufuegenActionCreatorFactory } from \"../../state/actions/KontokorrentHinzufuegenActionCreator\";\n\nexport class KontokorrentNichtGefunden extends HTMLElement {\n    private rendered = false;\n    private store: Store;\n    private routingActionCreator: RoutingActionCreator;\n    private serviceLocator: ServiceLocator;\n    private appBar: AppBar;\n    private oeffentlicherKontokorrentLabel: HTMLSpanElement;\n    private hinzufuegenBtn: HTMLButtonElement;\n    private oeffentlicherName: string;\n    private hinzufuegenClickListener: (e: MouseEvent) => void;\n    private subscription: () => void;\n    private kontokorrentHinzufuegenActionCreator: KontokorrentHinzufuegenActionCreator;\n    private notFoundError: HTMLDivElement;\n    private processing: HTMLDivElement;\n\n    constructor() {\n        super();\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.kontokorrentHinzufuegenActionCreator = kontokorrentHinzufuegenActionCreatorFactory(serviceLocator);\n        this.serviceLocator = serviceLocator;\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.oeffentlicherKontokorrentLabel = this.querySelector(\"#oeffentlicher-name\");\n            this.hinzufuegenBtn = this.querySelector(\"#hinzufuegen-btn\");\n            this.notFoundError = this.querySelector(\"#notFoundError\");\n            this.processing = this.querySelector(\"#hinzufuegen__progress\");\n            this.appBar = this.querySelector(AppBarTagName);\n            this.appBar.addServices(this.serviceLocator);\n            let searchParams = new URLSearchParams(window.location.search);\n            if (searchParams.has(OeffentlicherNameParam)) {\n                this.oeffentlicherName = searchParams.get(OeffentlicherNameParam).toLowerCase();\n                this.oeffentlicherKontokorrentLabel.innerText = this.oeffentlicherName;\n            }\n        }\n        this.appBar.addEventListener(\"gotokontokorrent\", async (e: CustomEvent) => {\n            await this.routingActionCreator.navigateKontokorrentById(e.detail);\n        });\n        this.hinzufuegenClickListener = () => this.hinzufuegen();\n        this.hinzufuegenBtn.addEventListener(\"click\", this.hinzufuegenClickListener);\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n        this.kontokorrentHinzufuegenActionCreator.nichtGefundenPageGeoeffnet();\n    }\n\n    private async hinzufuegen() {\n        let id = await this.kontokorrentHinzufuegenActionCreator.kontokorrentHinzufuegen(this.oeffentlicherName);\n        if (id) {\n            await this.routingActionCreator.navigateKontokorrentById(id);\n        };\n    }\n\n    private applyStoreState(state: State) {\n        this.notFoundError.style.display = !state.kontokorrents.hinzufuegen && state.kontokorrents.hinzufuegenFailed && state.kontokorrents.hinzufuegenFailed.kontokorrentNotFound ?\n            \"block\" : \"none\";\n        let processing = state.kontokorrents.hinzufuegen || state.account.accountCreating;\n        this.processing.style.display = processing ? \"flex\" : \"none\";\n        this.hinzufuegenBtn.style.display = !processing ? \"inline-flex\" : \"none\";\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n        this.hinzufuegenBtn.removeEventListener(\"click\", this.hinzufuegenClickListener);\n    }\n}\n\ncustomElements.define(\"kontokorrent-nicht-gefunden\", KontokorrentNichtGefunden);\n","// Module\nvar code = \"<app-bar></app-bar> <div class=\\\"kontokorrent-hinzufuegen-section\\\"> Möchtest du den öffentlichen Kontokorrent zur Liste deiner Kontokorrents <strong><span id=\\\"oeffentlicher-name\\\"></span></strong> hinzufügen? </div> <div class=\\\"kontokorrent-hinzufuegen-section\\\"> <div id=\\\"notFoundError\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Kontokorrent wurde nicht gefunden</div> <button class=\\\"button button--raised\\\" id=\\\"hinzufuegen-btn\\\"> hinzufügen </button> </div> <div class=\\\"hinzufuegen__progress\\\" id=\\\"hinzufuegen__progress\\\"> <span class=\\\"spinner\\\"></span> <span>wird hinzugefügt</span> </div>\";\n// Exports\nexport default code;","export class Popup extends HTMLElement {\n    private popupShown: boolean = false;\n    constructor() {\n        super();\n        this.keyListener = this.keyListener.bind(this);\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    connectedCallback() {\n        this.updateStyles();\n    }\n\n    private keyListener(ev: KeyboardEvent) {\n        if (ev.key == \"Escape\") {\n            this.hide();\n        }\n    }\n\n    private clickListener(ev: MouseEvent | TouchEvent) {\n        if (!this.contains(<Element>(event.target))) {\n            this.hide();\n        }\n    }\n\n    public hide() {\n        if (this.popupShown) {\n            document.removeEventListener(\"keydown\", this.keyListener);\n            document.removeEventListener(\"click\", this.clickListener);\n            this.popupShown = false;\n            this.updateStyles();\n        }\n    }\n\n    public show() {\n        if (!this.popupShown) {\n            document.addEventListener(\"keydown\", this.keyListener);\n            document.addEventListener(\"click\", this.clickListener);\n            this.popupShown = true;\n            this.updateStyles();\n        }\n    }\n\n    private updateStyles() {\n        this.style.display = this.popupShown ? \"block\" : \"none\";\n    }\n\n    public toggle() {\n        if (!this.popupShown) {\n            this.show();\n        }\n        else {\n            this.hide();\n\n        }\n    }\n\n    disconnectedCallback() {\n        this.hide();\n    }\n}\ncustomElements.define(\"app-popup\", Popup);\n","import { ApiClient } from \"../../api/ApiClient\";\nimport { KontokorrentInfo } from \"../../api/KontokorrentInfo\";\nimport { NeuerKontokorrentRequest } from \"../../api/NeuerKontokorrentRequest\";\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { Action } from \"../lib/Action\";\nimport { Store } from \"../Store\";\nimport { ActionNames } from \"./ActionNames\";\nimport { v4 as uuid } from \"uuid\";\n\nexport class KontokorrentCreationFailed implements Action {\n    readonly type = ActionNames.KontokorrentCreationFailed;\n    constructor(public exists: boolean) {\n\n    }\n}\n\nexport class KontokorrentCreating implements Action {\n    readonly type = ActionNames.KontokorrentCreating;\n    constructor() {\n\n    }\n}\n\nexport class KontokorrentCreated implements Action {\n    readonly type = ActionNames.KontokorrentCreated;\n    constructor(public kontokorrent: KontokorrentInfo) {\n\n    }\n}\n\nexport class KontokorrentHinzufuegenFailed implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegenFailed;\n    constructor(public notFound: boolean) {\n\n    }\n}\n\nexport class KontokorrentHinzufuegen implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegen;\n    constructor() {\n\n    }\n}\n\nexport class KontokorrentHinzufuegenSuccess implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegenSuccess;\n    constructor(public kontokorrents: KontokorrentInfo[]) {\n\n    }\n}\n\nexport class LoginPageGeoeffnet implements Action {\n    readonly type = ActionNames.LoginPageGeoeffnet;\n    constructor() {\n\n    }\n}\n\nexport class NichtGefundenPageGeoeffnet implements Action {\n    readonly type = ActionNames.NichtGefundenPageGeoeffnet;\n    constructor() {\n\n    }\n}\n\nexport type KontokorrentHinzufuegenActions = KontokorrentCreationFailed\n    | KontokorrentCreating\n    | KontokorrentCreated\n    | KontokorrentHinzufuegenFailed\n    | KontokorrentHinzufuegen\n    | KontokorrentHinzufuegenSuccess\n    | LoginPageGeoeffnet\n    | NichtGefundenPageGeoeffnet;\n\nexport class KontokorrentHinzufuegenActionCreator {\n\n    constructor(private store: Store,\n        private apiClient: ApiClient,\n        private db: KontokorrentDatabase) {\n\n    }\n\n    loginPageGeoeffnet() {\n        this.store.dispatch(new LoginPageGeoeffnet());\n    }\n\n    nichtGefundenPageGeoeffnet() {\n        this.store.dispatch(new NichtGefundenPageGeoeffnet());\n    }\n\n    async kontokorrentErstellen(id: string, name: string, oeffentlicherName: string, personen: string[]) {\n        let request: NeuerKontokorrentRequest = {\n            name,\n            id,\n            oeffentlicherName,\n            personen: personen.map(v => { return { name: v, id: uuid() } })\n        };\n        this.store.dispatch(new KontokorrentCreating());\n        let res = await this.apiClient.neuerKontokorrent(request);\n        if (!res.success) {\n            this.store.dispatch(new KontokorrentCreationFailed(res.exists));\n        }\n        else {\n            await this.db.addKontokorrent({\n                id: id,\n                name: name,\n                personen: request.personen,\n                oeffentlicherName: oeffentlicherName\n            });\n            this.store.dispatch(new KontokorrentCreated({\n                id: id,\n                name: name,\n                personen: request.personen,\n                oeffentlicherName: oeffentlicherName\n            }));\n            return true;\n        }\n        return false;\n    }\n\n    async kontokorrentHinzufuegen(oeffentlicherName: string) {\n        let kk = await this.db.getPerOeffentlichName(oeffentlicherName);\n        if (null != kk) {\n            return kk.id;\n        }\n        this.store.dispatch(new KontokorrentHinzufuegen());\n        try {\n            let res = await this.apiClient.kontokorrentHinzufuegen(oeffentlicherName, null);\n            if (null == res) {\n                this.store.dispatch(new KontokorrentHinzufuegenFailed(true));\n            }\n            else {\n                let newIds = await this.db.setKontokorrents(res.map(v => {\n                    return {\n                        id: v.id,\n                        name: v.name,\n                        personen: v.personen,\n                        oeffentlicherName: v.oeffentlicherName\n                    };\n                }));\n                this.store.dispatch(new KontokorrentHinzufuegenSuccess(res));\n                return newIds[0];\n            }\n        }\n        catch (err) {\n            this.store.dispatch(new KontokorrentHinzufuegenFailed(false));\n        }\n        return false;\n    }\n}\n\nexport function kontokorrentHinzufuegenActionCreatorFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"KontokorrentHinzufuegenActionCreator\",\n        serviceLocator => new KontokorrentHinzufuegenActionCreator(\n            serviceLocator.store,\n            serviceLocator.apiClient,\n            serviceLocator.db\n        ));\n}","export class ArrayToElementRenderer<T, E extends Element, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n    \n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find(i => this.elementToKey.get(el) == getKey(i));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let t of list) {\n            let key = getKey(t);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}"],"names":["KontokorrentSelectListEntry","HTMLElement","constructor","super","rendered","isActive","connectedCallback","this","innerHTML","name","querySelector","link","updateStyle","clickEvent","bind","addEventListener","e","preventDefault","dispatchEvent","CustomEvent","detail","kontokorrent","id","bubbles","disconnectedCallback","removeEventListener","update","innerText","href","oeffentlicherName","classList","toggle","customElements","define","KontokorrentSelectList","list","_kontokorrents","kontokorrentsRenderer","ArrayToElementRenderer","k","li","document","createElement","appendChild","firstChild","_activeKontokorrentId","kontokorrents","sortBy","KontokorrentSelectListTagName","KontokorrentSelect","kontokorrentName","kontokorrentSelectList","addButton","popup","updateAttributes","contains","event","target","stopPropagation","hide","attributeChangedCallback","activeKontokorrentId","getAttribute","updatesStyle","length","activeKontokorrent","find","remove","add","KontokorrentSelectTagName","ShareKontokorrentDisplay","ShareKontokorrentOeffentlicherName","ShareDialog","attributeStore","display","shareDoneButton","backdrop","shareDisplayName","shareOeffentlicherName","shareLinkInput","webShareSection","webShareButton","copyLinkButton","shareCopied","style","visibility","shareDoneListener","shareListener","navigator","share","title","text","url","baseURI","then","copyLinkListener","clipboard","writeText","value","ShareDialogTagName","AppBar","kontokorrentSelect","logoutDialog","menuPopup","shareDialog","shareButton","openMenuButton","store","applyStoreState","state","async","accountActionCreator","logout","openMenuButtonListener","show","dialog","applyStoreStateToShareDialog","querySelectorAll","forEach","ev","routingActionCreator","navigate","navigateLogin","Object","values","setAttribute","disabled","addServices","serviceLocator","subscription","subscribe","AppBarTagName","KontokorrentNichtGefunden","kontokorrentHinzufuegenActionCreator","oeffentlicherKontokorrentLabel","hinzufuegenBtn","notFoundError","processing","appBar","searchParams","URLSearchParams","window","location","search","has","get","toLowerCase","navigateKontokorrentById","hinzufuegenClickListener","hinzufuegen","nichtGefundenPageGeoeffnet","kontokorrentHinzufuegen","hinzufuegenFailed","kontokorrentNotFound","account","accountCreating","Popup","popupShown","keyListener","clickListener","updateStyles","key","KontokorrentCreationFailed","exists","type","KontokorrentCreating","KontokorrentCreated","KontokorrentHinzufuegenFailed","notFound","KontokorrentHinzufuegen","KontokorrentHinzufuegenSuccess","LoginPageGeoeffnet","NichtGefundenPageGeoeffnet","KontokorrentHinzufuegenActionCreator","apiClient","db","loginPageGeoeffnet","dispatch","personen","request","map","v","res","neuerKontokorrent","success","addKontokorrent","kk","getPerOeffentlichName","newIds","setKontokorrents","err","kontokorrentHinzufuegenActionCreatorFactory","listElement","keySelector","keyToElement","Map","elementToKey","WeakMap","updateElement","keyCache","getKey","d","set","x","Array","from","children","el","data","i","removeChild","before","nextKeyToElement","t","childElement","firstElementChild","prepend","nextElementSibling","insertAdjacentElement"],"sourceRoot":""}