"use strict";(self.webpackChunkkontokorrent=self.webpackChunkkontokorrent||[]).push([[9],{7160:function(e,t,n){n.d(t,{W:function(){return p}});var s=n(9773),r=n(2204),i=n(1173),a=n(6029);class o extends HTMLElement{constructor(){super(),this.innerHTML='<a data-ref="link" class="kontokorrent-select-list__entry"> <span data-ref="name"></span> </a>',this.name=this.querySelector('[data-ref="name"]'),this.link=this.querySelector('[data-ref="link"]'),this.clickEvent=this.clickEvent.bind(this)}connectedCallback(){this.link.addEventListener("click",this.clickEvent)}clickEvent(e){e.preventDefault(),this.dispatchEvent(new CustomEvent("gotokontokorrent",{detail:this.kontokorrent.id,bubbles:!0}))}disconnectedCallback(){this.link.removeEventListener("click",this.clickEvent)}update(e,t){this.kontokorrent=e,this.name.innerText=e.name,this.link.href="kontokorrents/".concat(e.id),this.link.classList.toggle("kontokorrent-select-list__entry--active",t)}}customElements.define("kontokorrent-select-list-entry",o);class l extends HTMLElement{constructor(){super(),this.innerHTML='<ol data-ref="list" class="kontokorrent-select-list"> </ol>',this.list=this.querySelector('[data-ref="list"]'),this._kontokorrents=[],this.kontokorrentsRenderer=new a.T(this.list,(e=>e.id),(()=>{let e=document.createElement("li");return e.appendChild(new o),e}))}connectedCallback(){}disconnectedCallback(){}update(){this.kontokorrentsRenderer.update(this._kontokorrents,((e,t)=>{e.firstChild.update(t,this._activeKontokorrentId==t.id)}))}set kontokorrents(e){this._kontokorrents=(0,i.T)(e,(e=>e.name)),this.update()}set activeKontokorrentId(e){this._activeKontokorrentId=e,this.update()}}const h="kontokorrent-select-list";customElements.define(h,l),n(4227);class c extends HTMLElement{constructor(){super(),this.innerHTML='<div class="kontokorrent-select-wrapper"> <div class="kontokorrent-select"> <h1 data-ref="kontokorrent-name" class="kontokorrent-select__name">Kontokorrent</h1> <button class="kontokorrent-select__choose" title="anderen Kontokorrent wählen"> <span class="material-icons"> arrow_drop_down </span> </button> </div> <app-popup class="kontokorrent-select__popup"> <kontokorrent-select-list></kontokorrent-select-list> <div class="kontokorrent-select__buttons"> <button id="add-kontokorrent" class="button">weiteren hinzufügen</button> </div> </app-popup> </div>',this.kontokorrentName=this.querySelector('[data-ref="kontokorrent-name"]'),this.kontokorrentSelectList=this.querySelector(h),this.addButton=this.querySelector("#add-kontokorrent"),this._kontokorrents=null}connectedCallback(){this.popup=this.querySelector("app-popup"),this.updateAttributes(),this.addEventListener("click",(e=>{this.popup.contains(event.target)||(this.popup.toggle(),e.stopPropagation())})),this.addButton.addEventListener("click",(e=>{this.dispatchEvent(new CustomEvent("addkontokorrent"))})),this.kontokorrentSelectList.addEventListener("gotokontokorrent",(()=>{this.popup.hide()}))}disconnectedCallback(){}attributeChangedCallback(){this.updateAttributes()}updateAttributes(){this.activeKontokorrentId=this.getAttribute("active-kontokorrent-id"),this.kontokorrentSelectList.activeKontokorrentId=this.activeKontokorrentId,this.updatesStyle()}static get observedAttributes(){return["active-kontokorrent-id"]}set kontokorrents(e){this.kontokorrentSelectList.kontokorrents=e,this._kontokorrents=e,this.updatesStyle()}updatesStyle(){if(this._kontokorrents&&this._kontokorrents.length){let e=this._kontokorrents.find((e=>e.id==this.activeKontokorrentId));this.kontokorrentName.innerText=e?e.name:"(Kontokorrent wählen)"}}}const d="kontokorrent-select";customElements.define(d,c);var u=n(2887);class b extends HTMLElement{constructor(){super(),this.rendered=!1}connectedCallback(){this.rendered||(this.rendered=!0,this.innerHTML='<header class="app-bar"> <kontokorrent-select class="app-bar__kontokorrent-select"></kontokorrent-select> <nav class="app-bar__links"> <button id="logout-button" class="app-bar__link" title="Logout"> <span class="material-icons"> exit_to_app </span> </button> <a href="info" class="app-bar__link" title="Informationen über diese App"> <span class="material-icons"> info </span> </a> </nav> </header> <app-popup id="logout-dialog"> <div class="dialog__backdrop"></div> <div class="dialog"> <p> Wirklich aus allen Kontokorrents ausloggen? </p> <div class="dialog__button-pane"> <button id="abort-logout" class="button">Abbrechen</button> <button id="confirm-logout" class="button">Ausloggen</button> </div> </div> </app-popup>',this.kontokorrentSelect=this.querySelector(d),this.logoutDialog=this.querySelector("#logout-dialog")),this.querySelector("#logout-button").addEventListener("click",(e=>{this.logoutDialog.toggle(),e.stopPropagation()})),this.querySelector("#confirm-logout").addEventListener("click",(async()=>{await this.accountActionCreator.logout()})),this.querySelector("#abort-logout").addEventListener("click",(()=>{this.logoutDialog.hide()})),(0,r.G)(this.querySelectorAll("a"),this.routingActionCreator),this.subscription=this.store.subscribe(null,(e=>this.applyStoreState(e))),this.applyStoreState(this.store.state),this.kontokorrentSelect.addEventListener("addkontokorrent",(()=>{this.routingActionCreator.navigateLogin()}))}applyStoreState(e){this.kontokorrentSelect.kontokorrents=Object.values(e.kontokorrents.kontokorrents),this.kontokorrentSelect.setAttribute("active-kontokorrent-id",e.kontokorrents.activeKontokorrentId)}addServices(e){this.store=e.store,this.routingActionCreator=(0,s.b)(e),this.accountActionCreator=(0,u.gg)(e)}disconnectedCallback(){this.subscription()}}const p="app-bar";customElements.define(p,b)},3520:function(e,t,n){n.d(t,{x:function(){return r}});const s=new(n(5022).a)('<input type="radio" class="bezahlende-person-radio__input"/> <label class="bezahlende-person-radio"> <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"> <path d="M0 0h24v24H0z" fill="none"/> <path d="M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z"/> </svg> <span data-ref="label"></span> </label>');class r extends HTMLElement{constructor(){super(),this.templateInstance=s.getInstance()}connectedCallback(){this.templateInstance.apply(this)&&(this.input=this.querySelector("input"),this.personLabel=this.querySelector('[data-ref="label"]'),this.label=this.querySelector("label"),this.update())}disconnectedCallback(){}set radioName(e){this._radioName=e}set person(e){this.personName=e.name,this.personId=e.id,this.update()}update(){this.templateInstance.isApplied()&&(this.input.value=this.personId,this.personLabel.innerText=this.personName,this.input.id=this.personId,this.label.setAttribute("for",this.personId),this.input.name=this._radioName)}}customElements.define("bezahlende-person-radio-button",r)},4729:function(e,t,n){n.d(t,{R:function(){return k}}),n(3948),n(5306);var s=n(6029),r=n(3520),i=n(5022);const a=new i.a('<div class="mdc-touch-target-wrapper"> <div class="mdc-checkbox mdc-checkbox--touch"> <input type="checkbox" class="mdc-checkbox__native-control"/> <div class="mdc-checkbox__background"> <svg class="mdc-checkbox__checkmark" viewBox="0 0 24 24"> <path class="mdc-checkbox__checkmark-path" fill="none" d="M1.73,12.91 8.1,19.28 22.79,4.59"/> </svg> <div class="mdc-checkbox__mixedmark"></div> </div> <div class="mdc-checkbox__ripple"></div> </div> </div>'),o="checkbox-id",l="checkbox-name";class h extends HTMLElement{constructor(){super(),this.templateInstance=a.getInstance()}connectedCallback(){this.templateInstance.apply(this)&&(this.nativeControl=this.querySelector(".mdc-checkbox__native-control"),this.updateAttributes())}disconnectedCallback(){}attributeChangedCallback(){this.updateAttributes()}updateAttributes(){this.nativeControl&&(this.nativeControl.id=this.getAttribute(o),this.nativeControl.name=this.getAttribute(l))}static get observedAttributes(){return[o,l]}}customElements.define("mdc-checkbox",h);const c=new i.a("<mdc-checkbox></mdc-checkbox> <label></label>");class d extends HTMLElement{constructor(){super(),this.templateInstance=c.getInstance()}set person(e){this.personName=e.name,this.checkboxId="empfaenger-".concat(e.id)}connectedCallback(){this.templateInstance.apply(this)&&(this.mdcCheckBox=this.querySelector("mdc-checkbox"),this.label=this.querySelector("label"),this.update())}disconnectedCallback(){}update(){this.templateInstance.isApplied()&&(this.label.innerText=this.personName,this.label.setAttribute("for",this.checkboxId),this.mdcCheckBox.setAttribute("checkbox-id",this.checkboxId),this.mdcCheckBox.setAttribute("checkbox-name",this.checkboxId))}}function u(e){var t=new Date(e);return t.setMinutes(e.getMinutes()-e.getTimezoneOffset()),t.toJSON().slice(0,10)}customElements.define("empfaenger-checkbox",d),n(3753);var b=n(443),p=n(3752);class g extends HTMLElement{constructor(){super(),this.validationRequested=!1,this._personen=[],this.vorschlaege=[],this.rendered=!1,this.bezahlungSet=!1}connectedCallback(){this.rendered||(this.rendered=!0,this.innerHTML='<form novalidate class="bezahlung-eintragen-form" id="bezahlung-eintragen-form"> <div id="betreff-missing-error" class="alert alert--error" hidden>Es muss ein <label class="alert__field-label" for="betreff">Betreff</label> angegeben werden.</div> <div id="betrag-invalid-error" class="alert alert--error" hidden> Der <label class="alert__field-label" for="betrag">Betrag</label> ist ungültig.</div> <div id="betrag-missing-error" class="alert alert--error" hidden>Es muss ein <label class="alert__field-label" for="betrag">Betrag</label> angegeben werden.</div> <span id="zahlende-person-missing-error" class="alert alert--error" hidden>Wähle eine Person aus die bezahlt. </span> <div id="empfaenger-missing-error" class="alert alert--error" hidden>Wähle Personen aus für die bezahlt wird. </div> <label for="betrag" class="bezahlung-eintragen-form__label bezahlung-eintragen-form__row">Betrag</label> <input name="betrag" id="betrag" type="number" novalidate step="any"> <label for="zahlende-person" class="bezahlung-eintragen-form__label bezahlung-eintragen-form__row">Diese Person zahlt</label> <div id="zahlende-person-auswahl"></div> <div class="bezahlung-eintragen-form__empfaenger-row"> <label for="empfaenger" class="bezahlung-eintragen-form__label">für diese Personen</label> <mdc-checkbox checkbox-id="alle" checkbox-name="alle" id="alle-check"></mdc-checkbox> <label for="alle">alle</label> </div> <div id="empfaenger-auswahl"></div> <label for="betreff" class="bezahlung-eintragen-form__label bezahlung-eintragen-form__row">Betreff</label> <div id="beschreibung-vorschlaege" class="bezahlung-eintragen-form__vorschlaege"></div> <input name="betreff" id="betreff" required="" autocomplete="off" type="text"> <label for="datum" class="bezahlung-eintragen-form__label bezahlung-eintragen-form__row">Datum</label> <input name="datum" id="datum" required="" type="date"> </form>',this.empfaengerAuswahl=this.querySelector("#empfaenger-auswahl"),this.zahlendePersonRenderer=new s.T(this.querySelector("#zahlende-person-auswahl"),(e=>e.id),(e=>new r.x)),this.empfaengerRenderer=new s.T(this.empfaengerAuswahl,(e=>e.id),(e=>new d)),this.beschreibungVorschlaegeRenderer=new s.T(this.querySelector("#beschreibung-vorschlaege"),(e=>e),(e=>{let t=document.createElement("button");return t.className="bezahlung-eintragen-form__vorschlag",t.innerText=e,t.type="button",t.addEventListener("click",(t=>{this.completeBetreff(e)})),t})),this.datum=this.querySelector("#datum"),this.datum.value=u(new Date),this.betrag=this.querySelector("#betrag"),this.betreff=this.querySelector("#betreff"),this.zahlendePersonMissingError=this.querySelector("#zahlende-person-missing-error"),this.betreffMissingError=this.querySelector("#betreff-missing-error"),this.betragMissingError=this.querySelector("#betrag-missing-error"),this.betragInvalidError=this.querySelector("#betrag-invalid-error"),this.empfaengerMissingError=this.querySelector("#empfaenger-missing-error"),this.form=this.querySelector("#bezahlung-eintragen-form"),this.alleCheck=this.querySelector("#alle-check"),this.update()),this.formInputListener=()=>this.onFormInput(),this.form.addEventListener("input",this.formInputListener),this.betrag.focus(),this.alleClickListener=()=>this.alleClick(),this.alleCheck.addEventListener("input",this.alleClickListener),this.betreffInputListener=()=>{this.dispatchEvent(new CustomEvent("betreffChanged",{detail:this.betreff.value}))},this.betreff.addEventListener("input",this.betreffInputListener),this.betreffKeyDownListener=e=>this.betreffKeyDown(e),this.betreff.addEventListener("keydown",this.betreffKeyDownListener)}betreffKeyDown(e){var t;"Enter"==e.code&&(null===(t=this.vorschlaege)||void 0===t?void 0:t.length)>0&&this.completeBetreff(this.vorschlaege[0])}completeBetreff(e){this.betreff.value=e,this.betreffInputListener(),this.betreff.focus(),this.validateWhileManipulating()}alleClick(){let e=this.form.alle.checked;for(let t of this.empfaengerCheckboxen)t.checked=e}disconnectedCallback(){this.form.removeEventListener("input",this.formInputListener),this.alleCheck.removeEventListener("input",this.alleClickListener),this.betreff.removeEventListener("input",this.betreffInputListener),this.betreff.removeEventListener("keydown",this.betreffKeyDownListener)}onFormInput(){this.validateWhileManipulating()}validate(){if(!this.rendered)return!1;this.validationRequested=!0;let e=this.parseBetrag(),t=e.valid;return this.betragInvalidError.hidden=e.valid||e.empty,this.validateWhileManipulating()&&t}getDatum(){let e=this.datum.valueAsDate;return!e||(0,b.Z)(e,new Date)?new Date:(0,p.Z)(e)}getData(){return this.rendered?{betrag:this.parseBetrag().value,betreff:this.betreff.value,empfaenger:this.selectedEmpfaenger,bezahlendePerson:this.bezahlendePerson.value,datum:this.getDatum()}:null}setData(e){this.bezahlung=e,this.update()}parseBetrag(){this.betrag.setAttribute("type","text");let e=this.betrag.value;if(this.betrag.setAttribute("type","number"),""==e)return{valid:!1,empty:!0};e=e.replace(",","."),e=e.replace(/ /g,"");let t=parseFloat(e);return isNaN(t)?{valid:!1,empty:!1}:{valid:!0,value:t}}get bezahlendePerson(){return this.form["bezahlende-person"]}get empfaengerCheckboxen(){return this._personen.map((e=>this.form["empfaenger-"+e.id]))}get selectedEmpfaenger(){return this._personen.filter((e=>this.form["empfaenger-"+e.id].checked)).map((e=>e.id))}validateWhileManipulating(){let e={betragValid:!!this.betrag.value,betreffValid:!!this.betreff.value,zahlendePersonValid:!!this.bezahlendePerson.value,empfaengerValid:this.selectedEmpfaenger.length>0};return this.betragMissingError.hidden=!this.validationRequested||e.betragValid,this.betreffMissingError.hidden=!this.validationRequested||e.betreffValid,this.zahlendePersonMissingError.hidden=!this.validationRequested||e.zahlendePersonValid,this.empfaengerMissingError.hidden=!this.validationRequested||e.empfaengerValid,!Object.values(e).some((e=>0==e))}set personen(e){this._personen=e,this.update()}set beschreibungVorschlaege(e){this.vorschlaege=e,this.update()}update(){if(this.rendered){if(!this.bezahlungSet&&this.bezahlung){this.bezahlungSet=!0,this.betreff.value=this.bezahlung.beschreibung,this.bezahlendePerson.value=this.bezahlung.bezahlendePersonId;for(let e of this._personen)this.form["empfaenger-"+e.id].checked=!!this.bezahlung.empfaengerIds.find((t=>t==e.id));this.form.alle.checked=!this.empfaengerCheckboxen.some((e=>!e.checked)),this.datum.value=u(this.bezahlung.zeitpunkt),this.betrag.value="".concat(this.bezahlung.wert)}this.zahlendePersonRenderer.update(this._personen,((e,t)=>{e.person=t,e.radioName="bezahlende-person"})),this.empfaengerRenderer.update(this._personen,((e,t)=>{e.person=t})),this.beschreibungVorschlaegeRenderer.update(this.vorschlaege,(()=>{}))}}}const k="bezahlung-eintragen-form";customElements.define(k,g)},2204:function(e,t,n){function s(e,t){e.forEach((e=>{e.addEventListener("click",(n=>{n.preventDefault(),t.navigate(e.getAttribute("href"))}))}))}n.d(t,{G:function(){return s}})},4227:function(e,t,n){class s extends HTMLElement{constructor(){super(),this.popupShown=!1,this.keyListener=this.keyListener.bind(this),this.clickListener=this.clickListener.bind(this)}connectedCallback(){this.updateStyles()}keyListener(e){"Escape"==e.key&&this.hide()}clickListener(e){this.contains(event.target)||this.hide()}hide(){this.popupShown&&(document.removeEventListener("keydown",this.keyListener),document.removeEventListener("click",this.clickListener),this.popupShown=!1,this.updateStyles())}show(){this.popupShown||(document.addEventListener("keydown",this.keyListener),document.addEventListener("click",this.clickListener),this.popupShown=!0,this.updateStyles())}updateStyles(){this.style.display=this.popupShown?"block":"none"}toggle(){this.popupShown?this.hide():this.show()}disconnectedCallback(){this.hide()}}customElements.define("app-popup",s)},8059:function(e,t,n){n.d(t,{G:function(){return r}}),n(3948),n(285);class s{constructor(e){this.store=e}getWorker(){return this.worker||(this.worker=new Worker(new URL(n.p+n.u(837),n.b)),this.worker.addEventListener("message",(e=>{var t;if("statedispatch"==(null===(t=e.data)||void 0===t?void 0:t.type)){let t=e.data.msg;this.store.dispatch(t)}}))),this.worker}getBeschreibungVorschlaege(e,t){let n={kontokorrentId:e,type:1,eingabe:t};this.getWorker().postMessage(n)}resetBeschreibungenCache(){this.getWorker().postMessage({type:2})}kontokorrentOeffnen(e){let t={type:0,kontokorrentId:e};this.getWorker().postMessage(t)}}function r(e){return e.get("WorkerService",(e=>new s(e.store)))}},7426:function(e,t,n){n.d(t,{xN:function(){return z}});var s=n(8843);class r{constructor(e,t){this.apiClient=e,this.db=t}async bezahlungAnlegen(e,t){let n=await this.apiClient.neueBezahlung(e,t);return this.db.addAktionen(e,[n]),n}async bezahlungBearbeiten(e,t){let n=await this.apiClient.bezahlungBearbeiten(e,t);return this.db.addAktionen(e,[n]),n}async bezahlungLoeschen(e,t){let n=await this.apiClient.bezahlungLoeschen(e,t);return this.db.addAktionen(e,[n]),n}}var i=n(886),a=n(5075),o=n(8059);class l{constructor(e){this.kontokorrentId=e,this.type=6}}class h{constructor(e,t,n,s){this.kontokorrentId=e,this.bezahlungId=t,this.bearbeitungsStatus=n,this.bezahlung=s,this.type=28}}class c{constructor(e){this.kontokorrentId=e,this.type=22}}class d{constructor(e,t){this.kontokorrentId=e,this.bezahlung=t,this.type=23}}class u{constructor(e){this.kontokorrentId=e,this.type=24}}class b{constructor(e,t){this.kontokorrentId=e,this.bezahlungId=t,this.type=29}}class p{constructor(e,t,n){this.kontokorrentId=e,this.bearbeiteteBezahlungId=t,this.bezahlung=n,this.type=30}}class g{constructor(e,t){this.kontokorrentId=e,this.bezahlungId=t,this.type=31}}class k{constructor(e,t){this.kontokorrentId=e,this.bezahlungId=t,this.type=32}}class f{constructor(e,t){this.kontokorrentId=e,this.geloeschteBezahlungId=t,this.type=33}}class m{constructor(e,t){this.kontokorrentId=e,this.bezahlungId=t,this.type=34}}class v{constructor(e,t,n,s){this.store=e,this.db=t,this.bezahlungenService=n,this.workerService=s}async bezahlungGeoeffnet(e,t){let n=await this.db.getBearbeitungsStatus(e,t),s=null;if(n.aktion){let e=n.aktion;s={beschreibung:e.bezahlung.beschreibung,bezahlendePersonId:e.bezahlung.bezahlendePersonId,empfaengerIds:e.bezahlung.empfaengerIds,id:e.bezahlung.id,status:a.Z.Gespeichert,wert:e.bezahlung.wert,zeitpunkt:e.bezahlung.zeitpunkt}}this.store.dispatch(new h(e,t,n.status,s)),this.workerService.getBeschreibungVorschlaege(e,s?s.beschreibung:null)}async bezahlungEintragenGeoeffnet(){let e=this.store.state.kontokorrents.activeKontokorrentId||await this.db.getZuletztGesehenerKontokorrentId();this.store.dispatch(new l(e)),this.workerService.getBeschreibungVorschlaege(e,null)}async bezahlungEintragenKontokorrentChanged(e){this.store.dispatch(new l(e)),await this.db.setZuletztGesehenerKontokorrentId(e),this.workerService.getBeschreibungVorschlaege(e,null)}async bezahlungHinzufuegen(e,t){let n=(0,i.Z)();await this.bezahlungPerSyncHinzufuegen(e,n,t)||await this.bezahlungDirektHinzufuegen(e,t,n),this.workerService.resetBeschreibungenCache()}async bezahlungPerSyncHinzufuegen(e,t,n){if(!("serviceWorker"in navigator)||!("SyncManager"in window))return console.log("background sync not supported"),!1;{let r=await navigator.serviceWorker.ready;try{let i={beschreibung:n.betreff,bezahlendePersonId:n.bezahlendePerson,empfaengerIds:n.empfaenger,id:t,wert:n.betrag,zeitpunkt:n.datum,kontokorrentId:e};await this.db.bezahlungZwischenspeichern(i),await r.sync.register(s.D),this.store.dispatch(new d(e,{beschreibung:i.beschreibung,bezahlendePersonId:i.bezahlendePersonId,empfaengerIds:i.empfaengerIds,id:i.id,wert:i.wert,zeitpunkt:i.zeitpunkt,status:a.Z.Zwischengespeichert}))}catch(e){return console.warn("background sync not allowed"),await this.db.zwischengespeicherteBezahlungErledigt(t),!1}}return!0}async bezahlungDirektHinzufuegen(e,t,n=null){let s={beschreibung:t.betreff,bezahlendePersonId:t.bezahlendePerson,empfaengerIds:t.empfaenger,id:n||(0,i.Z)(),wert:t.betrag,zeitpunkt:t.datum};this.store.dispatch(new c(e));try{let t=await this.bezahlungenService.bezahlungAnlegen(e,s);this.store.dispatch(new d(e,{beschreibung:t.bezahlung.beschreibung,bezahlendePersonId:t.bezahlung.bezahlendePersonId,empfaengerIds:t.bezahlung.empfaengerIds,id:t.bezahlung.id,wert:t.bezahlung.wert,zeitpunkt:t.bezahlung.zeitpunkt,status:a.Z.Gespeichert}))}catch(t){throw console.error(t),this.store.dispatch(new u(e)),t}}async bezahlungBearbeiten(e,t,n){let s={beschreibung:n.betreff,bezahlendePersonId:n.bezahlendePerson,empfaengerIds:n.empfaenger,id:t,wert:n.betrag,zeitpunkt:n.datum};this.store.dispatch(new b(e,t));try{let t=await this.bezahlungenService.bezahlungBearbeiten(e,s);this.store.dispatch(new p(e,t.bearbeiteteBezahlungId,{beschreibung:t.bezahlung.beschreibung,bezahlendePersonId:t.bezahlung.bezahlendePersonId,empfaengerIds:t.bezahlung.empfaengerIds,id:t.bezahlung.id,wert:t.bezahlung.wert,zeitpunkt:t.bezahlung.zeitpunkt,status:a.Z.Gespeichert}))}catch(n){throw console.error(n),this.store.dispatch(new g(e,t)),n}this.workerService.resetBeschreibungenCache()}async bezahlungLoeschen(e,t){this.store.dispatch(new k(e,t));try{let n=await this.bezahlungenService.bezahlungLoeschen(e,t);this.store.dispatch(new f(e,n.geloeschteBezahlungId))}catch(n){throw console.error(n),this.store.dispatch(new m(e,t)),n}}getBeschreibungVorschlaege(e,t){this.workerService.getBeschreibungVorschlaege(e,t)}}function z(e){return e.get("BezahlungActionCreator",(e=>new v(e.store,e.db,function(e){return e.get("NeueBezahlungService",(e=>new r(e.apiClient,e.db)))}(e),(0,o.G)(e))))}},6029:function(e,t,n){n.d(t,{T:function(){return s}}),n(3948);class s{constructor(e,t,n){this.listElement=e,this.keySelector=t,this.createElement=n,this.keyToElement=new Map,this.elementToKey=new WeakMap}update(e,t){let n=new Map,s=e=>n.get(e)||(()=>{let t=this.keySelector(e);return n.set(e,t),t})();for(let n of Array.from(this.listElement.children)){let r=n,i=e.find((e=>this.elementToKey.get(r)==s(e)));i?t(r,i):this.listElement.removeChild(r)}let r=null,i=new Map;for(let n of e){let e=s(n),a=this.keyToElement.get(e);a||(a=this.createElement(n),t(a,n),this.elementToKey.set(a,e)),i.set(e,a),null==r&&a!=this.listElement.firstElementChild?this.listElement.prepend(a):null!=r&&r.nextElementSibling!=a&&r.insertAdjacentElement("afterend",a),r=a}this.keyToElement=i}}},5022:function(e,t,n){n.d(t,{a:function(){return s}});class s{constructor(e){this.template=e}_get(){return null==this.instance&&(this.instance=document.createElement("template"),this.instance.innerHTML=this.template),document.importNode(this.instance.content,!0)}getInstance(){return new class{constructor(e){this.r=e,this.applied=!1}apply(e){return!this.applied&&(e.appendChild(this.r._get()),this.applied=!0,!0)}isApplied(){return this.applied}}(this)}}}}]);
//# sourceMappingURL=682a7d0e4be943c91024.bundle.js.map