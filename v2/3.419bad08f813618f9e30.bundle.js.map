{"version":3,"sources":["webpack:///./src/components/convertLinks.ts","webpack:///./src/components/ui-components/popup/popup.ts","webpack:///./src/state/actions/KontokorrentHinzufuegenActionCreator.ts","webpack:///./src/components/Login/Login.html","webpack:///./src/components/ui-components/tip-button/tip-button.ts","webpack:///./src/components/Login/Login.ts"],"names":["convertLinks","elements","routingActionCreator","forEach","e","addEventListener","ev","preventDefault","navigate","getAttribute","Popup","HTMLElement","super","popupShown","this","keyListener","bind","clickListener","updateStyles","key","hide","contains","event","document","removeEventListener","style","display","show","customElements","define","KontokorrentCreationFailed","exists","type","KontokorrentCreating","KontokorrentCreated","kontokorrent","KontokorrentHinzufuegenFailed","notFound","KontokorrentHinzufuegen","KontokorrentHinzufuegenSuccess","kontokorrents","LoginPageGeoeffnet","KontokorrentHinzufuegenActionCreator","store","apiClient","db","dispatch","id","name","oeffentlicherName","personen","request","map","v","res","neuerKontokorrent","success","addKontokorrent","kk","getPerOeffentlichName","kontokorrentHinzufuegen","newIds","setKontokorrents","kontokorrentHinzufuegenActionCreatorFactory","serviceLocator","get","module","exports","TipButton","updateAttributes","popupId","querySelector","toggle","stopPropagation","innerHTML","accountActionCreator","kontokorrentHinzufuegenActionCreator","querySelectorAll","eventInput","loginButton","homeButton","loginBox","eventMissingError","accountCreationFailed","notFoundError","processing","loginFuerEvent","subscription","subscribe","state","applyStoreState","initializeAccount","loginPageGeoeffnet","value","ensureAccount","navigateKontokorrent","account","accountCreating","hinzufuegen","hinzufuegenFailed","kontokorrentNotFound","visibility","accountCreated","Object","keys","length"],"mappings":"qFAEO,SAASA,EAAaC,EAAoEC,GAC7FD,EAASE,QAASC,IACdA,EAAEC,iBAAiB,QAASC,IACxBA,EAAGC,iBACHL,EAAqBM,SAASJ,EAAEK,aAAa,aAJzD,mC,gCCFO,MAAMC,UAAcC,YAEvB,cACIC,QAFI,KAAAC,YAAsB,EAG1BC,KAAKC,YAAcD,KAAKC,YAAYC,KAAKF,MACzCA,KAAKG,cAAgBH,KAAKG,cAAcD,KAAKF,MAGjD,oBACIA,KAAKI,eAGD,YAAYZ,GACF,UAAVA,EAAGa,KACHL,KAAKM,OAIL,cAAcd,GACbQ,KAAKO,SAAmBC,MAAY,SACrCR,KAAKM,OAIN,OACCN,KAAKD,aACLU,SAASC,oBAAoB,UAAWV,KAAKC,aAC7CQ,SAASC,oBAAoB,QAASV,KAAKG,eAC3CH,KAAKD,YAAa,EAClBC,KAAKI,gBAIN,OACEJ,KAAKD,aACNU,SAASlB,iBAAiB,UAAWS,KAAKC,aAC1CQ,SAASlB,iBAAiB,QAASS,KAAKG,eACxCH,KAAKD,YAAa,EAClBC,KAAKI,gBAIL,eACJJ,KAAKW,MAAMC,QAAUZ,KAAKD,WAAa,QAAU,OAG9C,SACEC,KAAKD,WAINC,KAAKM,OAHLN,KAAKa,OAQb,uBACIb,KAAKM,QAGbQ,eAAeC,OAAO,YAAanB,I,oXClD5B,MAAMoB,EAET,YAAmBC,GAAA,KAAAA,SADV,KAAAC,KAAO,GAMb,MAAMC,EAET,cADS,KAAAD,KAAO,GAMb,MAAME,EAET,YAAmBC,GAAA,KAAAA,eADV,KAAAH,KAAO,IAMb,MAAMI,EAET,YAAmBC,GAAA,KAAAA,WADV,KAAAL,KAAO,GAMb,MAAMM,EAET,cADS,KAAAN,KAAO,IAMb,MAAMO,EAET,YAAmBC,GAAA,KAAAA,gBADV,KAAAR,KAAO,IAMb,MAAMS,EAET,cADS,KAAAT,KAAO,IAcb,MAAMU,EAET,YAAoBC,EACRC,EACAC,GAFQ,KAAAF,QACR,KAAAC,YACA,KAAAC,KAIZ,qBACI/B,KAAK6B,MAAMG,SAAS,IAAIL,GAGtB,sBAAsBM,EAAYC,EAAcC,EAA2BC,G,yCAC7E,IAAIC,EAAoC,CACpCH,OACAD,KACAE,oBACAC,SAAUA,EAASE,IAAIC,IAAc,CAAEL,KAAMK,EAAGN,GAAI,kBAExDjC,KAAK6B,MAAMG,SAAS,IAAIb,GACxB,IAAIqB,QAAYxC,KAAK8B,UAAUW,kBAAkBJ,GACjD,OAAKG,EAAIE,eAIC1C,KAAK+B,GAAGY,gBAAgB,CAC1BV,GAAIA,EACJC,KAAMA,EACNE,SAAUC,EAAQD,SAClBD,kBAAmBA,IAEvBnC,KAAK6B,MAAMG,SAAS,IAAIZ,EAAoB,CACxCa,GAAIA,EACJC,KAAMA,EACNE,SAAUC,EAAQD,SAClBD,kBAAmBA,MAEhB,IAfPnC,KAAK6B,MAAMG,SAAS,IAAIhB,EAA2BwB,EAAIvB,UAiBpD,MAGL,wBAAwBkB,G,yCAC1B,IAAIS,QAAW5C,KAAK+B,GAAGc,sBAAsBV,GAC7C,GAAI,MAAQS,EACR,OAAOA,EAAGX,GAEdjC,KAAK6B,MAAMG,SAAS,IAAIR,GACxB,IACI,IAAIgB,QAAYxC,KAAK8B,UAAUgB,wBAAwBX,EAAmB,MAC1E,GAAI,MAAQK,EAGP,CACD,IAAIO,QAAe/C,KAAK+B,GAAGiB,iBAAiBR,EAAIF,IAAIC,IACzC,CACHN,GAAIM,EAAEN,GACNC,KAAMK,EAAEL,KACRE,SAAUG,EAAEH,SACZD,kBAAmBI,EAAEJ,sBAI7B,OADAnC,KAAK6B,MAAMG,SAAS,IAAIP,EAA+Be,IAChDO,EAAO,GAZd/C,KAAK6B,MAAMG,SAAS,IAAIV,GAA8B,IAe9D,SACItB,KAAK6B,MAAMG,SAAS,IAAIV,GAA8B,IAE1D,OAAO,MAIR,SAAS2B,EAA4CC,GACxD,OAAOA,EAAeC,IAAI,uCACtBD,GAAkB,IAAItB,EAClBsB,EAAerB,MACfqB,EAAepB,UACfoB,EAAenB,O,iBC9I3BqB,EAAOC,QAFI,u5C,yJCGJ,MAAMC,UAAkBzD,YAE3B,cACIC,QACAE,KAAKG,cAAgBH,KAAKG,cAAcD,KAAKF,MAGjD,2BACIA,KAAKuD,mBAGD,mBACJvD,KAAKwD,QAAUxD,KAAKL,aAdI,YAkB5B,gCACI,MAAO,CAnBiB,YAsB5B,oBACIK,KAAKT,iBAAiB,QAASS,KAAKG,eAGhC,cAAcX,GACCiB,SAASgD,cAAc,IAAIzD,KAAKwD,SAC7CE,SACNlE,EAAGmE,kBAIP,uBACI3D,KAAKU,oBAAoB,QAASV,KAAKG,gBAG/CW,eAAeC,OAAO,aAAcuC,G,kTC3B7B,MAAM,UAAczD,YAevB,cACIC,QACAE,KAAK4D,UAAY,IAGrB,YAAYV,GACRlD,KAAK6B,MAAQqB,EAAerB,MAC5B7B,KAAKZ,qBAAuB,YAA4B8D,GACxDlD,KAAK6D,qBAAuB,YAA4BX,GACxDlD,KAAK8D,qCAAuC,YAA4CZ,GAG5F,oBAEI,OAAAhE,EAAA,GADcc,KACO+D,iBAAiB,KAAM/D,KAAKZ,sBACjDY,KAAKgE,WAFShE,KAEYyD,cAAc,eACxCzD,KAAKiE,YAHSjE,KAGayD,cAAc,gBACzCzD,KAAKkE,WAJSlE,KAIYyD,cAAc,gBACxCzD,KAAKmE,SALSnE,KAKUyD,cAAc,cACtCzD,KAAKoE,kBANSpE,KAMmByD,cAAc,sBAC/CzD,KAAKqE,sBAPSrE,KAOuByD,cAAc,4BACnDzD,KAAKsE,cARStE,KAQeyD,cAAc,kBAC3CzD,KAAKuE,WATSvE,KASYyD,cAAc,eAExCzD,KAAKiE,YAAY1E,iBAAiB,QAASS,KAAKwE,eAAetE,KAAKF,OAEpEA,KAAKyE,aAAezE,KAAK6B,MAAM6C,UAAU,KAAMC,GAAS3E,KAAK4E,gBAAgBD,IAC7E3E,KAAK4E,gBAAgB5E,KAAK6B,MAAM8C,OAChC3E,KAAK6D,qBAAqBgB,oBAC1B7E,KAAK8D,qCAAqCgB,qBAGxC,iB,yCACF,IAAItE,EAAQR,KAAKgE,WAAWe,MAE5B,GADA/E,KAAKoE,kBAAkBzD,MAAMC,QAAUJ,EAAQ,OAAS,QACpDA,UACUR,KAAK6D,qBAAqBmB,iBAAiB,CACjD,IAAI/C,QAAWjC,KAAK8D,qCAAqChB,wBAAwBtC,GAC7EyB,GACAjC,KAAKZ,qBAAqB6F,qBAAqBhD,OAMvD,gBAAgB0C,GACpB3E,KAAKqE,sBAAsB1D,MAAMC,SAAW+D,EAAMO,QAAQC,iBAAmBR,EAAMO,QAAQb,sBACvF,QAAU,OACdrE,KAAKsE,cAAc3D,MAAMC,SAAW+D,EAAMjD,cAAc0D,aAAeT,EAAMjD,cAAc2D,mBAAqBV,EAAMjD,cAAc2D,kBAAkBC,qBAClJ,QAAU,OACd,IAAIf,EAAaI,EAAMjD,cAAc0D,aAAeT,EAAMO,QAAQC,gBAClEnF,KAAKuE,WAAW5D,MAAMC,QAAU2D,EAAa,OAAS,OACtDvE,KAAKkE,WAAWvD,MAAM4E,WAAaZ,EAAMO,QAAQM,gBAC7CC,OAAOC,KAAKf,EAAMjD,cAAcA,eAAeiE,OAAS,UAAY,SACxE3F,KAAKiE,YAAYtD,MAAMC,QAAW2D,EAA6B,OAAhB,cAGnD,uBAEIvE,KAAKyE,gBAIb3D,eAAeC,OAAO,YAAa","file":"3.419bad08f813618f9e30.bundle.js","sourcesContent":["import { RoutingActionCreator } from \"../state/actions/RoutingActionCreator\";\n\nexport function convertLinks(elements: Array<HTMLAnchorElement> | NodeListOf<HTMLAnchorElement>, routingActionCreator: RoutingActionCreator) {\n    elements.forEach((e: HTMLAnchorElement) => {\n        e.addEventListener(\"click\", ev => {\n            ev.preventDefault();\n            routingActionCreator.navigate(e.getAttribute(\"href\"));\n        });\n    });\n}","export class Popup extends HTMLElement {\n    private popupShown: boolean = false;\n    constructor() {\n        super();\n        this.keyListener = this.keyListener.bind(this);\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    connectedCallback() {\n        this.updateStyles();\n    }\n\n    private keyListener(ev: KeyboardEvent) {\n        if (ev.key == \"Escape\") {\n            this.hide();\n        }\n    }\n\n    private clickListener(ev: MouseEvent | TouchEvent) {\n        if (!this.contains(<Element>(event.target))) {\n            this.hide();\n        }\n    }\n\n    public hide() {\n        if (this.popupShown) {\n            document.removeEventListener(\"keydown\", this.keyListener);\n            document.removeEventListener(\"click\", this.clickListener);\n            this.popupShown = false;\n            this.updateStyles();\n        }\n    }\n\n    public show() {\n        if (!this.popupShown) {\n            document.addEventListener(\"keydown\", this.keyListener);\n            document.addEventListener(\"click\", this.clickListener);\n            this.popupShown = true;\n            this.updateStyles();\n        }\n    }\n\n    private updateStyles() {\n        this.style.display = this.popupShown ? \"block\" : \"none\";\n    }\n\n    public toggle() {\n        if (!this.popupShown) {\n            this.show();\n        }\n        else {\n            this.hide();\n\n        }\n    }\n\n    disconnectedCallback() {\n        this.hide();\n    }\n}\ncustomElements.define(\"app-popup\", Popup);\n","import { ApiClient } from \"../../api/ApiClient\";\nimport { KontokorrentInfo } from \"../../api/KontokorrentInfo\";\nimport { NeuerKontokorrentRequest } from \"../../api/NeuerKontokorrentRequest\";\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { Action } from \"../lib/Action\";\nimport { Store } from \"../Store\";\nimport { ActionNames } from \"./ActionNames\";\nimport { v4 as uuid } from \"uuid\";\n\nexport class KontokorrentCreationFailed implements Action {\n    readonly type = ActionNames.KontokorrentCreationFailed;\n    constructor(public exists: boolean) {\n\n    }\n}\n\nexport class KontokorrentCreating implements Action {\n    readonly type = ActionNames.KontokorrentCreating;\n    constructor() {\n\n    }\n}\n\nexport class KontokorrentCreated implements Action {\n    readonly type = ActionNames.KontokorrentCreated;\n    constructor(public kontokorrent: KontokorrentInfo) {\n\n    }\n}\n\nexport class KontokorrentHinzufuegenFailed implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegenFailed;\n    constructor(public notFound: boolean) {\n\n    }\n}\n\nexport class KontokorrentHinzufuegen implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegen;\n    constructor() {\n\n    }\n}\n\nexport class KontokorrentHinzufuegenSuccess implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegenSuccess;\n    constructor(public kontokorrents: KontokorrentInfo[]) {\n\n    }\n}\n\nexport class LoginPageGeoeffnet implements Action {\n    readonly type = ActionNames.LoginPageGeoeffnet;\n    constructor() {\n\n    }\n}\n\nexport type KontokorrentHinzufuegenActions = KontokorrentCreationFailed\n    | KontokorrentCreating\n    | KontokorrentCreated\n    | KontokorrentHinzufuegenFailed\n    | KontokorrentHinzufuegen\n    | KontokorrentHinzufuegenSuccess\n    | LoginPageGeoeffnet;\n\nexport class KontokorrentHinzufuegenActionCreator {\n\n    constructor(private store: Store,\n        private apiClient: ApiClient,\n        private db: KontokorrentDatabase) {\n\n    }\n\n    loginPageGeoeffnet() {\n        this.store.dispatch(new LoginPageGeoeffnet());\n    }\n\n    async kontokorrentErstellen(id: string, name: string, oeffentlicherName: string, personen: string[]) {\n        let request: NeuerKontokorrentRequest = {\n            name,\n            id,\n            oeffentlicherName,\n            personen: personen.map(v => { return { name: v, id: uuid() } })\n        };\n        this.store.dispatch(new KontokorrentCreating());\n        let res = await this.apiClient.neuerKontokorrent(request);\n        if (!res.success) {\n            this.store.dispatch(new KontokorrentCreationFailed(res.exists));\n        }\n        else {\n            await this.db.addKontokorrent({\n                id: id,\n                name: name,\n                personen: request.personen,\n                oeffentlicherName: oeffentlicherName\n            });\n            this.store.dispatch(new KontokorrentCreated({\n                id: id,\n                name: name,\n                personen: request.personen,\n                oeffentlicherName: oeffentlicherName\n            }));\n            return true;\n        }\n        return false;\n    }\n\n    async kontokorrentHinzufuegen(oeffentlicherName: string) {\n        let kk = await this.db.getPerOeffentlichName(oeffentlicherName);\n        if (null != kk) {\n            return kk.id;\n        }\n        this.store.dispatch(new KontokorrentHinzufuegen());\n        try {\n            let res = await this.apiClient.kontokorrentHinzufuegen(oeffentlicherName, null);\n            if (null == res) {\n                this.store.dispatch(new KontokorrentHinzufuegenFailed(true));\n            }\n            else {\n                let newIds = await this.db.setKontokorrents(res.map(v => {\n                    return {\n                        id: v.id,\n                        name: v.name,\n                        personen: v.personen,\n                        oeffentlicherName: v.oeffentlicherName\n                    };\n                }));\n                this.store.dispatch(new KontokorrentHinzufuegenSuccess(res));\n                return newIds[0];\n            }\n        }\n        catch {\n            this.store.dispatch(new KontokorrentHinzufuegenFailed(false));\n        }\n        return false;\n    }\n}\n\nexport function kontokorrentHinzufuegenActionCreatorFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"KontokorrentHinzufuegenActionCreator\",\n        serviceLocator => new KontokorrentHinzufuegenActionCreator(\n            serviceLocator.store,\n            serviceLocator.apiClient,\n            serviceLocator.db\n        ));\n}","// Module\nvar code = \"<div class=\\\"login-error-box\\\"> <div id=\\\"eventMissingError\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Kontokorrentnamen eingeben</div> <div id=\\\"notFoundError\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Kontokorrent wurde nicht gefunden</div> <div id=\\\"account-creation-failed\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Account konnte nicht erstellt werden</div> </div> <div class=\\\"login-box\\\" id=\\\"login-box\\\"> <div class=\\\"login-box__event-input\\\"> <input type=\\\"text\\\" id=\\\"eventInput\\\" placeholder=\\\"Kontokorrentname\\\"> <tip-button popup-id=\\\"oeffentlicherNameExplainer\\\" title=\\\"öffentlicher Name Erklärung\\\"> <span class=\\\"material-icons\\\"> info </span> </tip-button> <app-popup id=\\\"oeffentlicherNameExplainer\\\" class=\\\"tip tip--with-input\\\"> Gib hier den Namen des öffentlichen Kontokorrents ein. <ul> <li>frag die anderen Event-/Gruppen- Teilnehmer nach dem Namen</li> <li>such in eurem Chat</li> <li>oder lass dir einen Einladungslink schicken</li> </ul> </app-popup> </div> <div> <button id=\\\"loginButton\\\" class=\\\"button button--raised login-box__login-button\\\"> Login </button> <div id=\\\"processing\\\" class=\\\"login-box__processing\\\" style=\\\"display:none\\\"> <span class=\\\"spinner\\\"></span> </div> </div> <a id=\\\"createEventButton\\\" class=\\\"button\\\" href=\\\"create-event\\\"> <span class=\\\"material-icons\\\"> add </span> Gruppe erstellen </a> <a id=\\\"home-button\\\" class=\\\"button\\\" href=\\\"\\\"> <span class=\\\"material-icons\\\"> home </span> zurück </a> </div>\";\n// Exports\nmodule.exports = code;","import { Popup } from \"../popup/popup\";\n\nexport const PopupIdAttribute = \"popup-id\";\n\nexport class TipButton extends HTMLElement {\n    private popupId: string;\n    constructor() {\n        super();\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.popupId = this.getAttribute(PopupIdAttribute);\n\n    }\n\n    static get observedAttributes() {\n        return [PopupIdAttribute];\n    }\n\n    connectedCallback() {\n        this.addEventListener(\"click\", this.clickListener);\n    }\n\n    private clickListener(ev: MouseEvent) {\n        let popup: Popup = document.querySelector(`#${this.popupId}`);\n        popup.toggle();\n        ev.stopPropagation();\n    }\n\n\n    disconnectedCallback() {\n        this.removeEventListener(\"click\", this.clickListener);\n    }\n}\ncustomElements.define(\"tip-button\", TipButton);\n","import template from \"./Login.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\nimport { AccountActionCreator, accountActionCreatorFactory } from \"../../state/actions/AccountActionCreator\";\nimport \"./Login.scss\";\nimport \"../ui-components/popup/popup\";\nimport \"../ui-components/tip-button/tip-button\";\nimport { KontokorrentHinzufuegenActionCreator, kontokorrentHinzufuegenActionCreatorFactory } from \"../../state/actions/KontokorrentHinzufuegenActionCreator\";\n\nexport class Login extends HTMLElement {\n    store: Store;\n    subscription: () => void;\n    routingActionCreator: RoutingActionCreator;\n    private accountActionCreator: AccountActionCreator;\n    private eventInput: HTMLInputElement;\n    private loginButton: HTMLButtonElement;\n    private eventMissingError: HTMLDivElement;\n    private accountCreationFailed: HTMLDivElement;\n    private notFoundError: HTMLDivElement;\n    private kontokorrentHinzufuegenActionCreator: KontokorrentHinzufuegenActionCreator;\n    private processing: HTMLDivElement;\n    private homeButton: HTMLButtonElement;\n    private loginBox: HTMLDivElement;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.accountActionCreator = accountActionCreatorFactory(serviceLocator);\n        this.kontokorrentHinzufuegenActionCreator = kontokorrentHinzufuegenActionCreatorFactory(serviceLocator);\n    }\n\n    connectedCallback() {\n        let element = this;\n        convertLinks(element.querySelectorAll(\"a\"), this.routingActionCreator);\n        this.eventInput = element.querySelector(\"#eventInput\");\n        this.loginButton = element.querySelector(\"#loginButton\");\n        this.homeButton = element.querySelector(\"#home-button\");\n        this.loginBox = element.querySelector(\"#login-box\");\n        this.eventMissingError = element.querySelector(\"#eventMissingError\");\n        this.accountCreationFailed = element.querySelector(\"#account-creation-failed\");\n        this.notFoundError = element.querySelector(\"#notFoundError\");\n        this.processing = element.querySelector(\"#processing\");\n\n        this.loginButton.addEventListener(\"click\", this.loginFuerEvent.bind(this));\n\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n        this.accountActionCreator.initializeAccount();\n        this.kontokorrentHinzufuegenActionCreator.loginPageGeoeffnet();\n    }\n\n    async loginFuerEvent() {\n        let event = this.eventInput.value;\n        this.eventMissingError.style.display = event ? \"none\" : \"block\";\n        if (event) {\n            if (await this.accountActionCreator.ensureAccount()) {\n                let id = await this.kontokorrentHinzufuegenActionCreator.kontokorrentHinzufuegen(event);\n                if (id) {\n                    this.routingActionCreator.navigateKontokorrent(id);\n                };\n            }\n        }\n    }\n\n    private applyStoreState(state: State) {\n        this.accountCreationFailed.style.display = !state.account.accountCreating && state.account.accountCreationFailed ?\n            \"block\" : \"none\";\n        this.notFoundError.style.display = !state.kontokorrents.hinzufuegen && state.kontokorrents.hinzufuegenFailed && state.kontokorrents.hinzufuegenFailed.kontokorrentNotFound ?\n            \"block\" : \"none\";\n        let processing = state.kontokorrents.hinzufuegen || state.account.accountCreating;\n        this.processing.style.display = processing ? \"flex\" : \"none\";\n        this.homeButton.style.visibility = state.account.accountCreated &&\n            Object.keys(state.kontokorrents.kontokorrents).length ? \"visible\" : \"hidden\";\n        this.loginButton.style.display = !processing ? \"inline-flex\" : \"none\";\n    }\n\n    disconnectedCallback() {\n\n        this.subscription();\n    }\n}\n\ncustomElements.define('app-login', Login);"],"sourceRoot":""}