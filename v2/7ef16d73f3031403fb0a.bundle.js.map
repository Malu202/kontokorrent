{"version":3,"sources":["webpack://kontokorrent/./src/components/PersonenListe/PersonenListenEintrag.ts","webpack://kontokorrent/./src/components/PersonenListe/PersonenListe.ts","webpack://kontokorrent/./src/components/CreateKontokorrent/CreateKontokorrent.ts","webpack://kontokorrent/./src/components/convertLinks.ts","webpack://kontokorrent/./src/components/ui-components/popup/popup.ts","webpack://kontokorrent/./src/components/ui-components/tip-button/tip-button.ts","webpack://kontokorrent/./src/state/actions/KontokorrentHinzufuegenActionCreator.ts","webpack://kontokorrent/./src/components/CreateKontokorrent/CreateKontokorrent.html","webpack://kontokorrent/./src/components/PersonenListe/PersonenListe.html","webpack://kontokorrent/./src/components/PersonenListe/PersonenListenEintrag.html"],"names":["PersonenListenEintrag","HTMLElement","super","this","innerHTML","removeButton","querySelector","nameInput","addEventListener","dispatchEvent","Event","CustomEvent","value","PersonenListenEintragTagName","customElements","define","PersonenListe","names","personenListe","querySelectorAll","forEach","v","push","name","addPersonButton","li","document","createElement","e","appendChild","removeChild","CreateKontokorrent","kontokorrentId","oeffentlicherNameManuell","serviceLocator","store","routingActionCreator","accountActionCreator","kontokorrentHinzufuegenActionCreator","element","emptyNameError","eventCreateError","personCountError","eventNameError","createButton","eventName","creating","oeffentlicherName","oeffentlich","oeffentlichBox","oeffentlicherNameError","eventNameDuplicate","accountCreationFailed","personNameDuplicateError","createEvent","bind","style","display","checked","toLowerCase","subscription","subscribe","state","applyStoreState","convertLinks","personNames","personen","personCountOk","length","personNameError","some","test","item","index","indexOf","ensureAccount","kontokorrentErstellen","navigateKontokorrent","kontokorrents","account","accountCreating","creationFailed","exists","elements","ev","preventDefault","navigate","getAttribute","Popup","popupShown","keyListener","clickListener","updateStyles","key","hide","contains","event","target","removeEventListener","show","PopupIdAttribute","TipButton","updateAttributes","popupId","toggle","stopPropagation","KontokorrentCreationFailed","type","KontokorrentCreating","KontokorrentCreated","kontokorrent","KontokorrentHinzufuegenFailed","notFound","KontokorrentHinzufuegen","KontokorrentHinzufuegenSuccess","LoginPageGeoeffnet","KontokorrentHinzufuegenActionCreator","apiClient","db","dispatch","id","request","map","res","neuerKontokorrent","success","addKontokorrent","kk","getPerOeffentlichName","kontokorrentHinzufuegen","newIds","setKontokorrents","err","kontokorrentHinzufuegenActionCreatorFactory","get","module","exports"],"mappings":"wPAEM,MAAOA,UAA8BC,YAIvC,cACIC,QACAC,KAAKC,UAAY,IAGrB,oBAEID,KAAKE,aADSF,KACcG,cAAc,WAC1CH,KAAKI,UAFSJ,KAEWG,cAAc,SACvCH,KAAKI,UAAUC,iBAAiB,UAAU,KACtCL,KAAKM,cAAc,IAAIC,MAAM,cAEjCP,KAAKE,aAAaG,iBAAiB,SAAS,KACxCL,KAAKM,cAAc,IAAIE,YAAY,gBAI3C,WACI,OAAOR,KAAKI,UAAUK,MAG1B,yBAKG,MAAMC,EAA+B,8BAC5CC,eAAeC,OAAOF,EAA8Bb,GC9B9C,MAAOgB,UAAsBf,YAI/B,cACIC,QACAC,KAAKC,UAAY,IAGrB,eACI,IAAIa,EAAkB,GAEtB,OADAd,KAAKe,cAAcC,iBAAiBN,GAA8BO,SAASC,GAA6BJ,EAAMK,KAAKD,EAAEE,QAC9GN,EAGX,oBAEId,KAAKqB,gBADSrB,KACiBG,cAAc,eAC7CH,KAAKe,cAFSf,KAEeG,cAAc,mBAC3CH,KAAKqB,gBAAgBhB,iBAAiB,SAAS,KAC3C,IAAIiB,EAAKC,SAASC,cAAc,MAC5BC,EAAI,IAAI5B,EACZyB,EAAGI,YAAYD,GACfzB,KAAKe,cAAcW,YAAYJ,GAC/BG,EAAEpB,iBAAiB,YAAY,KAC3BL,KAAKe,cAAcY,YAAYL,SAK3C,yBAMJX,eAAeC,OAAO,qBAAsBC,G,mDCvBtC,MAAOe,UAA2B9B,YA0BpC,cACIC,QACAC,KAAKC,UAAY,IACjBD,KAAK6B,gBAAiB,SACtB7B,KAAK8B,0BAA2B,EAGpC,YAAYC,GACR/B,KAAKgC,MAAQD,EAAeC,MAC5BhC,KAAKiC,sBAAuB,OAA4BF,GACxD/B,KAAKkC,sBAAuB,QAA4BH,GACxD/B,KAAKmC,sCAAuC,QAA4CJ,GAG5F,oBACI,IAAIK,EAAUpC,KACdA,KAAKe,cAAgBqB,EAAQjC,cAAc,mBAC3CH,KAAKqC,eAAiBD,EAAQjC,cAAc,qBAC5CH,KAAKsC,iBAAmBF,EAAQjC,cAAc,uBAC9CH,KAAKuC,iBAAmBH,EAAQjC,cAAc,uBAC9CH,KAAKwC,eAAiBJ,EAAQjC,cAAc,qBAC5CH,KAAKyC,aAAeL,EAAQjC,cAAc,kBAC1CH,KAAK0C,UAAYN,EAAQjC,cAAc,eACvCH,KAAK2C,SAAWP,EAAQjC,cAAc,aACtCH,KAAK4C,kBAAoBR,EAAQjC,cAAc,uBAC/CH,KAAK6C,YAAcT,EAAQjC,cAAc,gBACzCH,KAAK8C,eAAiBV,EAAQjC,cAAc,oBAC5CH,KAAK+C,uBAAyBX,EAAQjC,cAAc,6BACpDH,KAAKgD,mBAAqBZ,EAAQjC,cAAc,yBAChDH,KAAKiD,sBAAwBb,EAAQjC,cAAc,4BACnDH,KAAKkD,yBAA2Bd,EAAQjC,cAAc,gCAGtDH,KAAKyC,aAAapC,iBAAiB,QAASL,KAAKmD,YAAYC,KAAKpD,OAElEA,KAAK6C,YAAYxC,iBAAiB,UAAU,KACxCL,KAAK8C,eAAeO,MAAMC,QAAUtD,KAAK6C,YAAYU,QAAU,QAAU,UAG7EvD,KAAK0C,UAAUrC,iBAAiB,UAAU,KACjCL,KAAK8B,2BACN9B,KAAK4C,kBAAkBnC,OAAST,KAAK0C,UAAUjC,OAAS,IAAI+C,kBAIpExD,KAAK4C,kBAAkBvC,iBAAiB,UAAU,KAC9CL,KAAK8B,0BAA2B,KAGpC9B,KAAKyD,aAAezD,KAAKgC,MAAM0B,UAAU,MAAMC,GAAS3D,KAAK4D,gBAAgBD,KAC7E3D,KAAK4D,gBAAgB5D,KAAKgC,MAAM2B,QAChC,EAAAE,EAAA,GAAazB,EAAQpB,iBAAiB,KAAMhB,KAAKiC,sBAGrD,oBACI,IAAIS,EAAY1C,KAAK0C,UAAUjC,MAC3BqD,EAAc9D,KAAKe,cAAcgD,SACrC/D,KAAKwC,eAAea,MAAMC,QAAUZ,EAAY,OAAS,QACzD,IAAIsB,EAAgBF,EAAYG,QAAU,EAC1CjE,KAAKuC,iBAAiBc,MAAMC,QAAUU,EAAgB,OAAS,QAC/D,IAAIE,EAAkBJ,EAAYK,MAAKjD,IAAMA,IAC7ClB,KAAKqC,eAAegB,MAAMC,QAAUY,EAAkB,QAAU,OAChE,IAAInB,EAAyB/C,KAAK6C,YAAYU,WAAavD,KAAK4C,kBAAkBnC,QAAU,cAAc2D,KAAKpE,KAAK4C,kBAAkBnC,QACtIT,KAAK+C,uBAAuBM,MAAMC,QAAUP,EAAyB,QAAU,OAC/E,IAAIG,EAA4BY,EAAYK,MAAK,CAACE,EAAMC,IAAUR,EAAYS,QAAQF,IAASC,IAC/FtE,KAAKkD,yBAAyBG,MAAMC,QAAUJ,EAA2B,QAAU,QAC/ER,IAAasB,GAAkBE,GAAoBnB,GAA2BG,SACpElD,KAAKkC,qBAAqBsC,uBACtBxE,KAAKmC,qCAAqCsC,sBAAsBzE,KAAK6B,eAAgB7B,KAAK0C,UAAUjC,MAAOT,KAAK6C,YAAYU,QAAUvD,KAAK4C,kBAAkBnC,MAAQ,KAAMqD,IACjL9D,KAAKiC,qBAAqByC,qBAAqB1E,KAAK6B,gBAM5D,gBAAgB8B,GACpB3D,KAAK2C,SAASU,MAAMC,QAAUK,EAAMgB,cAAchC,UAAYgB,EAAMiB,QAAQC,gBAAkB,QAAU,OACxG7E,KAAKsC,iBAAiBe,MAAMC,QAAUK,EAAMgB,cAAcG,eAAiB,QAAU,OACrF9E,KAAKgD,mBAAmBK,MAAMC,QAAUK,EAAMgB,cAAcG,gBAAkBnB,EAAMgB,cAAcG,eAAeC,OAAS,QAAU,OACpI/E,KAAKiD,sBAAsBI,MAAMC,SAAWK,EAAMiB,QAAQC,iBAAmBlB,EAAMiB,QAAQ3B,sBACvF,QAAU,OAGlB,uBACIjD,KAAKyD,gBAIb9C,eAAeC,OAAO,mBAAoBgB,I,kCChIpC,SAAUiC,EAAamB,EAAoE/C,GAC7F+C,EAAS/D,SAASQ,IACdA,EAAEpB,iBAAiB,SAAS4E,IACxBA,EAAGC,iBACHjD,EAAqBkD,SAAS1D,EAAE2D,aAAa,e,mECNnD,MAAOC,UAAcvF,YAEvB,cACIC,QAFI,KAAAuF,YAAsB,EAG1BtF,KAAKuF,YAAcvF,KAAKuF,YAAYnC,KAAKpD,MACzCA,KAAKwF,cAAgBxF,KAAKwF,cAAcpC,KAAKpD,MAGjD,oBACIA,KAAKyF,eAGD,YAAYR,GACF,UAAVA,EAAGS,KACH1F,KAAK2F,OAIL,cAAcV,GACbjF,KAAK4F,SAAmBC,MAAMC,SAC/B9F,KAAK2F,OAIN,OACC3F,KAAKsF,aACL/D,SAASwE,oBAAoB,UAAW/F,KAAKuF,aAC7ChE,SAASwE,oBAAoB,QAAS/F,KAAKwF,eAC3CxF,KAAKsF,YAAa,EAClBtF,KAAKyF,gBAIN,OACEzF,KAAKsF,aACN/D,SAASlB,iBAAiB,UAAWL,KAAKuF,aAC1ChE,SAASlB,iBAAiB,QAASL,KAAKwF,eACxCxF,KAAKsF,YAAa,EAClBtF,KAAKyF,gBAIL,eACJzF,KAAKqD,MAAMC,QAAUtD,KAAKsF,WAAa,QAAU,OAG9C,SACEtF,KAAKsF,WAINtF,KAAK2F,OAHL3F,KAAKgG,OAQb,uBACIhG,KAAK2F,QAGbhF,eAAeC,OAAO,YAAayE,I,kCC1D5B,MAAMY,EAAmB,WAE1B,MAAOC,UAAkBpG,YAE3B,cACIC,QACAC,KAAKwF,cAAgBxF,KAAKwF,cAAcpC,KAAKpD,MAGjD,2BACIA,KAAKmG,mBAGD,mBACJnG,KAAKoG,QAAUpG,KAAKoF,aAAaa,GAIrC,gCACI,MAAO,CAACA,GAGZ,oBACIjG,KAAKK,iBAAiB,QAASL,KAAKwF,eAGhC,cAAcP,GACC1D,SAASpB,cAAc,IAAIH,KAAKoG,WAC7CC,SACNpB,EAAGqB,kBAIP,uBACItG,KAAK+F,oBAAoB,QAAS/F,KAAKwF,gBAG/C7E,eAAeC,OAAO,aAAcsF,I,gFC7B9B,MAAOK,EAET,YAAmBxB,GAAA,KAAAA,SADV,KAAAyB,KAAI,GAMX,MAAOC,EAET,cADS,KAAAD,KAAI,GAMX,MAAOE,EAET,YAAmBC,GAAA,KAAAA,eADV,KAAAH,KAAI,IAMX,MAAOI,EAET,YAAmBC,GAAA,KAAAA,WADV,KAAAL,KAAI,GAMX,MAAOM,EAET,cADS,KAAAN,KAAI,IAMX,MAAOO,EAET,YAAmBpC,GAAA,KAAAA,gBADV,KAAA6B,KAAI,IAMX,MAAOQ,EAET,cADS,KAAAR,KAAI,IAcX,MAAOS,EAET,YAAoBjF,EACRkF,EACAC,GAFQ,KAAAnF,QACR,KAAAkF,YACA,KAAAC,KAIZ,qBACInH,KAAKgC,MAAMoF,SAAS,IAAIJ,GAG5B,4BAA4BK,EAAYjG,EAAcwB,EAA2BmB,GAC7E,IAAIuD,EAAoC,CACpClG,OACAiG,KACAzE,oBACAmB,SAAUA,EAASwD,KAAIrG,IAAc,CAAEE,KAAMF,EAAGmG,IAAI,cAExDrH,KAAKgC,MAAMoF,SAAS,IAAIX,GACxB,IAAIe,QAAYxH,KAAKkH,UAAUO,kBAAkBH,GACjD,OAAKE,EAAIE,eAIC1H,KAAKmH,GAAGQ,gBAAgB,CAC1BN,GAAIA,EACJjG,KAAMA,EACN2C,SAAUuD,EAAQvD,SAClBnB,kBAAmBA,IAEvB5C,KAAKgC,MAAMoF,SAAS,IAAIV,EAAoB,CACxCW,GAAIA,EACJjG,KAAMA,EACN2C,SAAUuD,EAAQvD,SAClBnB,kBAAmBA,MAEhB,IAfP5C,KAAKgC,MAAMoF,SAAS,IAAIb,EAA2BiB,EAAIzC,UAiBpD,GAGX,8BAA8BnC,GAC1B,IAAIgF,QAAW5H,KAAKmH,GAAGU,sBAAsBjF,GAC7C,GAAI,MAAQgF,EACR,OAAOA,EAAGP,GAEdrH,KAAKgC,MAAMoF,SAAS,IAAIN,GACxB,IACI,IAAIU,QAAYxH,KAAKkH,UAAUY,wBAAwBlF,EAAmB,MAC1E,GAAI,MAAQ4E,EAGP,CACD,IAAIO,QAAe/H,KAAKmH,GAAGa,iBAAiBR,EAAID,KAAIrG,IACzC,CACHmG,GAAInG,EAAEmG,GACNjG,KAAMF,EAAEE,KACR2C,SAAU7C,EAAE6C,SACZnB,kBAAmB1B,EAAE0B,uBAI7B,OADA5C,KAAKgC,MAAMoF,SAAS,IAAIL,EAA+BS,IAChDO,EAAO,GAZd/H,KAAKgC,MAAMoF,SAAS,IAAIR,GAA8B,IAe9D,MAAMqB,GACFjI,KAAKgC,MAAMoF,SAAS,IAAIR,GAA8B,IAE1D,OAAO,GAIT,SAAUsB,EAA4CnG,GACxD,OAAOA,EAAeoG,IAAI,wCACtBpG,GAAkB,IAAIkF,EAClBlF,EAAeC,MACfD,EAAemF,UACfnF,EAAeoF,Q,iBC9I3BiB,EAAOC,QAFI,8vF,gBCEXD,EAAOC,QAFI,yM,gBCEXD,EAAOC,QAFI","file":"7ef16d73f3031403fb0a.bundle.js","sourcesContent":["import template from \"./PersonenListenEintrag.html\";\n\nexport class PersonenListenEintrag extends HTMLElement {\n    private removeButton: HTMLButtonElement;\n    private nameInput: HTMLInputElement;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n    }\n\n    connectedCallback() {\n        let element = this;\n        this.removeButton = element.querySelector(\"#remove\");\n        this.nameInput = element.querySelector(\"#name\");\n        this.nameInput.addEventListener(\"change\", () => {\n            this.dispatchEvent(new Event(\"change\"));\n        });\n        this.removeButton.addEventListener(\"click\", () => {\n            this.dispatchEvent(new CustomEvent(\"onremove\"));\n        })\n    }\n\n    get name(){\n        return this.nameInput.value;\n    }\n\n    disconnectedCallback() {\n\n    }\n\n}\nexport const PersonenListenEintragTagName = 'app-personen-listen-eintrag'; \ncustomElements.define(PersonenListenEintragTagName, PersonenListenEintrag);\n","import template from \"./PersonenListe.html\";\nimport { PersonenListenEintrag, PersonenListenEintragTagName } from \"./PersonenListenEintrag\";\n\nexport class PersonenListe extends HTMLElement {\n    private addPersonButton: HTMLButtonElement;\n    private personenListe: HTMLUListElement;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n    }\n\n    get personen() {\n        let names: string[] = [];\n        this.personenListe.querySelectorAll(PersonenListenEintragTagName).forEach((v: PersonenListenEintrag) => names.push(v.name));\n        return names;\n    }\n\n    connectedCallback() {\n        let element = this;\n        this.addPersonButton = element.querySelector(\"#add-person\");\n        this.personenListe = element.querySelector(\"#personen-liste\");\n        this.addPersonButton.addEventListener(\"click\", () => {\n            let li = document.createElement(\"li\");\n            let e = new PersonenListenEintrag();\n            li.appendChild(e);\n            this.personenListe.appendChild(li);\n            e.addEventListener(\"onremove\", () => {\n                this.personenListe.removeChild(li);\n            });\n        });\n    }\n\n    disconnectedCallback() {\n\n    }\n\n}\n\ncustomElements.define('app-personen-liste', PersonenListe);\n","import template from \"./CreateKontokorrent.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { State } from \"../../state/State\";\nimport { AccountActionCreator, accountActionCreatorFactory } from \"../../state/actions/AccountActionCreator\";\nimport \"../PersonenListe/PersonenListe\";\nimport { PersonenListe } from \"../PersonenListe/PersonenListe\";\nimport { v4 as uuid } from \"uuid\";\nimport \"./CreateKontokorrent.scss\";\nimport { KontokorrentListenActionCreator, kontokorrentListenActionCreatorFactory } from \"../../state/actions/KontokorrentListenActionCreator\";\nimport { KontokorrentHinzufuegenActionCreator, kontokorrentHinzufuegenActionCreatorFactory } from \"../../state/actions/KontokorrentHinzufuegenActionCreator\";\nimport \"../ui-components/popup/popup\";\nimport \"../ui-components/tip-button/tip-button\";\nimport { convertLinks } from \"../convertLinks\";\n\nexport class CreateKontokorrent extends HTMLElement {\n    store: Store;\n    subscription: () => void;\n    routingActionCreator: RoutingActionCreator;\n    private accountActionCreator: AccountActionCreator;\n\n\n    private personenListe: PersonenListe;\n    private emptyNameError: HTMLDivElement;\n    private eventCreateError: HTMLDivElement;\n    private personCountError: HTMLDivElement;\n    private eventNameError: HTMLDivElement;\n    private createButton: HTMLButtonElement;\n    private eventName: HTMLInputElement;\n    private readonly kontokorrentId: string;\n    private creating: HTMLDivElement;\n    private oeffentlicherName: HTMLInputElement;\n    private oeffentlich: HTMLInputElement;\n    private oeffentlichBox: HTMLDivElement;\n    private oeffentlicherNameManuell: boolean;\n    private oeffentlicherNameError: HTMLDivElement;\n    private eventNameDuplicate: HTMLDivElement;\n    private kontokorrentHinzufuegenActionCreator: KontokorrentHinzufuegenActionCreator;\n    private accountCreationFailed: HTMLDivElement;\n    private personNameDuplicateError: HTMLDivElement;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.kontokorrentId = uuid();\n        this.oeffentlicherNameManuell = false;\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.accountActionCreator = accountActionCreatorFactory(serviceLocator);\n        this.kontokorrentHinzufuegenActionCreator = kontokorrentHinzufuegenActionCreatorFactory(serviceLocator);\n    }\n\n    connectedCallback() {\n        let element = this;\n        this.personenListe = element.querySelector(\"#personen-liste\");\n        this.emptyNameError = element.querySelector(\"#empty-name-error\");\n        this.eventCreateError = element.querySelector(\"#event-create-error\");\n        this.personCountError = element.querySelector(\"#person-count-error\");\n        this.eventNameError = element.querySelector(\"#event-name-error\");\n        this.createButton = element.querySelector(\"#create-button\");\n        this.eventName = element.querySelector(\"#event-name\");\n        this.creating = element.querySelector(\"#creating\");\n        this.oeffentlicherName = element.querySelector(\"#oeffentlicher-name\");\n        this.oeffentlich = element.querySelector(\"#oeffentlich\");\n        this.oeffentlichBox = element.querySelector(\"#oeffentlich-box\");\n        this.oeffentlicherNameError = element.querySelector(\"#oeffentlicher-name-error\");\n        this.eventNameDuplicate = element.querySelector(\"#event-name-duplicate\");\n        this.accountCreationFailed = element.querySelector(\"#account-creation-failed\");\n        this.personNameDuplicateError = element.querySelector(\"#person-name-duplicate-error\");\n\n\n        this.createButton.addEventListener(\"click\", this.createEvent.bind(this));\n\n        this.oeffentlich.addEventListener(\"change\", () => {\n            this.oeffentlichBox.style.display = this.oeffentlich.checked ? \"block\" : \"none\";\n        });\n\n        this.eventName.addEventListener(\"change\", () => {\n            if (!this.oeffentlicherNameManuell) {\n                this.oeffentlicherName.value = (this.eventName.value || \"\").toLowerCase();\n            }\n        });\n\n        this.oeffentlicherName.addEventListener(\"change\", () => {\n            this.oeffentlicherNameManuell = true;\n        });\n\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n        convertLinks(element.querySelectorAll(\"a\"), this.routingActionCreator);\n    }\n\n    async createEvent() {\n        let eventName = this.eventName.value;\n        let personNames = this.personenListe.personen;\n        this.eventNameError.style.display = eventName ? \"none\" : \"block\";\n        let personCountOk = personNames.length >= 2;\n        this.personCountError.style.display = personCountOk ? \"none\" : \"block\";\n        let personNameError = personNames.some(v => !v);\n        this.emptyNameError.style.display = personNameError ? \"block\" : \"none\";\n        let oeffentlicherNameError = this.oeffentlich.checked && (!this.oeffentlicherName.value || !/^[a-z0-9]+$/.test(this.oeffentlicherName.value));\n        this.oeffentlicherNameError.style.display = oeffentlicherNameError ? \"block\" : \"none\";\n        let personNameDuplicateError = (personNames.some((item, index) => personNames.indexOf(item) != index));\n        this.personNameDuplicateError.style.display = personNameDuplicateError ? \"block\" : \"none\";\n        if (eventName && personCountOk && !personNameError && !oeffentlicherNameError && !personNameDuplicateError) {\n            if (await this.accountActionCreator.ensureAccount()) {\n                if (await this.kontokorrentHinzufuegenActionCreator.kontokorrentErstellen(this.kontokorrentId, this.eventName.value, this.oeffentlich.checked ? this.oeffentlicherName.value : null, personNames)) {\n                    this.routingActionCreator.navigateKontokorrent(this.kontokorrentId);\n                };\n            }\n        }\n    }\n\n    private applyStoreState(state: State) {\n        this.creating.style.display = state.kontokorrents.creating || state.account.accountCreating ? \"block\" : \"none\";\n        this.eventCreateError.style.display = state.kontokorrents.creationFailed ? \"block\" : \"none\";\n        this.eventNameDuplicate.style.display = state.kontokorrents.creationFailed && state.kontokorrents.creationFailed.exists ? \"block\" : \"none\";\n        this.accountCreationFailed.style.display = !state.account.accountCreating && state.account.accountCreationFailed ?\n            \"block\" : \"none\";\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n    }\n}\n\ncustomElements.define('app-create-event', CreateKontokorrent);","import { RoutingActionCreator } from \"../state/actions/RoutingActionCreator\";\n\nexport function convertLinks(elements: Array<HTMLAnchorElement> | NodeListOf<HTMLAnchorElement>, routingActionCreator: RoutingActionCreator) {\n    elements.forEach((e: HTMLAnchorElement) => {\n        e.addEventListener(\"click\", ev => {\n            ev.preventDefault();\n            routingActionCreator.navigate(e.getAttribute(\"href\"));\n        });\n    });\n}","export class Popup extends HTMLElement {\n    private popupShown: boolean = false;\n    constructor() {\n        super();\n        this.keyListener = this.keyListener.bind(this);\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    connectedCallback() {\n        this.updateStyles();\n    }\n\n    private keyListener(ev: KeyboardEvent) {\n        if (ev.key == \"Escape\") {\n            this.hide();\n        }\n    }\n\n    private clickListener(ev: MouseEvent | TouchEvent) {\n        if (!this.contains(<Element>(event.target))) {\n            this.hide();\n        }\n    }\n\n    public hide() {\n        if (this.popupShown) {\n            document.removeEventListener(\"keydown\", this.keyListener);\n            document.removeEventListener(\"click\", this.clickListener);\n            this.popupShown = false;\n            this.updateStyles();\n        }\n    }\n\n    public show() {\n        if (!this.popupShown) {\n            document.addEventListener(\"keydown\", this.keyListener);\n            document.addEventListener(\"click\", this.clickListener);\n            this.popupShown = true;\n            this.updateStyles();\n        }\n    }\n\n    private updateStyles() {\n        this.style.display = this.popupShown ? \"block\" : \"none\";\n    }\n\n    public toggle() {\n        if (!this.popupShown) {\n            this.show();\n        }\n        else {\n            this.hide();\n\n        }\n    }\n\n    disconnectedCallback() {\n        this.hide();\n    }\n}\ncustomElements.define(\"app-popup\", Popup);\n","import { Popup } from \"../popup/popup\";\n\nexport const PopupIdAttribute = \"popup-id\";\n\nexport class TipButton extends HTMLElement {\n    private popupId: string;\n    constructor() {\n        super();\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.popupId = this.getAttribute(PopupIdAttribute);\n\n    }\n\n    static get observedAttributes() {\n        return [PopupIdAttribute];\n    }\n\n    connectedCallback() {\n        this.addEventListener(\"click\", this.clickListener);\n    }\n\n    private clickListener(ev: MouseEvent) {\n        let popup: Popup = document.querySelector(`#${this.popupId}`);\n        popup.toggle();\n        ev.stopPropagation();\n    }\n\n\n    disconnectedCallback() {\n        this.removeEventListener(\"click\", this.clickListener);\n    }\n}\ncustomElements.define(\"tip-button\", TipButton);\n","import { ApiClient } from \"../../api/ApiClient\";\nimport { KontokorrentInfo } from \"../../api/KontokorrentInfo\";\nimport { NeuerKontokorrentRequest } from \"../../api/NeuerKontokorrentRequest\";\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { Action } from \"../lib/Action\";\nimport { Store } from \"../Store\";\nimport { ActionNames } from \"./ActionNames\";\nimport { v4 as uuid } from \"uuid\";\n\nexport class KontokorrentCreationFailed implements Action {\n    readonly type = ActionNames.KontokorrentCreationFailed;\n    constructor(public exists: boolean) {\n\n    }\n}\n\nexport class KontokorrentCreating implements Action {\n    readonly type = ActionNames.KontokorrentCreating;\n    constructor() {\n\n    }\n}\n\nexport class KontokorrentCreated implements Action {\n    readonly type = ActionNames.KontokorrentCreated;\n    constructor(public kontokorrent: KontokorrentInfo) {\n\n    }\n}\n\nexport class KontokorrentHinzufuegenFailed implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegenFailed;\n    constructor(public notFound: boolean) {\n\n    }\n}\n\nexport class KontokorrentHinzufuegen implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegen;\n    constructor() {\n\n    }\n}\n\nexport class KontokorrentHinzufuegenSuccess implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegenSuccess;\n    constructor(public kontokorrents: KontokorrentInfo[]) {\n\n    }\n}\n\nexport class LoginPageGeoeffnet implements Action {\n    readonly type = ActionNames.LoginPageGeoeffnet;\n    constructor() {\n\n    }\n}\n\nexport type KontokorrentHinzufuegenActions = KontokorrentCreationFailed\n    | KontokorrentCreating\n    | KontokorrentCreated\n    | KontokorrentHinzufuegenFailed\n    | KontokorrentHinzufuegen\n    | KontokorrentHinzufuegenSuccess\n    | LoginPageGeoeffnet;\n\nexport class KontokorrentHinzufuegenActionCreator {\n\n    constructor(private store: Store,\n        private apiClient: ApiClient,\n        private db: KontokorrentDatabase) {\n\n    }\n\n    loginPageGeoeffnet() {\n        this.store.dispatch(new LoginPageGeoeffnet());\n    }\n\n    async kontokorrentErstellen(id: string, name: string, oeffentlicherName: string, personen: string[]) {\n        let request: NeuerKontokorrentRequest = {\n            name,\n            id,\n            oeffentlicherName,\n            personen: personen.map(v => { return { name: v, id: uuid() } })\n        };\n        this.store.dispatch(new KontokorrentCreating());\n        let res = await this.apiClient.neuerKontokorrent(request);\n        if (!res.success) {\n            this.store.dispatch(new KontokorrentCreationFailed(res.exists));\n        }\n        else {\n            await this.db.addKontokorrent({\n                id: id,\n                name: name,\n                personen: request.personen,\n                oeffentlicherName: oeffentlicherName\n            });\n            this.store.dispatch(new KontokorrentCreated({\n                id: id,\n                name: name,\n                personen: request.personen,\n                oeffentlicherName: oeffentlicherName\n            }));\n            return true;\n        }\n        return false;\n    }\n\n    async kontokorrentHinzufuegen(oeffentlicherName: string) {\n        let kk = await this.db.getPerOeffentlichName(oeffentlicherName);\n        if (null != kk) {\n            return kk.id;\n        }\n        this.store.dispatch(new KontokorrentHinzufuegen());\n        try {\n            let res = await this.apiClient.kontokorrentHinzufuegen(oeffentlicherName, null);\n            if (null == res) {\n                this.store.dispatch(new KontokorrentHinzufuegenFailed(true));\n            }\n            else {\n                let newIds = await this.db.setKontokorrents(res.map(v => {\n                    return {\n                        id: v.id,\n                        name: v.name,\n                        personen: v.personen,\n                        oeffentlicherName: v.oeffentlicherName\n                    };\n                }));\n                this.store.dispatch(new KontokorrentHinzufuegenSuccess(res));\n                return newIds[0];\n            }\n        }\n        catch(err) {\n            this.store.dispatch(new KontokorrentHinzufuegenFailed(false));\n        }\n        return false;\n    }\n}\n\nexport function kontokorrentHinzufuegenActionCreatorFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"KontokorrentHinzufuegenActionCreator\",\n        serviceLocator => new KontokorrentHinzufuegenActionCreator(\n            serviceLocator.store,\n            serviceLocator.apiClient,\n            serviceLocator.db\n        ));\n}","// Module\nvar code = \"<div class=\\\"create-event-box\\\"> <h1>Gruppe erstellen</h1> <div id=\\\"empty-name-error\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Für alle Personen Namen angeben</div> <div id=\\\"person-count-error\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Mindestens zwei Personen angeben </div> <div id=\\\"event-create-error\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Kontokorrent konnte nicht erstellt werden</div> <div id=\\\"event-name-duplicate\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Ein Kontokorrent mit diesem Namen exisitert bereits</div> <div id=\\\"event-name-error\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Eventname angeben</div> <div id=\\\"oeffentlicher-name-error\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Öfferntlicher Name: Nur Kleinbuchstaben und Zahlen</div> <div id=\\\"person-name-duplicate-error\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Personennamen müssen unterschiedlich sein</div> <div id=\\\"account-creation-failed\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Account konnte nicht erstellt werden</div> <label for=\\\"event-name\\\" class=\\\"create-event-box__label\\\">Anzeigename</label> <div class=\\\"create-event-box__input-with-tip\\\"> <input type=\\\"text\\\" id=\\\"event-name\\\" name=\\\"event-name\\\"> <tip-button popup-id=\\\"eventNameExplainer\\\" title=\\\"Eventname erklärung\\\"> <span class=\\\"material-icons\\\"> info </span> </tip-button> <app-popup id=\\\"eventNameExplainer\\\" class=\\\"tip tip--with-input\\\"> Wie soll die Gruppe heißen? Unter diesem Namen wird die Gruppe nach dem einloggen angezeigt. Kann, muss aber nicht mit dem öffentlichen Namen übereinstimmen. </app-popup> </div> <label for=\\\"event-name\\\" class=\\\"create-event-box__label\\\" style=\\\"display:none\\\">Oeffentlich</label> <input type=\\\"checkbox\\\" id=\\\"oeffentlich\\\" name=\\\"oeffentlich\\\" checked=\\\"checked\\\" disabled=\\\"disabled\\\" style=\\\"display:none\\\"> <div id=\\\"oeffentlich-box\\\"> <label for=\\\"oeffentlicher-name\\\" class=\\\"create-event-box__label\\\">Öffentlicher Name</label> <div class=\\\"create-event-box__input-with-tip\\\"> <input type=\\\"text\\\" id=\\\"oeffentlicher-name\\\" name=\\\"oeffentlicher-name\\\"> <tip-button popup-id=\\\"oeffentlicherNameExplainer\\\" title=\\\"öffentlicher Name Erklärung\\\"> <span class=\\\"material-icons\\\"> info </span> </tip-button> <app-popup id=\\\"oeffentlicherNameExplainer\\\" class=\\\"tip tip--with-input\\\"> Gib hier den Namen, den die anderen Gruppenmitglieder verwenden um sich einzuloggen. (\\\"Passwort\\\") </app-popup> </div> </div> <label class=\\\"create-event-box__label\\\">Personen</label> <app-personen-liste id=\\\"personen-liste\\\"></app-personen-liste> <div id=\\\"creating\\\" class=\\\"create-event-box__processing\\\" style=\\\"display:none\\\"> <span class=\\\"spinner\\\"></span> </div> <div> <button id=\\\"create-button\\\" class=\\\"button\\\">Erstellen</button> </div> <div> <a id=\\\"home-button\\\" class=\\\"button\\\" href=\\\"\\\"> <span class=\\\"material-icons\\\"> home </span> zurück </a> </div> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<ul id=\\\"personen-liste\\\" class=\\\"mdc-list mdc-list--non-interactive\\\"> </ul> <button type=\\\"button\\\" class=\\\"button\\\" id=\\\"add-person\\\"> <span class=\\\"material-icons\\\"> add </span> Person hinzufügen </button>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<input type=\\\"text\\\" id=\\\"name\\\" placehoder=\\\"Name\\\"/> <button id=\\\"remove\\\" class=\\\"button\\\"> <span class=\\\"material-icons\\\"> delete </span> entfernen </button>\";\n// Exports\nmodule.exports = code;"],"sourceRoot":""}