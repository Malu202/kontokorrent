{"version":3,"sources":["webpack://kontokorrent/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/toDate/index.js","webpack://kontokorrent/./src/components/AppBar/AppBar.html","webpack://kontokorrent/./src/components/BezahlendePersonRadioButton/BezahlendePersonRadioButton.html","webpack://kontokorrent/./src/components/BezahlungEintragenForm/BezahlungEintragenForm.html","webpack://kontokorrent/./src/components/BezahlungEintragenPage/BezahlungEintragenPage.html","webpack://kontokorrent/./src/components/EmpfaengerCheckbox/EmpfaengerCheckbox.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.html","webpack://kontokorrent/./src/components/MdcCheckbox/MdcCheckbox.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.ts","webpack://kontokorrent/./src/components/AppBar/AppBar.ts","webpack://kontokorrent/./src/state/actions/BezahlungActionCreator.ts","webpack://kontokorrent/./src/components/BezahlendePersonRadioButton/BezahlendePersonRadioButton.ts","webpack://kontokorrent/./src/components/MdcCheckbox/MdcCheckbox.ts","webpack://kontokorrent/./src/components/EmpfaengerCheckbox/EmpfaengerCheckbox.ts","webpack://kontokorrent/./src/components/BezahlungEintragenForm/BezahlungEintragenForm.ts","webpack://kontokorrent/./src/utils/toDateInputValue.ts","webpack://kontokorrent/./node_modules/date-fns/esm/isSameDay/index.js","webpack://kontokorrent/./src/components/BezahlungEintragenPage/BezahlungEintragenPage.ts","webpack://kontokorrent/./src/components/convertLinks.ts","webpack://kontokorrent/./src/components/ui-components/popup/popup.ts","webpack://kontokorrent/./src/utils/ArrayToElementRenderer.ts","webpack://kontokorrent/./src/utils/ReuseableTemplate.ts"],"names":["requiredArgs","required","args","length","TypeError","startOfDay","dirtyDate","arguments","date","setHours","toDate","argument","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","module","exports","KontokorrentSelectListEntry","HTMLElement","super","this","innerHTML","name","querySelector","link","clickEvent","bind","addEventListener","e","preventDefault","dispatchEvent","CustomEvent","detail","kontokorrent","id","bubbles","removeEventListener","isActive","innerText","href","classList","toggle","customElements","define","KontokorrentSelectList","list","_kontokorrents","kontokorrentsRenderer","ArrayToElementRenderer","k","li","document","createElement","appendChild","update","firstChild","_activeKontokorrentId","kontokorrents","sortBy","KontokorrentSelectListTagName","KontokorrentSelect","kontokorrentName","kontokorrentSelectList","addButton","popup","updateAttributes","contains","event","stopPropagation","hide","activeKontokorrentId","getAttribute","updatesStyle","activeKontokorrent","find","KontokorrentSelectTagName","AppBar","kontokorrentSelect","logoutDialog","accountActionCreator","logout","convertLinks","querySelectorAll","routingActionCreator","subscription","store","subscribe","state","applyStoreState","navigateLogin","values","setAttribute","serviceLocator","AppBarTagName","BezahlungKontokorrentGeandert","kontokorrentId","type","BezahlungActionCreator","db","getZuletztGesehenerKontokorrentId","dispatch","setZuletztGesehenerKontokorrentId","BezahlendePersonRadioButton","input","personLabel","label","v","value","template","ReuseableTemplate","get","nativeControl","mdcCheckBox","checkboxId","checkboxName","BezahlungEintragenForm","d","local","validationRequested","empfaengerAuswahl","zahlendePersonRenderer","p","empfaengerRenderer","datum","setMinutes","getMinutes","getTimezoneOffset","toJSON","slice","betrag","betreff","zahlendePersonMissingError","betreffMissingError","betragMissingError","betragInvalidError","empfaengerMissingError","form","formInputListener","onFormInput","validateWhileManipulating","parseBetrag","betragValid","valid","hidden","empty","valueAsDate","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","dateRightStartOfDay","isSameDay","empfaenger","selectedEmpfaenger","bezahlendePerson","getDatum","replace","betragFloat","parseFloat","isNaN","_personen","filter","checked","map","validity","betreffValid","zahlendePersonValid","empfaengerValid","some","element","person","radioName","BezahlungEintragenFormTagName","BezahlungEintragenPage","zurueckLink","appBar","bezahlungEintragenForm","saveButton","bezahlungActionCreator","bezahlungActionCreatorFactory","addServices","s","bezahlungEintragenKontokorrentChanged","bezahlungEintragenGeoeffnet","saveEventListener","save","validate","getData","personen","elements","forEach","ev","navigate","Popup","popupShown","keyListener","clickListener","updateStyles","key","style","display","show","listElement","keySelector","keyToElement","Map","elementToKey","WeakMap","updateElement","keyCache","getKey","set","x","Array","from","children","el","data","i","removeChild","before","nextKeyToElement","t","childElement","firstElementChild","prepend","nextElementSibling","insertAdjacentElement","instance","importNode","content"],"mappings":"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","file":"de10269831a391d41ae2.bundle.js","sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","// Module\nvar code = \"<header class=\\\"app-bar\\\"> <kontokorrent-select class=\\\"app-bar__kontokorrent-select\\\"></kontokorrent-select> <nav class=\\\"app-bar__links\\\"> <button id=\\\"logout-button\\\" class=\\\"app-bar__link\\\" title=\\\"Logout\\\"> <span class=\\\"material-icons\\\"> exit_to_app </span> </button> <a href=\\\"info\\\" class=\\\"app-bar__link\\\" title=\\\"Informationen über diese App\\\"> <span class=\\\"material-icons\\\"> info </span> </a> </nav> </header> <app-popup id=\\\"logout-dialog\\\"> <div class=\\\"dialog__backdrop\\\"></div> <div class=\\\"dialog\\\"> <p> Wirklich aus allen Kontokorrents ausloggen? </p> <div class=\\\"dialog__button-pane\\\"> <button id=\\\"abort-logout\\\" class=\\\"button\\\">Abbrechen</button> <button id=\\\"confirm-logout\\\" class=\\\"button\\\">Ausloggen</button> </div> </div> </app-popup>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<input type=\\\"radio\\\" class=\\\"bezahlende-person-radio__input\\\"/> <label class=\\\"bezahlende-person-radio\\\"> <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\"> <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/> <path d=\\\"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z\\\"/> </svg> <span data-ref=\\\"label\\\"></span> </label>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<form novalidate class=\\\"bezahlung-eintragen-form\\\" id=\\\"bezahlung-eintragen-form\\\"> <div id=\\\"betreff-missing-error\\\" class=\\\"alert alert--error\\\" hidden>Es muss ein <label class=\\\"alert__field-label\\\" for=\\\"betreff\\\">Betreff</label> angegeben werden.</div> <div id=\\\"betrag-invalid-error\\\" class=\\\"alert alert--error\\\" hidden> Der <label class=\\\"alert__field-label\\\" for=\\\"betreff\\\">Betrag</label> ist ungültig.</div> <div id=\\\"betrag-missing-error\\\" class=\\\"alert alert--error\\\" hidden>Es muss ein <label class=\\\"alert__field-label\\\" for=\\\"betrag\\\">Betrag</label> angegeben werden.</div> <span id=\\\"zahlende-person-missing-error\\\" class=\\\"alert alert--error\\\" hidden>Wähle eine Person aus die bezahlt. </span> <div id=\\\"empfaenger-missing-error\\\" class=\\\"alert alert--error\\\" hidden>Wähle Personen aus für die bezahlt wird. </div> <label for=\\\"betrag\\\" class=\\\"bezahlung-eintragen-form__label\\\">Betrag</label> <input name=\\\"betrag\\\" id=\\\"betrag\\\" type=\\\"number\\\" novalidate step=\\\"any\\\"> <label for=\\\"zahlende-person\\\" class=\\\"bezahlung-eintragen-form__label\\\">Diese Person zahlt</label> <div id=\\\"zahlende-person-auswahl\\\"></div> <label for=\\\"empfaenger\\\" class=\\\"bezahlung-eintragen-form__label\\\">für diese Personen</label> <div id=\\\"empfaenger-auswahl\\\"></div> <label for=\\\"betreff\\\" class=\\\"bezahlung-eintragen-form__label\\\">Betreff</label> <input name=\\\"betreff\\\" id=\\\"betreff\\\" required=\\\"\\\" type=\\\"text\\\"> <label for=\\\"datum\\\" class=\\\"bezahlung-eintragen-form__label\\\">Datum</label> <input name=\\\"datum\\\" id=\\\"datum\\\" required=\\\"\\\" type=\\\"date\\\"> </form>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<app-bar></app-bar> <div class=\\\"bezahlungen-page-menu\\\"> <a id=\\\"zurueck-zum-kontokorrent\\\" class=\\\"button\\\"> <span class=\\\"material-icons\\\"> arrow_back </span> zurück </a> <button class=\\\"button\\\" title=\\\"speichern\\\" id=\\\"bezahlung-eintragen__save\\\"> <span class=\\\"material-icons\\\"> save </span> speichern </button> </div> <div class=\\\"bezahlungen-page__form-container\\\"> <bezahlung-eintragen-form> </bezahlung-eintragen-form> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<mdc-checkbox></mdc-checkbox> <label></label>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"kontokorrent-select-wrapper\\\"> <div class=\\\"kontokorrent-select\\\"> <h1 data-ref=\\\"kontokorrent-name\\\" class=\\\"kontokorrent-select__name\\\">Kontokorrent</h1> <button class=\\\"kontokorrent-select__choose\\\" title=\\\"anderen Kontokorrent wählen\\\"> <span class=\\\"material-icons\\\"> arrow_drop_down </span> </button> </div> <app-popup class=\\\"kontokorrent-select__popup\\\"> <kontokorrent-select-list></kontokorrent-select-list> <div class=\\\"kontokorrent-select__buttons\\\"> <button id=\\\"add-kontokorrent\\\" class=\\\"button\\\">weiteren hinzufügen</button> </div> </app-popup> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<ol data-ref=\\\"list\\\" class=\\\"kontokorrent-select-list\\\"> </ol>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<a data-ref=\\\"link\\\" class=\\\"kontokorrent-select-list__entry\\\"> <span data-ref=\\\"name\\\"></span> </a>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"mdc-touch-target-wrapper\\\"> <div class=\\\"mdc-checkbox mdc-checkbox--touch\\\"> <input type=\\\"checkbox\\\" class=\\\"mdc-checkbox__native-control\\\"/> <div class=\\\"mdc-checkbox__background\\\"> <svg class=\\\"mdc-checkbox__checkmark\\\" viewBox=\\\"0 0 24 24\\\"> <path class=\\\"mdc-checkbox__checkmark-path\\\" fill=\\\"none\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/> </svg> <div class=\\\"mdc-checkbox__mixedmark\\\"></div> </div> <div class=\\\"mdc-checkbox__ripple\\\"></div> </div> </div>\";\n// Exports\nmodule.exports = code;","import template from \"./KontokorrentSelectListEntry.html\";\nimport { KontokorrentState } from \"../../state/State\";\n\n\nexport class KontokorrentSelectListEntry extends HTMLElement {\n    private name: HTMLSpanElement;\n    private link: HTMLAnchorElement;\n    private kontokorrent: KontokorrentState;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.name = this.querySelector(`[data-ref=\"name\"]`);\n        this.link = this.querySelector(`[data-ref=\"link\"]`);\n        this.clickEvent = this.clickEvent.bind(this);\n    }\n\n    connectedCallback() {\n        this.link.addEventListener(\"click\", this.clickEvent);\n    }\n\n    private clickEvent(e: MouseEvent): void {\n        e.preventDefault();\n        this.dispatchEvent(new CustomEvent(\"gotokontokorrent\", { detail: this.kontokorrent.id, bubbles: true }));\n    }\n\n    disconnectedCallback() {\n        this.link.removeEventListener(\"click\", this.clickEvent);\n    }\n\n    update(kontokorrent: KontokorrentState, isActive: boolean) {\n        this.kontokorrent = kontokorrent;\n        this.name.innerText = kontokorrent.name;\n        this.link.href = `kontokorrents/${kontokorrent.id}`;\n        this.link.classList.toggle(\"kontokorrent-select-list__entry--active\", isActive);\n    }\n}\nexport const KontokorrentSelectListEntryTagName = \"kontokorrent-select-list-entry\";\ncustomElements.define(KontokorrentSelectListEntryTagName, KontokorrentSelectListEntry);\n","import template from \"./KontokorrentSelectList.html\";\nimport \"./KontokorrentSelectList.scss\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { sortByAlphabetically } from \"../../utils/sortBy\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { KontokorrentSelectListEntry } from \"./KontokorrentSelectListEntry\";\n\nexport class KontokorrentSelectList extends HTMLElement {\n    private list: HTMLOListElement;\n    private _kontokorrents: KontokorrentState[];\n    private _activeKontokorrentId: string;\n    private kontokorrentsRenderer: ArrayToElementRenderer<KontokorrentState, HTMLLIElement, string>;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.list = this.querySelector(`[data-ref=\"list\"]`);\n        this._kontokorrents = [];\n        this.kontokorrentsRenderer = new ArrayToElementRenderer(this.list,\n            (k: KontokorrentState) => k.id,\n            () => {\n                let li = document.createElement(\"li\");\n                li.appendChild(new KontokorrentSelectListEntry());\n                return li;\n            });\n    }\n\n    connectedCallback() {\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private update() {\n        this.kontokorrentsRenderer.update(this._kontokorrents,\n            (li, kontokorrent) => {\n                let x: KontokorrentSelectListEntry = <KontokorrentSelectListEntry>li.firstChild;\n                x.update(kontokorrent, this._activeKontokorrentId == kontokorrent.id);\n            });\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this._kontokorrents = sortByAlphabetically(kontokorrents, k => k.name);\n        this.update();\n    }\n\n    set activeKontokorrentId(id: string) {\n        this._activeKontokorrentId = id;\n        this.update();\n    }\n}\nexport const KontokorrentSelectListTagName = \"kontokorrent-select-list\";\ncustomElements.define(KontokorrentSelectListTagName, KontokorrentSelectList);\n","import template from \"./KontokorrentSelect.html\";\nimport \"./KontokorrentSelect.scss\";\nimport \"./KontokorrentSelectList\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { KontokorrentSelectListTagName, KontokorrentSelectList } from \"./KontokorrentSelectList\";\nimport { Popup } from \"../ui-components/popup/popup\";\nimport \"../ui-components/popup/popup\";\n\nexport class KontokorrentSelect extends HTMLElement {\n    private kontokorrentName: HTMLHeadingElement;\n    private popup: Popup;\n    private kontokorrentSelectList: KontokorrentSelectList;\n    private addButton: HTMLButtonElement;\n    private activeKontokorrentId: string;\n    private _kontokorrents: KontokorrentState[];\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.kontokorrentName = this.querySelector(`[data-ref=\"kontokorrent-name\"]`);\n        this.kontokorrentSelectList = this.querySelector(KontokorrentSelectListTagName);\n        this.addButton = this.querySelector(`#add-kontokorrent`);\n        this._kontokorrents = null;\n    }\n\n    connectedCallback() {\n        this.popup = this.querySelector(`app-popup`);\n        this.updateAttributes();\n        this.addEventListener(\"click\", e => {\n            if (!this.popup.contains(<Element>(event.target))) {\n                this.popup.toggle();\n                e.stopPropagation();\n            }\n        });\n        this.addButton.addEventListener(\"click\", e => {\n            this.dispatchEvent(new CustomEvent(\"addkontokorrent\"));\n        });\n        this.kontokorrentSelectList.addEventListener(\"gotokontokorrent\", () => {\n            this.popup.hide();\n        })\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.activeKontokorrentId = this.getAttribute(\"active-kontokorrent-id\");\n        this.kontokorrentSelectList.activeKontokorrentId = this.activeKontokorrentId;\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [\"active-kontokorrent-id\"];\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this.kontokorrentSelectList.kontokorrents = kontokorrents;\n        this._kontokorrents = kontokorrents;\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        if (this._kontokorrents && this._kontokorrents.length) {\n            let activeKontokorrent = this._kontokorrents.find(k => k.id == this.activeKontokorrentId);\n            if (activeKontokorrent) {\n                this.kontokorrentName.innerText = activeKontokorrent.name;\n            }\n            else {\n                this.kontokorrentName.innerText = \"(Kontokorrent wählen)\";\n            }\n        }\n    }\n\n}\nexport const KontokorrentSelectTagName = \"kontokorrent-select\";\ncustomElements.define(KontokorrentSelectTagName, KontokorrentSelect);\n","import template from \"./AppBar.html\";\nimport \"./AppBar.scss\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { convertLinks } from \"../convertLinks\";\nimport \"../KontokorrentSelect/KontokorrentSelect\";\nimport { KontokorrentSelectTagName, KontokorrentSelect } from \"../KontokorrentSelect/KontokorrentSelect\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { AccountActionCreator, accountActionCreatorFactory } from \"../../state/actions/AccountActionCreator\";\nimport { Store } from \"../../state/Store\";\nimport { State } from \"../../state/State\";\nimport { Popup } from \"../ui-components/popup/popup\";\n\nexport class AppBar extends HTMLElement {\n    private kontokorrentSelect: KontokorrentSelect;\n    private store: Store;\n    private routingActionCreator: RoutingActionCreator;\n    private accountActionCreator: AccountActionCreator;\n    private logoutDialog: Popup;\n    private subscription: () => void;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.kontokorrentSelect = this.querySelector(KontokorrentSelectTagName);\n        this.logoutDialog = this.querySelector(\"#logout-dialog\");\n    }\n\n    connectedCallback() {\n        this.querySelector(\"#logout-button\").addEventListener(\"click\", (e: MouseEvent) => {\n            this.logoutDialog.toggle();\n            e.stopPropagation();\n        });\n        this.querySelector(\"#confirm-logout\").addEventListener(\"click\", async () => {\n            await this.accountActionCreator.logout();\n        });\n        this.querySelector(\"#abort-logout\").addEventListener(\"click\", () => {\n            this.logoutDialog.hide();\n        });\n        convertLinks(this.querySelectorAll(\"a\"), this.routingActionCreator);\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n        this.kontokorrentSelect.addEventListener(\"addkontokorrent\", () => {\n            this.routingActionCreator.navigateLogin();\n        });\n    }\n\n    applyStoreState(state: State): void {\n        this.kontokorrentSelect.kontokorrents = Object.values(state.kontokorrents.kontokorrents);\n        this.kontokorrentSelect.setAttribute(\"active-kontokorrent-id\", state.kontokorrents.activeKontokorrentId);\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.accountActionCreator = accountActionCreatorFactory(serviceLocator);\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n    }\n}\nexport const AppBarTagName = \"app-bar\";\ncustomElements.define(AppBarTagName, AppBar);\n","import { Store } from \"../Store\";\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { Action } from \"../lib/Action\";\nimport { ActionNames } from \"./ActionNames\";\n\nexport class BezahlungKontokorrentGeandert implements Action {\n    readonly type = ActionNames.BezahlungKontokorrentGeandert;\n    constructor(public kontokorrentId: string) {\n    }\n}\n\nexport type BezahlungActions = BezahlungKontokorrentGeandert;\n\nexport class BezahlungActionCreator {\n    constructor(private store: Store,\n        private db: KontokorrentDatabase) {\n    }\n\n    async bezahlungEintragenGeoeffnet() {\n        let id = this.store.state.kontokorrents.activeKontokorrentId || await this.db.getZuletztGesehenerKontokorrentId();\n        this.store.dispatch(new BezahlungKontokorrentGeandert(id));\n    }\n\n    async bezahlungEintragenKontokorrentChanged(id: string) {\n        this.store.dispatch(new BezahlungKontokorrentGeandert(id));\n        await this.db.setZuletztGesehenerKontokorrentId(id);\n    }\n}\n\nexport function bezahlungActionCreatorFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"BezahlungActionCreator\",\n        serviceLocator => new BezahlungActionCreator(serviceLocator.store,\n            serviceLocator.db));\n}\n","import { Person } from \"../../state/State\";\nimport template from \"./BezahlendePersonRadioButton.html\";\nimport \"./BezahlendePersonRadioButton.scss\";\n\nexport class BezahlendePersonRadioButton extends HTMLElement {\n    private input: HTMLInputElement;\n    private personLabel: HTMLLabelElement;\n    private label: HTMLLabelElement;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.input = this.querySelector(\"input\");\n        this.personLabel = this.querySelector(`[data-ref=\"label\"]`);\n        this.label = this.querySelector(\"label\");\n    }\n\n    connectedCallback() {\n\n\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    set radioName(v: string) {\n        this.input.name = v;\n    }\n\n    set person(value: Person) {\n        this.input.value = value.id;\n        this.personLabel.innerText = value.name;\n        this.input.id = value.id;\n        this.label.setAttribute(\"for\", value.id);\n    }\n}\n\ncustomElements.define(\"bezahlende-person-radio-button\", BezahlendePersonRadioButton);\n","import { ReuseableTemplate } from \"../../utils/ReuseableTemplate\";\nimport templateContent from \"./MdcCheckbox.html\";\nimport \"./MdcCheckbox.scss\";\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class MdcCheckbox extends HTMLElement {\n    private nativeControl: HTMLInputElement;\n\n    constructor() {\n        super();\n        this.appendChild(template.get());\n        this.nativeControl = this.querySelector(\".mdc-checkbox__native-control\");\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    set checkboxId(value: string) {\n        this.nativeControl.id = value;\n    }\n\n    set checkboxName(value: string) {\n        this.nativeControl.name = value;\n    }\n}\n\ncustomElements.define(\"mdc-checkbox\", MdcCheckbox);\n","import templateContent from \"./EmpfaengerCheckbox.html\";\nimport \"./EmpfaengerCheckbox.scss\";\nimport \"../MdcCheckbox/MdcCheckbox\";\nimport { MdcCheckbox } from \"../MdcCheckbox/MdcCheckbox\";\nimport { Person } from \"../../state/State\";\nimport { ReuseableTemplate } from \"../../utils/ReuseableTemplate\";\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class EmpfaengerCheckbox extends HTMLElement {\n    private mdcCheckBox: MdcCheckbox;\n    private label: HTMLLabelElement;\n\n    constructor() {\n        super();\n        this.appendChild(template.get());\n        this.mdcCheckBox = this.querySelector(\"mdc-checkbox\");\n        this.label = this.querySelector(\"label\");\n    }\n\n    set person(value: Person) {\n        this.label.innerText = value.name;\n        const id = `empfaenger-${value.id}`;\n        this.label.setAttribute(\"for\", id);\n        this.mdcCheckBox.checkboxId = id;\n        this.mdcCheckBox.checkboxName = id;\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n}\n\ncustomElements.define(\"empfaenger-checkbox\", EmpfaengerCheckbox);\n","import { Person } from \"../../state/State\";\nimport template from \"./BezahlungEintragenForm.html\";\nimport \"./BezahlungEintragenForm.scss\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BezahlendePersonRadioButton } from \"../BezahlendePersonRadioButton/BezahlendePersonRadioButton\";\nimport { EmpfaengerCheckbox } from \"../EmpfaengerCheckbox/EmpfaengerCheckbox\";\nimport { toDateInputValue } from \"../../utils/toDateInputValue\";\nimport { isSameDay, startOfDay } from \"date-fns\";\n\nexport class BezahlungEintragenForm extends HTMLElement {\n    private zahlendePersonRenderer: ArrayToElementRenderer<Person, BezahlendePersonRadioButton, string>;\n    private empfaengerRenderer: ArrayToElementRenderer<Person, EmpfaengerCheckbox, string>;\n    private datum: HTMLInputElement;\n    private betreff: HTMLInputElement;\n    private betrag: HTMLInputElement;\n    private zahlendePersonMissingError: HTMLSpanElement;\n    private betreffMissingError: HTMLDivElement;\n    private betragMissingError: HTMLDivElement;\n    private empfaengerMissingError: HTMLDivElement;\n    private validationRequested: boolean = false;\n    private form: HTMLFormElement;\n    private formInputListener: () => void;\n    private betragInvalidError: HTMLDivElement;\n    private empfaengerAuswahl: HTMLDivElement;\n    private _personen: Person[];\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.empfaengerAuswahl = this.querySelector(\"#empfaenger-auswahl\");\n        this.zahlendePersonRenderer = new ArrayToElementRenderer<Person, BezahlendePersonRadioButton, string>(\n            this.querySelector(\"#zahlende-person-auswahl\"),\n            p => p.id,\n            p => new BezahlendePersonRadioButton());\n        this.empfaengerRenderer = new ArrayToElementRenderer<Person, EmpfaengerCheckbox, string>(\n            this.empfaengerAuswahl,\n            p => p.id,\n            p => new EmpfaengerCheckbox());\n        this.datum = this.querySelector(\"#datum\");\n        this.datum.value = toDateInputValue(new Date());\n        this.betrag = this.querySelector(\"#betrag\");\n        this.betreff = this.querySelector(\"#betreff\");\n        this.zahlendePersonMissingError = this.querySelector(\"#zahlende-person-missing-error\");\n        this.betreffMissingError = this.querySelector(\"#betreff-missing-error\");\n        this.betragMissingError = this.querySelector(\"#betrag-missing-error\");\n        this.betragInvalidError = this.querySelector(\"#betrag-invalid-error\");\n        this.empfaengerMissingError = this.querySelector(\"#empfaenger-missing-error\");\n        this.form = this.querySelector(\"#bezahlung-eintragen-form\");\n    }\n\n    connectedCallback() {\n        this.formInputListener = () => this.onFormInput();\n        this.form.addEventListener(\"input\", this.formInputListener);\n    }\n\n    disconnectedCallback() {\n        this.form.removeEventListener(\"input\", this.formInputListener);\n    }\n\n    onFormInput() {\n        this.validateWhileManipulating();\n    }\n\n    validate() {\n        this.validationRequested = true;\n        let betrag = this.parseBetrag();\n        let betragValid = betrag.valid;\n        this.betragInvalidError.hidden = betrag.valid || betrag.empty;\n        return this.validateWhileManipulating() && betragValid;\n    }\n\n    private getDatum() {\n        let d = this.datum.valueAsDate;\n        if (!d || isSameDay(d, new Date())) {\n            return new Date();\n        }\n        return startOfDay(d);\n    }\n\n    getData() {\n        return {\n            betrag: this.parseBetrag().value,\n            betreff: this.betreff.value,\n            empfaenger: this.selectedEmpfaenger,\n            bezahlendePerson: this.bezahlendePerson.value,\n            datum: this.getDatum()\n        }\n    }\n\n    private parseBetrag() {\n        this.betrag.setAttribute(\"type\", \"text\");\n        let betrag = this.betrag.value;\n        if (betrag == \"\") {\n            return { valid: false, empty: true };\n        }\n        this.betrag.setAttribute(\"type\", \"number\");\n        betrag = betrag.replace(\",\", \".\");\n        betrag = betrag.replace(/ /g, \"\");\n        let betragFloat = parseFloat(betrag);\n        if (isNaN(betragFloat)) {\n            return { valid: false, empty: false };\n        }\n        return { valid: true, value: betragFloat };\n    }\n\n    private get bezahlendePerson(): HTMLInputElement {\n        return this.form[\"bezahlende-person\"];\n    }\n\n    private get selectedEmpfaenger(): string[] {\n        return this._personen.filter(p => (this.form[\"empfaenger-\" + p.id] as HTMLInputElement).checked)\n            .map(p => p.id);\n    }\n\n    private validateWhileManipulating() {\n        let validity = {\n            betragValid: !!this.betrag.value,\n            betreffValid: !!this.betreff.value,\n            zahlendePersonValid: !!this.bezahlendePerson.value,\n            empfaengerValid: this.selectedEmpfaenger.length > 0\n        };\n        this.betragMissingError.hidden = !this.validationRequested || validity.betragValid;\n        this.betreffMissingError.hidden = !this.validationRequested || validity.betreffValid;\n        this.zahlendePersonMissingError.hidden = !this.validationRequested || validity.zahlendePersonValid;\n        this.empfaengerMissingError.hidden = !this.validationRequested || validity.empfaengerValid;\n        return !Object.values(validity).some(v => v == false);\n    }\n\n    set personen(value: Person[]) {\n        this._personen = value;\n        this.zahlendePersonRenderer.update(value, (element, person) => {\n            element.person = person;\n            element.radioName = \"bezahlende-person\";\n        });\n        this.empfaengerRenderer.update(value, (element, person) => {\n            element.person = person;\n        });\n    }\n}\nexport const BezahlungEintragenFormTagName = \"bezahlung-eintragen-form\";\ncustomElements.define(BezahlungEintragenFormTagName, BezahlungEintragenForm);\n","export function toDateInputValue(d: Date) {\n    var local = new Date(d);\n    local.setMinutes(d.getMinutes() - d.getTimezoneOffset());\n    return local.toJSON().slice(0, 10);\n}","import startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import template from \"./BezahlungEintragenPage.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport \"./BezahlungEintragenPage.scss\";\nimport { BezahlungActionCreator, bezahlungActionCreatorFactory } from \"../../state/actions/BezahlungActionCreator\";\nimport { State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\nimport \"../BezahlungEintragenForm/BezahlungEintragenForm\";\nimport { BezahlungEintragenForm, BezahlungEintragenFormTagName } from \"../BezahlungEintragenForm/BezahlungEintragenForm\";\n\nexport class BezahlungEintragenPage extends HTMLElement {\n    private store: Store;\n    private subscription: () => void;\n    private routingActionCreator: RoutingActionCreator;\n    private appBar: AppBar;\n    private bezahlungActionCreator: BezahlungActionCreator;\n    private zurueckLink: HTMLAnchorElement;\n    private bezahlungEintragenForm: BezahlungEintragenForm;\n    private saveButton: HTMLButtonElement;\n    private saveEventListener: () => void;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.zurueckLink = this.querySelector(\"#zurueck-zum-kontokorrent\");\n        this.appBar = this.querySelector(AppBarTagName);\n        this.bezahlungEintragenForm = this.querySelector(BezahlungEintragenFormTagName);\n        this.saveButton = this.querySelector(\"#bezahlung-eintragen__save\");\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.bezahlungActionCreator = bezahlungActionCreatorFactory(serviceLocator);\n        this.appBar.addServices(serviceLocator);\n    }\n\n    connectedCallback() {\n        this.subscription = this.store.subscribe(\"kontokorrents\", s => this.applyStoreState(s));\n        this.appBar.addEventListener(\"gotokontokorrent\", (e: CustomEvent) => {\n            this.bezahlungActionCreator.bezahlungEintragenKontokorrentChanged(e.detail);\n        });\n        this.bezahlungActionCreator.bezahlungEintragenGeoeffnet();\n        convertLinks([this.zurueckLink], this.routingActionCreator);\n        this.applyStoreState(this.store.state);\n        this.saveEventListener = () => this.save();\n        this.saveButton.addEventListener(\"click\", this.saveEventListener);\n    }\n\n    save() {\n        if (this.bezahlungEintragenForm.validate()) {\n            let data = this.bezahlungEintragenForm.getData();\n        }\n    }\n\n    private applyStoreState(s: State) {\n        this.zurueckLink.href = s.kontokorrents.activeKontokorrentId ? `kontokorrents/${s.kontokorrents.activeKontokorrentId}` : null;\n        if (s.kontokorrents.activeKontokorrentId) {\n            this.bezahlungEintragenForm.personen = s.kontokorrents.kontokorrents[s.kontokorrents.activeKontokorrentId].personen;\n        }\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n        this.saveButton.removeEventListener(\"click\", this.saveEventListener);\n    }\n}\n\ncustomElements.define('bezahlung-eintragen-page', BezahlungEintragenPage);\n","import { RoutingActionCreator } from \"../state/actions/RoutingActionCreator\";\n\nexport function convertLinks(elements: Array<HTMLAnchorElement> | NodeListOf<HTMLAnchorElement>, routingActionCreator: RoutingActionCreator) {\n    elements.forEach((e: HTMLAnchorElement) => {\n        e.addEventListener(\"click\", ev => {\n            ev.preventDefault();\n            routingActionCreator.navigate(e.getAttribute(\"href\"));\n        });\n    });\n}","export class Popup extends HTMLElement {\n    private popupShown: boolean = false;\n    constructor() {\n        super();\n        this.keyListener = this.keyListener.bind(this);\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    connectedCallback() {\n        this.updateStyles();\n    }\n\n    private keyListener(ev: KeyboardEvent) {\n        if (ev.key == \"Escape\") {\n            this.hide();\n        }\n    }\n\n    private clickListener(ev: MouseEvent | TouchEvent) {\n        if (!this.contains(<Element>(event.target))) {\n            this.hide();\n        }\n    }\n\n    public hide() {\n        if (this.popupShown) {\n            document.removeEventListener(\"keydown\", this.keyListener);\n            document.removeEventListener(\"click\", this.clickListener);\n            this.popupShown = false;\n            this.updateStyles();\n        }\n    }\n\n    public show() {\n        if (!this.popupShown) {\n            document.addEventListener(\"keydown\", this.keyListener);\n            document.addEventListener(\"click\", this.clickListener);\n            this.popupShown = true;\n            this.updateStyles();\n        }\n    }\n\n    private updateStyles() {\n        this.style.display = this.popupShown ? \"block\" : \"none\";\n    }\n\n    public toggle() {\n        if (!this.popupShown) {\n            this.show();\n        }\n        else {\n            this.hide();\n\n        }\n    }\n\n    disconnectedCallback() {\n        this.hide();\n    }\n}\ncustomElements.define(\"app-popup\", Popup);\n","export class ArrayToElementRenderer<T, E extends Element, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n    \n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find(i => this.elementToKey.get(el) == getKey(i));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let t of list) {\n            let key = getKey(t);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}","export class ReuseableTemplate {\n    private instance: HTMLTemplateElement;\n    constructor(private readonly template: string) {\n    }\n\n    get(): DocumentFragment {\n        if (null == this.instance) {\n            this.instance = document.createElement(\"template\");\n            this.instance.innerHTML = this.template;\n        }\n        return document.importNode(this.instance.content, true);\n    }\n}\n"],"sourceRoot":""}