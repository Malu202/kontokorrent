{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/comlink/dist/esm/comlink.mjs","webpack:///./node_modules/idb/build/esm/index.js","webpack:///./node_modules/idb/build/esm/wrap-idb-value.js","webpack:///./src/worker/KontokorrentWorker.ts","webpack:///./src/lib/BalanceCalculator.ts","webpack:///./src/lib/KontokorrentDatabase.ts","webpack:///./src/lib/filterBezahlungen.ts","webpack:///./src/utils/groupBy.ts","webpack:///./src/utils/sortBy.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB,kBAAkB,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,yDAAyD,eAAe,KAAK;AAC7E;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sCAAsC,KAAK;AAC3C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsH;AACtH;;;;;;;;;;;;;AC1SA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmE;AACN;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yCAAyC,KAAK;AAC9E;AACA,wBAAwB,4DAAI;AAC5B;AACA;AACA,oBAAoB,4DAAI,sDAAsD,4DAAI;AAClF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,UAAU,KAAK;AACxC;AACA;AACA;AACA,WAAW,4DAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAAY;AACZ;AACA;AACA;AACA,CAAC;;AAE2B;;;;;;;;;;;;;AClF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB,EAAE;AACxqG;;;;;;;;;;;;;ACxLrG;AAAA;AAAA;AAAA;AAAA,IAAI,SAAS,GAAG,CAAC,SAAI,IAAI,SAAI,CAAC,SAAS,CAAC,IAAI,UAAU,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;IACnF,SAAS,KAAK,CAAC,KAAK,IAAI,OAAO,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5G,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC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","file":"kontokorrent-worker.a905b9bfe75982834aeb.bundle.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/v2/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/ts-loader/index.js!./src/worker/KontokorrentWorker.ts\");\n","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case 0 /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case 1 /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case 2 /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case 3 /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case 4 /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case 5 /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === 5 /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: 5 /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: 0 /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: 1 /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: 4 /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 2 /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 3 /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: 3 /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: 0 /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case 3 /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case 0 /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        const returnVal = await target[targetFuncName](...args);\n        if (isWrite)\n            await tx.done;\n        return returnVal;\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { expose } from \"comlink\";\r\nimport { BalanceCalculator } from \"../lib/BalanceCalculator\";\r\nexport function calculateBalance(kontokorrentId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return yield (new BalanceCalculator().calculateBalance(kontokorrentId));\r\n    });\r\n}\r\nconst exports = {\r\n    calculateBalance\r\n};\r\nexpose(exports, self);\r\n","import { KontokorrentDatabase } from \"./KontokorrentDatabase\";\r\nimport { KontokorrentBalance } from \"./KontokorrentBalance\";\r\nimport { filterBezahlungen } from \"./filterBezahlungen\";\r\nimport { groupBy } from \"../utils/groupBy\";\r\n\r\nclass GeteilteZahlung {\r\n    constructor(public wert: number,\r\n        public empfaengerAnzahl: number,\r\n        public isEmpfaenger: boolean) {\r\n\r\n    }\r\n}\r\n\r\nexport class BalanceCalculator {\r\n    private db: KontokorrentDatabase;\r\n\r\n    constructor() {\r\n        this.db = new KontokorrentDatabase();\r\n    }\r\n\r\n    erweitern(summe: number, nenner: number, andere: number[]) {\r\n        let c = 1;\r\n        for (let n of andere) {\r\n            if (n != nenner) {\r\n                c *= n;\r\n            }\r\n        }\r\n        return summe * c;\r\n    }\r\n\r\n    async calculateBalance(kontokorrentId: string) {\r\n        let aktionen = await this.db.getAktionen(kontokorrentId);\r\n        let bezahlungen = filterBezahlungen(aktionen);\r\n        let kk = await this.db.getKontokorrent(kontokorrentId);\r\n        let geteilteZahlungen: { [id: string]: GeteilteZahlung[] } = {};\r\n        for (let p of kk.personen) {\r\n            geteilteZahlungen[p.id] = [];\r\n        }\r\n        for (let b of bezahlungen) {\r\n            for (let e of b.empfaengerIds) {\r\n                geteilteZahlungen[e].push(new GeteilteZahlung(b.wert, b.empfaengerIds.length, true));\r\n                geteilteZahlungen[b.bezahlendePersonId].push(new GeteilteZahlung(b.wert, b.empfaengerIds.length, false));\r\n            }\r\n        }\r\n        let balance: KontokorrentBalance = {};\r\n        for (let p of kk.personen) {\r\n            let gruppen = groupBy(geteilteZahlungen[p.id], \"empfaengerAnzahl\");\r\n            let alleNenner = Array.from(gruppen.keys());\r\n            let gesamtNenner = Array.from(gruppen.keys()).reduce((p, c) => p * c, 1);\r\n            if (gesamtNenner < 362880) {\r\n                let gesamtSumme = 0;\r\n                for (let g of gruppen.keys()) {\r\n                    let zahlungen = gruppen.get(g);\r\n                    let summe = zahlungen.reduce((p, c) => p + (c.isEmpfaenger ? c.wert : -c.wert), 0);\r\n                    gesamtSumme += this.erweitern(summe, g, alleNenner);\r\n                }\r\n                balance[p.id] = gesamtSumme / gesamtNenner;\r\n            }\r\n            else {\r\n                let gesamtSumme = 0;\r\n                for (let g of gruppen.keys()) {\r\n                    let zahlungen = gruppen.get(g);\r\n                    let summe = zahlungen.reduce((p, c) => p + (c.isEmpfaenger ? c.wert : -c.wert), 0);\r\n                    gesamtSumme += summe / g;\r\n                }\r\n                balance[p.id] = gesamtSumme;\r\n            }\r\n        }\r\n        return balance;\r\n    }\r\n}","import { openDB, IDBPDatabase, DBSchema } from \"idb\";\r\nimport { KontokorrentDbModel } from \"./KontokorrentDbModel\";\r\nimport { sortByAlphabetically } from \"../utils/sortBy\";\r\nimport { Aktion } from \"../api/Aktion\";\r\nimport { AktionDbModel } from \"./AktionDbModel\";\r\n\r\n\r\nconst KontokorrentsStore = \"KontokorrentsStore\";\r\nconst AppStateStore = \"AppStateStore\";\r\nconst AktionenStore = \"AktionenStore\";\r\n\r\ninterface AppSettings {\r\n    id: number;\r\n    zuletztGesehenerKontokorrentId: string\r\n}\r\n\r\ninterface KontokorrentDbSchema extends DBSchema {\r\n    KontokorrentsStore: {\r\n        key: string;\r\n        value: KontokorrentDbModel;\r\n        indexes: { \"oeffentlicherName\": string };\r\n    };\r\n    AppStateStore: {\r\n        value: AppSettings;\r\n        key: number;\r\n    };\r\n    AktionenStore: {\r\n        key: [number, string],\r\n        value: AktionDbModel,\r\n        indexes: { \"kontokorrentId\": string };\r\n    };\r\n}\r\n\r\n\r\nconst initialSettings: (() => AppSettings) = () => { return { id: 0, zuletztGesehenerKontokorrentId: null } };\r\nexport class KontokorrentDatabase {\r\n\r\n    private async withInitialized<T>(cb: (db: IDBPDatabase<KontokorrentDbSchema>) => Promise<T>) {\r\n        let db = await openDB<KontokorrentDbSchema>(\"kontokorrent-db\", 3, {\r\n            upgrade(db, oldVersion: number, newVersion: number) {\r\n                if (oldVersion < 1) {\r\n                    let store = db.createObjectStore(KontokorrentsStore, { keyPath: \"id\" });\r\n                    store.createIndex(\"oeffentlicherName\", \"oeffentlicherName\");\r\n                }\r\n                if (oldVersion < 2) {\r\n                    let store = db.createObjectStore(AppStateStore, { keyPath: \"id\" });\r\n                    store.put(initialSettings());\r\n                }\r\n                if (oldVersion < 3) {\r\n                    let store = db.createObjectStore(AktionenStore, { keyPath: [\"laufendeNummer\", \"kontokorrentId\"] });\r\n                    store.createIndex(\"kontokorrentId\", \"kontokorrentId\");\r\n                }\r\n            },\r\n        });\r\n        try {\r\n            return await cb(db);\r\n        }\r\n        finally {\r\n            db.close();\r\n        }\r\n    }\r\n\r\n    async getKontokorrents(): Promise<KontokorrentDbModel[]> {\r\n        return await this.withInitialized(async db => {\r\n            return sortByAlphabetically((await db.getAll(KontokorrentsStore)), k => k.name);\r\n        });\r\n    }\r\n\r\n    async addAktionen(id: string, aktionen: Aktion[]): Promise<void> {\r\n        if (!aktionen.length) {\r\n            return;\r\n        }\r\n        return await this.withInitialized(async db => {\r\n            const tx = db.transaction(AktionenStore, \"readwrite\");\r\n            let tasks = aktionen.map(v => {\r\n                let a: AktionDbModel = {\r\n                    ...v,\r\n                    kontokorrentId: id\r\n                };\r\n                return a;\r\n            }).map(a => tx.store.add(a));\r\n            await Promise.all(tasks);\r\n            await tx.done;\r\n            const tx2 = db.transaction(KontokorrentsStore, \"readwrite\");\r\n            let kk = await tx2.store.get(id);\r\n            let max = Math.max(...aktionen.map(v => v.laufendeNummer));\r\n            kk.laufendeNummer = max;\r\n            await tx2.store.put(kk);\r\n            await tx2.done;\r\n        });\r\n    }\r\n\r\n    async getZuletztGesehenerKontokorrentId(): Promise<string> {\r\n        return await this.withInitialized(async db => {\r\n            let appState = await db.get(AppStateStore, 0);\r\n            if (appState.zuletztGesehenerKontokorrentId) {\r\n                return appState.zuletztGesehenerKontokorrentId;\r\n            }\r\n            else {\r\n                let kks = await (await this.getKontokorrents());\r\n                if (kks.length) {\r\n                    return kks[0].id;\r\n                }\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    async setZuletztGesehenerKontokorrentId(id: string): Promise<void> {\r\n        return await this.withInitialized(async db => {\r\n            let appState = await db.get(AppStateStore, 0);\r\n            appState.zuletztGesehenerKontokorrentId = id;\r\n            await db.put(AppStateStore, appState);\r\n        });\r\n    }\r\n\r\n    async setKontokorrents(kontokorrents: {\r\n        name: string, id: string, personen: { name: string, id: string }[],\r\n        oeffentlicherName: string\r\n    }[]): Promise<string[]> {\r\n        return await this.withInitialized(async db => {\r\n            let existing: KontokorrentDbModel[] = (await db.getAll(KontokorrentsStore));\r\n            for (let v of existing.filter(e => !kontokorrents.some(d => e.id === d.id))) {\r\n                await db.delete(KontokorrentsStore, v.id);\r\n            }\r\n            let newIds: string[] = [];\r\n            for (let v of kontokorrents) {\r\n                let ex = existing.find(d => d.id == v.id);\r\n                if (!ex) {\r\n                    newIds.push(v.id);\r\n                }\r\n                let combined = {\r\n                    ...ex, name: v.name, personen: v.personen, id: v.id,\r\n                    oeffentlicherName: v.oeffentlicherName\r\n                };\r\n                await db.put(KontokorrentsStore, combined);\r\n            }\r\n            return newIds;\r\n        });\r\n    }\r\n\r\n    async addKontokorrent(kk: KontokorrentDbModel): Promise<void> {\r\n        return await this.withInitialized(async db => {\r\n            if (!await db.get(KontokorrentsStore, kk.id)) {\r\n                await db.add(KontokorrentsStore, kk);\r\n            }\r\n        });\r\n    }\r\n\r\n    async getKontokorrent(id: string): Promise<KontokorrentDbModel> {\r\n        return await this.withInitialized(async db => {\r\n            return <KontokorrentDbModel>await db.get(KontokorrentsStore, id);\r\n        });\r\n    }\r\n\r\n    async getPerOeffentlichName(id: string): Promise<KontokorrentDbModel> {\r\n        return await this.withInitialized(async db => {\r\n            return <KontokorrentDbModel>await db.getFromIndex(KontokorrentsStore, \"oeffentlicherName\", id);\r\n        });\r\n    }\r\n\r\n    async getAktionen(id: string): Promise<AktionDbModel[]> {\r\n        return await this.withInitialized(async db => {\r\n            return await db.getAllFromIndex(AktionenStore, \"kontokorrentId\", id);\r\n        });\r\n    }\r\n\r\n    async clear() {\r\n        return await this.withInitialized(async db => {\r\n            await db.clear(AktionenStore);\r\n            await db.clear(KontokorrentsStore);\r\n            await db.put(AppStateStore, initialSettings());\r\n        });\r\n    }\r\n}\r\n\r\n","import { BezahlungDbModel } from \"./BezahlungDbModel\";\r\nimport { AktionDbModel } from \"./AktionDbModel\";\r\n\r\nexport function filterBezahlungen(aktionen: AktionDbModel[]) {\r\n    let bezahlungenMap: { [id: string]: BezahlungDbModel } = {};\r\n    for (let b of aktionen) {\r\n        if (b.bearbeiteteBezahlungId) {\r\n            delete bezahlungenMap[b.bearbeiteteBezahlungId];\r\n        }\r\n        if (b.geloeschteBezahlungId) {\r\n            delete bezahlungenMap[b.bearbeiteteBezahlungId];\r\n        }\r\n        else {\r\n            bezahlungenMap[b.bezahlung.id] = b.bezahlung;\r\n        }\r\n    }\r\n    let bezahlungen = Object.values(bezahlungenMap);\r\n    return bezahlungen;\r\n}","export function groupBy<T, K extends keyof T>(list: T[], key: K) {\r\n    const map = new Map<T[K], T[]>();\r\n    list.forEach((item) => {\r\n        const k = item[key];\r\n        const collection = map.get(k);\r\n        if (!collection) {\r\n            map.set(k, [item]);\r\n        } else {\r\n            collection.push(item);\r\n        }\r\n    });\r\n    return map;\r\n}\r\n","export function sortByAlphabetically<T, P extends keyof T>(collection: T[], keySelector: (x: T) => string): T[] {\r\n    return collection.sort((a, b) => keySelector(a).toLowerCase().localeCompare(keySelector(b).toLowerCase()));\r\n}"],"sourceRoot":""}