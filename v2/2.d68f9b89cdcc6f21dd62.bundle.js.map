{"version":3,"sources":["webpack:///./src/components/convertLinks.ts","webpack:///./src/utils/ArrayToElementRenderer.ts","webpack:///./src/components/ui-components/popup/popup.ts","webpack:///./src/components/AppBar/AppBar.html","webpack:///./src/components/KontokorrentSelect/KontokorrentSelect.html","webpack:///./src/components/KontokorrentSelect/KontokorrentSelectList.html","webpack:///./src/components/KontokorrentSelect/KontokorrentSelectListEntry.html","webpack:///./src/components/KontokorrentSelect/KontokorrentSelectListEntry.ts","webpack:///./src/components/KontokorrentSelect/KontokorrentSelectList.ts","webpack:///./src/components/KontokorrentSelect/KontokorrentSelect.ts","webpack:///./src/components/AppBar/AppBar.ts","webpack:///./src/components/BezahlungEintragenPage/BezahlungEintragenPage.html","webpack:///./src/state/actions/BezahlungActionCreator.ts","webpack:///./src/components/BezahlungEintragenPage/BezahlungEintragenPage.ts"],"names":["convertLinks","elements","routingActionCreator","forEach","e","addEventListener","ev","preventDefault","navigate","getAttribute","ArrayToElementRenderer","listElement","keySelector","createElement","this","keyToElement","Map","elementToKey","WeakMap","list","updateElement","keyCache","getKey","d","get","key","set","x","Array","from","children","el","data","find","i","removeChild","before","nextKeyToElement","t","childElement","firstElementChild","prepend","nextElementSibling","insertAdjacentElement","Popup","HTMLElement","super","popupShown","keyListener","bind","clickListener","updateStyles","hide","contains","event","document","removeEventListener","style","display","show","customElements","define","module","exports","innerHTML","name","querySelector","link","clickEvent","dispatchEvent","CustomEvent","detail","kontokorrent","id","bubbles","isActive","innerText","href","classList","toggle","_kontokorrents","kontokorrentsRenderer","k","li","appendChild","update","firstChild","_activeKontokorrentId","kontokorrents","sortBy","kontokorrentName","kontokorrentSelectList","addButton","popup","updateAttributes","stopPropagation","activeKontokorrentId","updatesStyle","length","activeKontokorrent","kontokorrentSelect","logoutDialog","body","add","accountActionCreator","logout","querySelectorAll","subscription","store","subscribe","state","applyStoreState","navigateLogin","Object","values","setAttribute","serviceLocator","RoutingActionCreator","locate","AccountActionCreator","remove","AppBarTagName","BezahlungKontokorrentGeandert","kontokorrentId","type","BezahlungActionCreator","db","getZuletztGesehenerKontokorrentId","dispatch","setZuletztGesehenerKontokorrentId","zurueckLink","appBar","AppBar","bezahlungActionCreator","addServices","s","bezahlungEintragenKontokorrentChanged","bezahlungEintragenGeoeffnet"],"mappings":"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","file":"2.d68f9b89cdcc6f21dd62.bundle.js","sourcesContent":["import { RoutingActionCreator } from \"../state/actions/RoutingActionCreator\";\n\nexport function convertLinks(elements: Array<HTMLAnchorElement> | NodeListOf<HTMLAnchorElement>, routingActionCreator: RoutingActionCreator) {\n    elements.forEach((e: HTMLAnchorElement) => {\n        e.addEventListener(\"click\", ev => {\n            ev.preventDefault();\n            routingActionCreator.navigate(e.getAttribute(\"href\"));\n        });\n    });\n}","export class ArrayToElementRenderer<T, E extends HTMLElement, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find(i => this.elementToKey.get(el) == getKey(i));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let t of list) {\n            let key = getKey(t);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}","export class Popup extends HTMLElement {\n    private popupShown: boolean = false;\n    constructor() {\n        super();\n        this.keyListener = this.keyListener.bind(this);\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    connectedCallback() {\n        this.updateStyles();\n    }\n\n    private keyListener(ev: KeyboardEvent) {\n        if (ev.key == \"Escape\") {\n            this.hide();\n        }\n    }\n\n    private clickListener(ev: MouseEvent | TouchEvent) {\n        if (!this.contains(<Element>(event.target))) {\n            this.hide();\n        }\n    }\n\n    public hide() {\n        if (this.popupShown) {\n            document.removeEventListener(\"keydown\", this.keyListener);\n            document.removeEventListener(\"click\", this.clickListener);\n            this.popupShown = false;\n            this.updateStyles();\n        }\n    }\n\n    public show() {\n        if (!this.popupShown) {\n            document.addEventListener(\"keydown\", this.keyListener);\n            document.addEventListener(\"click\", this.clickListener);\n            this.popupShown = true;\n            this.updateStyles();\n        }\n    }\n\n    private updateStyles() {\n        this.style.display = this.popupShown ? \"block\" : \"none\";\n    }\n\n    public toggle() {\n        if (!this.popupShown) {\n            this.show();\n        }\n        else {\n            this.hide();\n\n        }\n    }\n\n    disconnectedCallback() {\n        this.hide();\n    }\n}\ncustomElements.define(\"app-popup\", Popup);\n","// Module\nvar code = \"<header class=app-bar> <kontokorrent-select class=app-bar__kontokorrent-select></kontokorrent-select> <nav class=app-bar__links> <button id=logout-button class=app-bar__link title=Logout> <span class=material-icons> exit_to_app </span> </button> <a href=info class=app-bar__link title=\\\"Informationen über diese App\\\"> <span class=material-icons> info </span> </a> </nav> </header> <app-popup id=logout-dialog> <div class=dialog__backdrop></div> <div class=dialog> <p> Wirklich aus allen Kontokorrents ausloggen? </p> <div class=dialog__button-pane> <button id=abort-logout class=button>Abbrechen</button> <button id=confirm-logout class=button>Ausloggen</button> </div> </div> </app-popup>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=kontokorrent-select-wrapper> <div class=kontokorrent-select> <h1 data-ref=kontokorrent-name class=kontokorrent-select__name>Kontokorrent</h1> <button class=kontokorrent-select__choose title=\\\"anderen Kontokorrent wählen\\\"> <span class=material-icons> arrow_drop_down </span> </button> </div> <app-popup class=kontokorrent-select__popup> <kontokorrent-select-list></kontokorrent-select-list> <div class=kontokorrent-select__buttons> <button id=add-kontokorrent class=button>weiteren hinzufügen</button> </div> </app-popup> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<ol data-ref=list class=kontokorrent-select-list> </ol>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<a data-ref=link class=kontokorrent-select-list__entry> <span data-ref=name></span> </a>\";\n// Exports\nmodule.exports = code;","import template from \"./KontokorrentSelectListEntry.html\";\nimport { KontokorrentState } from \"../../state/State\";\n\n\nexport class KontokorrentSelectListEntry extends HTMLElement {\n    private name: HTMLSpanElement;\n    private link: HTMLAnchorElement;\n    private kontokorrent: KontokorrentState;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.name = this.querySelector(`[data-ref=\"name\"]`);\n        this.link = this.querySelector(`[data-ref=\"link\"]`);\n        this.clickEvent = this.clickEvent.bind(this);\n    }\n\n    connectedCallback() {\n        this.link.addEventListener(\"click\", this.clickEvent);\n    }\n\n    private clickEvent(e: MouseEvent): void {\n        e.preventDefault();\n        this.dispatchEvent(new CustomEvent(\"gotokontokorrent\", { detail: this.kontokorrent.id, bubbles: true }));\n    }\n\n    disconnectedCallback() {\n        this.link.removeEventListener(\"click\", this.clickEvent);\n    }\n\n    update(kontokorrent: KontokorrentState, isActive: boolean) {\n        this.kontokorrent = kontokorrent;\n        this.name.innerText = kontokorrent.name;\n        this.link.href = `kontokorrents/${kontokorrent.id}`;\n        this.link.classList.toggle(\"kontokorrent-select-list__entry--active\", isActive);\n    }\n}\nexport const KontokorrentSelectListEntryTagName = \"kontokorrent-select-list-entry\";\ncustomElements.define(KontokorrentSelectListEntryTagName, KontokorrentSelectListEntry);\n","import template from \"./KontokorrentSelectList.html\";\nimport \"./KontokorrentSelectList.scss\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { sortByAlphabetically } from \"../../utils/sortBy\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { KontokorrentSelectListEntry } from \"./KontokorrentSelectListEntry\";\n\nexport class KontokorrentSelectList extends HTMLElement {\n    private list: HTMLOListElement;\n    private _kontokorrents: KontokorrentState[];\n    private _activeKontokorrentId: string;\n    private kontokorrentsRenderer: ArrayToElementRenderer<KontokorrentState, HTMLLIElement, string>;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.list = this.querySelector(`[data-ref=\"list\"]`);\n        this._kontokorrents = [];\n        this.kontokorrentsRenderer = new ArrayToElementRenderer(this.list,\n            (k: KontokorrentState) => k.id,\n            () => {\n                let li = document.createElement(\"li\");\n                li.appendChild(new KontokorrentSelectListEntry());\n                return li;\n            });\n    }\n\n    connectedCallback() {\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private update() {\n        this.kontokorrentsRenderer.update(this._kontokorrents,\n            (li, kontokorrent) => {\n                let x: KontokorrentSelectListEntry = <KontokorrentSelectListEntry>li.firstChild;\n                x.update(kontokorrent, this._activeKontokorrentId == kontokorrent.id);\n            });\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this._kontokorrents = sortByAlphabetically(kontokorrents, k => k.name);\n        this.update();\n    }\n\n    set activeKontokorrentId(id: string) {\n        this._activeKontokorrentId = id;\n        this.update();\n    }\n}\nexport const KontokorrentSelectListTagName = \"kontokorrent-select-list\";\ncustomElements.define(KontokorrentSelectListTagName, KontokorrentSelectList);\n","import template from \"./KontokorrentSelect.html\";\nimport \"./KontokorrentSelect.scss\";\nimport \"./KontokorrentSelectList\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { KontokorrentSelectListTagName, KontokorrentSelectList } from \"./KontokorrentSelectList\";\nimport { Popup } from \"../ui-components/popup/popup\";\nimport \"../ui-components/popup/popup\";\n\nexport class KontokorrentSelect extends HTMLElement {\n    private kontokorrentName: HTMLHeadingElement;\n    private popup: Popup;\n    private kontokorrentSelectList: KontokorrentSelectList;\n    private addButton: HTMLButtonElement;\n    private activeKontokorrentId: string;\n    private _kontokorrents: KontokorrentState[];\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.kontokorrentName = this.querySelector(`[data-ref=\"kontokorrent-name\"]`);\n        this.kontokorrentSelectList = this.querySelector(KontokorrentSelectListTagName);\n        this.addButton = this.querySelector(`#add-kontokorrent`);\n        this._kontokorrents = null;\n    }\n\n    connectedCallback() {\n        this.popup = this.querySelector(`app-popup`);\n        this.updateAttributes();\n        this.addEventListener(\"click\", e => {\n            if (!this.popup.contains(<Element>(event.target))) {\n                this.popup.toggle();\n                e.stopPropagation();\n            }\n        });\n        this.addButton.addEventListener(\"click\", e => {\n            this.dispatchEvent(new CustomEvent(\"addkontokorrent\"));\n        });\n        this.kontokorrentSelectList.addEventListener(\"gotokontokorrent\", () => {\n            this.popup.hide();\n        })\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.activeKontokorrentId = this.getAttribute(\"active-kontokorrent-id\");\n        this.kontokorrentSelectList.activeKontokorrentId = this.activeKontokorrentId;\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [\"active-kontokorrent-id\"];\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this.kontokorrentSelectList.kontokorrents = kontokorrents;\n        this._kontokorrents = kontokorrents;\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        if (this._kontokorrents && this._kontokorrents.length) {\n            let activeKontokorrent = this._kontokorrents.find(k => k.id == this.activeKontokorrentId);\n            if (activeKontokorrent) {\n                this.kontokorrentName.innerText = activeKontokorrent.name;\n            }\n            else {\n                this.kontokorrentName.innerText = \"(Kontokorrent wählen)\";\n            }\n        }\n    }\n\n}\nexport const KontokorrentSelectTagName = \"kontokorrent-select\";\ncustomElements.define(KontokorrentSelectTagName, KontokorrentSelect);\n","import template from \"./AppBar.html\";\nimport \"./AppBar.scss\";\nimport { RoutingActionCreator } from \"../../state/actions/RoutingActionCreator\";\nimport { convertLinks } from \"../convertLinks\";\nimport \"../KontokorrentSelect/KontokorrentSelect\";\nimport { KontokorrentSelectTagName, KontokorrentSelect } from \"../KontokorrentSelect/KontokorrentSelect\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { AccountActionCreator } from \"../../state/actions/AccountActionCreator\";\nimport { Store } from \"../../state/Store\";\nimport { State } from \"../../state/State\";\nimport { Popup } from \"../ui-components/popup/popup\";\n\nexport class AppBar extends HTMLElement {\n    private kontokorrentSelect: KontokorrentSelect;\n    private store: Store;\n    private routingActionCreator: RoutingActionCreator;\n    private accountActionCreator: AccountActionCreator;\n    private logoutDialog: Popup;\n    private subscription: () => void;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.kontokorrentSelect = this.querySelector(KontokorrentSelectTagName);\n        this.logoutDialog = this.querySelector(\"#logout-dialog\");\n    }\n\n    connectedCallback() {\n        document.body.classList.add(\"body--app-bar\");\n        this.querySelector(\"#logout-button\").addEventListener(\"click\", (e: MouseEvent) => {\n            this.logoutDialog.toggle();\n            e.stopPropagation();\n        });\n        this.querySelector(\"#confirm-logout\").addEventListener(\"click\", async () => {\n            await this.accountActionCreator.logout();\n        });\n        this.querySelector(\"#abort-logout\").addEventListener(\"click\", () => {\n            this.logoutDialog.hide();\n        });\n        convertLinks(this.querySelectorAll(\"a\"), this.routingActionCreator);\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n        this.kontokorrentSelect.addEventListener(\"addkontokorrent\", () => {\n            this.routingActionCreator.navigateLogin();\n        });\n    }\n\n    applyStoreState(state: State): void {\n        this.kontokorrentSelect.kontokorrents = Object.values(state.kontokorrents.kontokorrents);\n        this.kontokorrentSelect.setAttribute(\"active-kontokorrent-id\", state.kontokorrents.activeKontokorrentId);\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = RoutingActionCreator.locate(serviceLocator);\n        this.accountActionCreator = AccountActionCreator.locate(serviceLocator);\n    }\n\n    disconnectedCallback() {\n        document.body.classList.remove(\"body--app-bar\");\n        this.subscription();\n    }\n}\nexport const AppBarTagName = \"app-bar\";\ncustomElements.define(AppBarTagName, AppBar);\n","// Module\nvar code = \"<app-bar></app-bar> <a id=zurueck-zum-kontokorrent>zurück zum Kontokorrent</a>\";\n// Exports\nmodule.exports = code;","import { Store } from \"../Store\";\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { Action } from \"../lib/Action\";\nimport { ActionNames } from \"./ActionNames\";\n\nexport class BezahlungKontokorrentGeandert implements Action {\n    readonly type = ActionNames.BezahlungKontokorrentGeandert;\n    constructor(public kontokorrentId: string) {\n    }\n}\n\nexport type BezahlungActions = BezahlungKontokorrentGeandert;\n\nexport class BezahlungActionCreator {\n    large: string;\n\n\n    static locate(serviceLocator: ServiceLocator) {\n        return new BezahlungActionCreator(serviceLocator.store,\n            serviceLocator.db);\n    }\n    constructor(private store: Store,\n        private db: KontokorrentDatabase) {\n    }\n\n    async bezahlungEintragenGeoeffnet() {\n        let id = this.store.state.kontokorrents.activeKontokorrentId || await this.db.getZuletztGesehenerKontokorrentId();\n        this.store.dispatch(new BezahlungKontokorrentGeandert(id));\n    }\n\n    async bezahlungEintragenKontokorrentChanged(id: string) {\n        this.store.dispatch(new BezahlungKontokorrentGeandert(id));\n        await this.db.setZuletztGesehenerKontokorrentId(id);\n    }\n}\n","import template from \"./BezahlungEintragenPage.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator } from \"../../state/actions/RoutingActionCreator\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport \"./BezahlungEintragenPage.scss\";\nimport { BezahlungActionCreator } from \"../../state/actions/BezahlungActionCreator\";\nimport { State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\n\nexport class BezahlungEintragenPage extends HTMLElement {\n    private store: Store;\n    private subscription: () => void;\n    private routingActionCreator: RoutingActionCreator;\n    private appBar: AppBar;\n    private bezahlungActionCreator: BezahlungActionCreator;\n    private zurueckLink: HTMLAnchorElement;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.zurueckLink = this.querySelector(\"#zurueck-zum-kontokorrent\");\n        this.appBar = this.querySelector(AppBarTagName);\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = RoutingActionCreator.locate(serviceLocator);\n        this.bezahlungActionCreator = BezahlungActionCreator.locate(serviceLocator);\n        this.appBar.addServices(serviceLocator);\n    }\n\n    connectedCallback() {\n        this.subscription = this.store.subscribe(\"kontokorrents\", s => this.applyStoreState(s));\n        this.appBar.addEventListener(\"gotokontokorrent\", (e: CustomEvent) => {\n            this.bezahlungActionCreator.bezahlungEintragenKontokorrentChanged(e.detail);\n        });\n        this.bezahlungActionCreator.bezahlungEintragenGeoeffnet();\n        convertLinks([this.zurueckLink], this.routingActionCreator);\n    }\n\n    private applyStoreState(s: State) {\n        this.zurueckLink.href = s.kontokorrents.activeKontokorrentId ? `kontokorrents/${s.kontokorrents.activeKontokorrentId}` : null;\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n    }\n}\n\ncustomElements.define('bezahlung-eintragen-page', BezahlungEintragenPage);\n"],"sourceRoot":""}