{"version":3,"sources":["webpack://kontokorrent/./src/utils/formatCurrency.ts","webpack://kontokorrent/./src/utils/round.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeigeElement.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeige.ts","webpack://kontokorrent/./src/components/BezahlungCard/BezahlungCard.ts","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfWeek/index.js","webpack://kontokorrent/./src/utils/groupBy.ts","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenGroup.ts","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenView.ts","webpack://kontokorrent/./node_modules/date-fns/esm/addDays/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfToday/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/endOfWeek/index.js","webpack://kontokorrent/./src/state/actions/KontokorrentActionCreator.ts","webpack://kontokorrent/./src/lib/filterBezahlungen.ts","webpack://kontokorrent/./src/components/KontokorrentPage/KontokorrentPage.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeige.html","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeigeElement.html","webpack://kontokorrent/./src/components/BezahlungCard/BezahlungCard.html","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenGroup.html","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenView.html","webpack://kontokorrent/./src/components/KontokorrentPage/KontokorrentPage.html"],"names":["formatCurrency","wert","valueString","indexOfE","indexOfe","power","Betrag","toString","indexOf","parseFloat","substring","Number","Math","round","Kommaindex","length","PersonNameAttribute","BalanceAttribute","BalanceRangeAttribute","template","ReuseableTemplate","HTMLElement","super","this","appendChild","get","personNameElement","querySelector","balanceTextElement","balanceContainerElement","barElement","requestAnimationFrame","style","transform","updatesStyle","updateAttributes","personName","getAttribute","balance","balanceRange","max","innerText","scale","sign","abs","balanceTransform","classList","add","remove","customElements","define","BalanceAnzeige","innerHTML","personenRenderer","ArrayToElementRenderer","b","id","personen","Object","values","map","v","update","e","setAttribute","name","BeschreibungAttribute","WertAttribute","BezahlendePersonAttribute","EmpfaengerAttribute","StatusAttribute","attributeStore","beschreibung","bezahlendePerson","empfaenger","status","beschreibungElement","bezahlendePersonElement","empfaengerElement","wertElement","doneElement","doneAllElement","syncElement","prop","getAtt","att","checkChanged","some","display","toInteger","dirtyNumber","NaN","number","isNaN","ceil","floor","startOfWeek","dirtyDate","dirtyOptions","requiredArgs","arguments","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","date","toDate","day","getDay","diff","setDate","getDate","setHours","groupBy","list","key","Map","forEach","item","k","collection","push","set","BezahlungenGroup","container","titleElement","bezahlungenRenderer","bezahlungen","bezahlendePersonName","t","BezahlungenView","minTage","minEintraege","all","bezahlungenContainer","showMoreButton","showMoreClick","bind","groupRenderer","s","addEventListener","anzahlEintraege","last","lastElementChild","scrollIntoView","setShowMoreButtonDisplay","z","empfaengerIds","find","p","join","render","sorted","sort","a","zeitpunkt","filtered","filter","dirtyAmount","amount","Date","addDays","startOfDay","now","slice","mapped","bezahlendePersonId","formatEmpfaenger","tag","woche","isWeek","grouped","Array","of","entries","reduce","c","sortedGroups","d","setBezahlungen","title","formatWeek","formatDay","val","weekformat","endWeek","endOfWeek","dayAndMonth","Intl","DateTimeFormat","month","format","getMonth","weekday","year","KontokorrentGeoeffnet","type","KontokorrentBezahlungen","kontokorrentId","KontokorrentSynchronisieren","KontokorrentSynchronisiert","KontokorrentBalanceAktualisiert","KontokorrentActionCreator","store","apiClient","db","workerService","aktionen","bezahlungenMap","ordered","laufendeNummer","bearbeiteteBezahlungId","geloeschteBezahlungId","bezahlung","filterBezahlungen","getAktionen","zwischengespeicherte","getZwischengespeicherteBezahlungenForKontokorrent","dispatch","getWorker","calculateBalance","Promise","refreshBezahlungen","getLaufendeNummer","res","success","addAktionen","refreshKontokorrent","getKontokorrent","tasks","setZuletztGesehenerKontokorrentId","kontokorrentSynchronisieren","KontokorrentPage","appBar","AppBar","balanceAnzeige","bezahlungenView","kontokorrentSpinner","serviceLocator","routingActionCreator","kontokorrentActionCreator","kontokorrentActionCreatorFactory","kontokorrentListenActionCreator","addServices","kontokorrentIdParameter","navigiereZuLetztGesehenem","subscription","subscribe","state","applyStoreState","navigateKontokorrent","detail","convertLinks","querySelectorAll","kontokorrent","kontokorrents","activeKontokorrentId","document","setBalance","synchronisieren","kontokorrentOeffnen","module","exports"],"mappings":"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","file":"1e45b1c05e011070dbaf.bundle.js","sourcesContent":["import { round } from \"./round\";\n\nexport function formatCurrency(wert: number) {\n    var Betrag: string = \"\" + round(wert, 2);\n    var Kommaindex = Betrag.toString().indexOf(\".\");\n    var Nachkommastellen = 0;\n    if (Kommaindex != -1) {\n        Nachkommastellen = Betrag.toString().length - (Kommaindex + 1);\n        if (Nachkommastellen == 1)\n            Betrag += '0';\n    }\n    return Betrag;\n}\n","export function round(value: number, decimals: number) {\n\n    //Removing scientific notation if used:\n    var valueString = value.toString();\n    var indexOfE = valueString.indexOf(\"E\");\n    var indexOfe = valueString.indexOf(\"e\");\n    var power = 0;\n    if (indexOfe > -1) {\n        power = parseFloat(valueString.substring(indexOfe + 1));\n        valueString = valueString.substring(0, indexOfe)\n    } else if (indexOfE > -1) {\n        power = parseFloat(valueString.substring(indexOfE + 1));\n        valueString = valueString.substring(0, indexOfE)\n    }\n    //round\n    return Number(Math.round(Number(valueString + 'e' + (power + decimals))) + 'e-' + (decimals));\n}","import templateContent from \"./BalanceAnzeigeElement.html\";\nimport \"./BalanceAnzeigeElement.scss\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { ReuseableTemplate } from \"../../utils/ReuseableTemplate\";\n\nexport const PersonNameAttribute = \"person-name\";\nexport const BalanceAttribute = \"balance\";\nexport const BalanceRangeAttribute = \"balance-range\";\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class BalanceAnzeigeElement extends HTMLElement {\n    private personName: string;\n    private balance: number;\n    private personNameElement: HTMLSpanElement;\n    private balanceTextElement: HTMLSpanElement;\n    private balanceRange: number;\n    private barElement: HTMLDivElement;\n    private balanceContainerElement: HTMLSpanElement;\n\n    constructor() {\n        super();\n        this.appendChild(template.get());\n        this.personNameElement = this.querySelector(`[data-ref=\"person-name\"]`);\n        this.balanceTextElement = this.querySelector(`[data-ref=\"balance-text\"]`);\n        this.balanceContainerElement = this.querySelector(`[data-ref=\"balance-container\"]`);\n        this.barElement = this.querySelector(`[data-ref=\"bar\"]`);\n    }\n\n    connectedCallback() {\n        requestAnimationFrame(() => {\n            this.barElement.style.transform = `scaleY(0)`;\n            this.updatesStyle();\n        });\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.personName = this.getAttribute(PersonNameAttribute);\n        this.balance = parseFloat(this.getAttribute(BalanceAttribute));\n        this.balanceRange = Math.max(2, parseFloat(this.getAttribute(BalanceRangeAttribute)));\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [PersonNameAttribute, BalanceAttribute, BalanceRangeAttribute];\n    }\n\n    private updatesStyle() {\n        requestAnimationFrame(() => {\n            this.personNameElement.innerText = this.personName;\n            this.balanceTextElement.innerText = formatCurrency(this.balance);\n            let scale = Math.sign(this.balance) * Math.abs(this.balance) / this.balanceRange;\n            let balanceTransform = scale * 1.9;\n            this.barElement.style.transform = `scaleY(${scale})`;\n            this.balanceContainerElement.style.transform = Math.sign(this.balance) < 0 ? `translateY(calc(${balanceTransform}em - 150%))`\n                : `translateY(calc(${balanceTransform}em + 50%))`;\n            if (scale > 0) {\n                this.barElement.classList.add(\"balance-anzeige-element__bar--negative\");\n                this.barElement.classList.remove(\"balance-anzeige-element__bar--positive\");\n            }\n            else {\n                this.barElement.classList.remove(\"balance-anzeige-element__bar--negative\");\n                this.barElement.classList.add(\"balance-anzeige-element__bar--positive\");\n            }\n        });\n    }\n\n}\nexport const BalanceAnzeigeElementTagName = \"balance-anzeige-element\";\ncustomElements.define(BalanceAnzeigeElementTagName, BalanceAnzeigeElement);\n","import template from \"./BalanceAnzeige.html\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BalanceAnzeigeElement, PersonNameAttribute, BalanceAttribute, BalanceRangeAttribute } from \"./BalanceAnzeigeElement\";\nimport { Person } from \"../../state/State\";\n\nexport class BalanceAnzeige extends HTMLElement {\n    private balanceRange: number;\n    private personen: Person[];\n    private personenRenderer: ArrayToElementRenderer<Person, HTMLElement, string>;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.personenRenderer = new ArrayToElementRenderer(this,\n            (b: Person) => b.id,\n            b => new BalanceAnzeigeElement());\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    setBalance(personen: Person[]) {\n        this.personen = personen;\n        this.balanceRange = Math.max(...Object.values(personen).map(v => Math.abs(v.balance)));\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        this.personenRenderer.update(this.personen,\n            (e, b) => {\n                e.setAttribute(PersonNameAttribute, b.name);\n                e.setAttribute(BalanceAttribute, \"\" + b.balance);\n                e.setAttribute(BalanceRangeAttribute, \"\" + this.balanceRange);\n            });\n    }\n\n}\nexport const BalanceAnzeigeTagName = \"balance-anzeige\";\ncustomElements.define(BalanceAnzeigeTagName, BalanceAnzeige);\n","import templateContent from \"./BezahlungCard.html\";\nimport \"./BezahlungCard.scss\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { ReuseableTemplate } from \"../../utils/ReuseableTemplate\";\nimport { BezahlungStatus } from \"../../state/State\";\n\nexport const BeschreibungAttribute = \"beschreibung\";\nexport const WertAttribute = \"wert\";\nexport const BezahlendePersonAttribute = \"bezahlende-person\";\nexport const EmpfaengerAttribute = \"empfaenger\";\nexport const StatusAttribute = \"status\";\n\ninterface AttributeStore {\n    bezahlendePerson: string;\n    beschreibung: string;\n    wert: number;\n    empfaenger: string;\n    status: string;\n}\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class BezahlungCard extends HTMLElement {\n    private attributeStore: AttributeStore;\n    private wertElement: HTMLSpanElement;\n    private empfaengerElement: HTMLSpanElement;\n    private bezahlendePersonElement: HTMLSpanElement;\n    private beschreibungElement: HTMLDivElement;\n    private doneElement: HTMLSpanElement;\n    private doneAllElement: HTMLSpanElement;\n    private syncElement: HTMLSpanElement;\n\n    constructor() {\n        super();\n        this.attributeStore = {\n            beschreibung: null,\n            bezahlendePerson: null,\n            empfaenger: null,\n            wert: null,\n            status: null\n        };\n        this.appendChild(template.get());\n        this.beschreibungElement = this.querySelector(`[data-ref=\"beschreibung\"]`);\n        this.bezahlendePersonElement = this.querySelector(`[data-ref=\"bezahlende-person\"]`);\n        this.empfaengerElement = this.querySelector(`[data-ref=\"empfaenger\"]`);\n        this.wertElement = this.querySelector(`[data-ref=\"wert\"]`);\n        this.doneElement = this.querySelector(`[data-ref=\"icon-done\"]`);\n        this.doneAllElement = this.querySelector(`[data-ref=\"icon-done-all\"]`);\n        this.syncElement = this.querySelector(`[data-ref=\"icon-sync\"]`);\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private checkChanged<K extends keyof AttributeStore>(prop: K, getAtt: () => AttributeStore[K]) {\n        let att = getAtt();\n        if (this.attributeStore[prop] != att) {\n            this.attributeStore[prop] = att;\n            return true;\n        }\n        return false;\n    }\n\n    private updateAttributes() {\n        let changed = [\n            this.checkChanged(\"bezahlendePerson\", () => this.getAttribute(BezahlendePersonAttribute)),\n            this.checkChanged(\"beschreibung\", () => this.getAttribute(BeschreibungAttribute)),\n            this.checkChanged(\"wert\", () => parseFloat(this.getAttribute(WertAttribute))),\n            this.checkChanged(\"empfaenger\", () => this.getAttribute(EmpfaengerAttribute)),\n            this.checkChanged(\"status\", () => this.getAttribute(StatusAttribute))\n        ].some(v => v);\n        if (changed) {\n            this.updatesStyle();\n        }\n    }\n\n    static get observedAttributes() {\n        return [BeschreibungAttribute, BezahlendePersonAttribute, WertAttribute, EmpfaengerAttribute, StatusAttribute];\n    }\n\n    private updatesStyle() {\n        this.beschreibungElement.innerText = this.attributeStore.beschreibung;\n        this.bezahlendePersonElement.innerText = this.attributeStore.bezahlendePerson;\n        this.wertElement.innerText = formatCurrency(this.attributeStore.wert);\n        this.empfaengerElement.innerText = this.attributeStore.empfaenger;\n        this.doneAllElement.style.display = this.attributeStore.status == BezahlungStatus.Gespeichert ? \"inline\" : \"none\";\n        this.doneElement.style.display = this.attributeStore.status == BezahlungStatus.Zwischengespeichert ? \"inline\" : \"none\";\n        this.syncElement.style.display = this.attributeStore.status == BezahlungStatus.Speichern ? \"inline\" : \"none\";\n    }\n\n}\nexport const BezahlungCardTagName = \"bezahlung-card\";\ncustomElements.define(BezahlungCardTagName, BezahlungCard);\n","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","export function groupBy<T, K extends keyof T>(list: T[], key: K) {\n    const map = new Map<T[K], T[]>();\n    list.forEach((item) => {\n        const k = item[key];\n        const collection = map.get(k);\n        if (!collection) {\n            map.set(k, [item]);\n        } else {\n            collection.push(item);\n        }\n    });\n    return map;\n}\n","import template from \"./BezahlungenGroup.html\";\nimport \"../BezahlungCard/BezahlungCard\";\nimport { BezahlungViewModel } from \"./BezahlungViewModel\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BeschreibungAttribute, BezahlendePersonAttribute, BezahlungCard, EmpfaengerAttribute, StatusAttribute, WertAttribute } from \"../BezahlungCard/BezahlungCard\";\n\nexport class BezahlungenGroup extends HTMLElement {\n    private container: HTMLDivElement;\n    private titleElement: HTMLHeadingElement;\n    private bezahlungenRenderer: ArrayToElementRenderer<BezahlungViewModel, BezahlungCard, string>;\n\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.container = this.querySelector(`[data-ref=\"container\"]`);\n        this.titleElement = this.querySelector(`[data-ref=\"title\"]`);\n        this.bezahlungenRenderer = new ArrayToElementRenderer(this.container,\n            (b: BezahlungViewModel) => b.id,\n            b => new BezahlungCard());\n    }\n\n    connectedCallback() {\n\n    }\n\n    disconnectedCallback() {\n\n    }\n\n\n    setBezahlungen(bezahlungen: BezahlungViewModel[]) {\n        this.bezahlungenRenderer.update(bezahlungen, (e, b) => {\n            e.setAttribute(BeschreibungAttribute, b.beschreibung);\n            e.setAttribute(WertAttribute, \"\" + b.wert);\n            e.setAttribute(BezahlendePersonAttribute, b.bezahlendePersonName);\n            e.setAttribute(EmpfaengerAttribute, b.empfaenger);\n            e.setAttribute(StatusAttribute, b.status)\n        });\n    }\n\n    set title(t: string) {\n        this.titleElement.innerText = t;\n    }\n\n}\nexport const BezahlungenGroupTagName = \"bezahlungen-group\";\ncustomElements.define(BezahlungenGroupTagName, BezahlungenGroup);\n","import template from \"./BezahlungenView.html\";\nimport \"./BezahlungenView.scss\";\nimport \"../BezahlungCard/BezahlungCard\";\nimport { Bezahlung, Person } from \"../../state/State\";\nimport { addDays, startOfToday, startOfDay, startOfWeek, endOfWeek } from \"date-fns\";\nimport { groupBy } from \"../../utils/groupBy\";\nimport \"./BezahlungenGroup\";\nimport { BezahlungViewModel } from \"./BezahlungViewModel\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BezahlungenGroup } from \"./BezahlungenGroup\";\n\nexport class BezahlungenView extends HTMLElement {\n    private minEintraege: number;\n    private minTage: number;\n    private all: boolean;\n    private bezahlungen: Bezahlung[];\n    private personen: Person[];\n    private bezahlungenContainer: HTMLDivElement;\n    private showMoreButton: HTMLButtonElement;\n    private groupRenderer: ArrayToElementRenderer<[number, BezahlungViewModel[]], BezahlungenGroup, string>;\n\n    constructor() {\n        super();\n        this.minTage = 3;\n        this.minEintraege = 20;\n        this.all = false;\n        this.innerHTML = template;\n        this.bezahlungenContainer = this.querySelector(\"#bezahlungen-container\");\n        this.showMoreButton = this.querySelector(\"#show-more\");\n        this.showMoreClick = this.showMoreClick.bind(this);\n        this.groupRenderer = new ArrayToElementRenderer(this.bezahlungenContainer,\n            (s: [number, BezahlungViewModel[]]) => \"\" + s[0], () => new BezahlungenGroup());\n    }\n\n    connectedCallback() {\n        this.showMoreButton.addEventListener(\"click\", this.showMoreClick);\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private setShowMoreButtonDisplay() {\n        if (this.bezahlungen) {\n            this.showMoreButton.style.display = this.bezahlungen.length > this.anzahlEintraege ? \"inline\" : \"none\";\n        }\n    }\n\n    showMoreClick() {\n        let last: BezahlungenGroup = <BezahlungenGroup>this.bezahlungenContainer.lastElementChild;\n        this.anzahlEintraege += 20;\n        if (last) {\n            last.scrollIntoView();\n        }\n        this.setShowMoreButtonDisplay();\n    }\n\n    private formatEmpfaenger(z: Bezahlung, personen: Person[]) {\n        if (z.empfaengerIds.length == personen.length) {\n            return \"alle\";\n        }\n        return z.empfaengerIds.map(id => personen.find(p => p.id == id).name).join(\", \");\n    }\n\n    setBezahlungen(bezahlungen: Bezahlung[], personen: Person[]) {\n        this.bezahlungen = bezahlungen;\n        this.personen = personen;\n        this.setShowMoreButtonDisplay();\n        this.render();\n    }\n\n    private render() {\n        let sorted = this.bezahlungen.sort((a, b) => +b.zeitpunkt - +a.zeitpunkt);\n\n        let filtered = sorted;\n        if (!this.all) {\n            filtered = sorted.filter(z => z.zeitpunkt > addDays(startOfToday(), -this.minTage));\n            if (filtered.length < this.minEintraege) {\n                filtered = sorted.slice(0, this.minEintraege)\n            }\n        }\n\n        let mapped = filtered.map(z => {\n            let x: BezahlungViewModel = {\n                bezahlendePersonName: this.personen.find(p => p.id == z.bezahlendePersonId).name,\n                wert: z.wert,\n                beschreibung: z.beschreibung,\n                empfaenger: this.formatEmpfaenger(z, this.personen),\n                tag: +startOfDay(z.zeitpunkt),\n                id: z.id,\n                woche: +startOfWeek(z.zeitpunkt),\n                status: z.status\n            };\n            return x;\n        });\n\n        let isWeek = false;\n        let grouped = Array.of(...groupBy(mapped, \"tag\").entries());\n        let avgGroupSize = grouped.reduce((p, c) => p + c[1].length, 0) / grouped.length;\n        if (avgGroupSize < 3) {\n            grouped = Array.of(...groupBy(mapped, \"woche\").entries());\n            isWeek = true;\n        }\n        let sortedGroups = grouped.sort((a, b) => b[0] - a[0]);\n        this.groupRenderer.update(sortedGroups,\n            (e, d) => {\n                e.setBezahlungen(d[1]);\n                if (isWeek) {\n                    e.title = this.formatWeek(new Date(d[0]));\n                }\n                else {\n\n                    e.title = this.formatDay(new Date(d[0]));\n                }\n            });\n\n    }\n\n    get anzahlEintraege() {\n        return this.minEintraege;\n    }\n\n    set anzahlEintraege(val: number) {\n        this.minEintraege = val;\n        this.render();\n    }\n\n\n    private formatWeek(date: Date) {\n        let endWeek = endOfWeek(date);\n        let weekformat: string;\n        const dayAndMonth = (d: Date) => new Intl.DateTimeFormat([\"de-AT\"], { day: \"numeric\", month: \"long\" }).format(d);\n        if (endWeek.getMonth() == date.getMonth()) {\n            weekformat = `${new Intl.DateTimeFormat([\"de-AT\"], { day: \"numeric\" }).format(date)}. - ${dayAndMonth(endWeek)}`;\n        }\n        else {\n            weekformat = `${dayAndMonth(date)} - ${dayAndMonth(endWeek)}`;\n        }\n        return weekformat;\n    }\n\n    private formatDay(date: Date) {\n        return new Intl.DateTimeFormat([\"de-AT\"], { weekday: \"short\", year: \"numeric\", month: \"2-digit\", day: \"2-digit\" }).format(date);\n    }\n}\nexport const BezahlungenViewTagName = \"bezahlungen-view\";\ncustomElements.define(BezahlungenViewTagName, BezahlungenView);\n","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import { Store } from \"../Store\";\nimport { ApiClient } from \"../../api/ApiClient\";\nimport { Action } from \"../lib/Action\";\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\nimport { Bezahlung, BezahlungStatus } from \"../State\";\nimport { filterBezahlungen } from \"../../lib/filterBezahlungen\";\nimport { KontokorrentBalance } from \"../../lib/KontokorrentBalance\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { ActionNames } from \"./ActionNames\";\nimport { WorkerService, workerServiceFactory } from \"../../lib/WorkerService\";\n\nexport class KontokorrentGeoeffnet implements Action {\n    readonly type = ActionNames.KontokorrentGeoeffnet;\n    constructor(public id: string) {\n\n    }\n}\n\nexport class KontokorrentBezahlungen implements Action {\n    readonly type = ActionNames.KontokorrentBezahlungen;\n    constructor(public kontokorrentId: string, public bezahlungen: Bezahlung[]) {\n\n    }\n}\n\nexport class KontokorrentSynchronisieren implements Action {\n    readonly type = ActionNames.KontokorrentSynchronisieren;\n    constructor(public kontokorrentId: string) {\n\n    }\n}\n\nexport class KontokorrentSynchronisiert implements Action {\n    readonly type = ActionNames.KontokorrentSynchronisiert;\n    constructor(public kontokorrentId: string) {\n\n    }\n}\n\nexport class KontokorrentBalanceAktualisiert implements Action {\n    readonly type = ActionNames.KontokorrentBalanceAktualisiert;\n    constructor(public kontokorrentId: string, public balance: KontokorrentBalance) {\n\n    }\n}\n\nexport type KontokorrentActions =\n    | KontokorrentGeoeffnet\n    | KontokorrentBezahlungen\n    | KontokorrentSynchronisieren\n    | KontokorrentSynchronisiert\n    | KontokorrentBalanceAktualisiert;\n\nexport class KontokorrentActionCreator {\n\n    constructor(private store: Store,\n        private apiClient: ApiClient,\n        private db: KontokorrentDatabase,\n        private workerService: WorkerService) {\n\n    }\n    private async refreshBezahlungen(id: string) {\n        let aktionen = filterBezahlungen(await this.db.getAktionen(id)).map(b => {\n            return {\n                ...b,\n                status: BezahlungStatus.Gespeichert\n            };\n        });\n        let zwischengespeicherte = (await this.db.getZwischengespeicherteBezahlungenForKontokorrent(id)).map(b => {\n            let x: Bezahlung = {\n                status: BezahlungStatus.Zwischengespeichert,\n                beschreibung: b.beschreibung,\n                bezahlendePersonId: b.bezahlendePersonId,\n                empfaengerIds: b.empfaengerIds,\n                id: b.id,\n                wert: b.wert,\n                zeitpunkt: b.zeitpunkt\n            };\n            return x;\n        });\n        this.store.dispatch(new KontokorrentBezahlungen(id, [...aktionen, ...zwischengespeicherte]));\n    }\n\n    private async calculateBalance(id: string) {\n        let balance = await (await this.workerService.getWorker()).calculateBalance(id);\n        this.store.dispatch(new KontokorrentBalanceAktualisiert(id, balance));\n    }\n\n    private async refreshKontokorrent(id: string) {\n        await Promise.all([this.refreshBezahlungen(id), this.calculateBalance(id)]);\n    }\n\n    private async kontokorrentSynchronisieren(id: string) {\n        this.store.dispatch(new KontokorrentSynchronisieren(id));\n        let laufendeNummer = await (await this.workerService.getWorker()).getLaufendeNummer(id);\n        let res = await this.apiClient.getAktionen(id, laufendeNummer);\n        if (res.success) {\n            await this.db.addAktionen(id, res.aktionen);\n            if (res.aktionen.length > 0) {\n                await this.refreshKontokorrent(id);\n            }\n        }\n        this.store.dispatch(new KontokorrentSynchronisiert(id));\n    }\n\n\n\n    async kontokorrentOeffnen(id: string) {\n        let kk = await this.db.getKontokorrent(id);\n        if (null != kk) {\n            this.store.dispatch(new KontokorrentGeoeffnet(id));\n            let tasks = [];\n            tasks.push(this.db.setZuletztGesehenerKontokorrentId(id));\n            tasks.push(this.refreshKontokorrent(id));\n            tasks.push(this.kontokorrentSynchronisieren(id));\n            await Promise.all(tasks);\n        }\n    }\n}\n\nexport function kontokorrentActionCreatorFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"KontokorrentActionCreator\",\n        serviceLocator => new KontokorrentActionCreator(\n            serviceLocator.store,\n            serviceLocator.apiClient,\n            serviceLocator.db,\n            workerServiceFactory(serviceLocator)\n        ));\n}","import { BezahlungDbModel } from \"./BezahlungDbModel\";\nimport { AktionDbModel } from \"./AktionDbModel\";\n\nexport function filterBezahlungen(aktionen: AktionDbModel[]) {\n    let bezahlungenMap: { [id: string]: BezahlungDbModel } = {};\n    let ordered = aktionen.sort((a,b)=> a.laufendeNummer - b.laufendeNummer);\n    for (let b of ordered) {\n        if (b.bearbeiteteBezahlungId) {\n            delete bezahlungenMap[b.bearbeiteteBezahlungId];\n        }\n        if (b.geloeschteBezahlungId) {\n            delete bezahlungenMap[b.geloeschteBezahlungId];\n        }\n        else {\n            bezahlungenMap[b.bezahlung.id] = b.bezahlung;\n        }\n    }\n    let bezahlungen = Object.values(bezahlungenMap);\n    return bezahlungen;\n}","import template from \"./KontokorrentPage.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { KontokorrentState, State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport \"../BalanceAnzeige/BalanceAnzeigeElement\";\nimport { BalanceAnzeige } from \"../BalanceAnzeige/BalanceAnzeige\";\nimport \"../BalanceAnzeige/BalanceAnzeige\";\nimport \"../BezahlungenView/BezahlungenView\";\nimport { BezahlungenView } from \"../BezahlungenView/BezahlungenView\";\nimport \"./KontokorrentPage.scss\";\nimport { KontokorrentActionCreator, kontokorrentActionCreatorFactory } from \"../../state/actions/KontokorrentActionCreator\";\nimport { KontokorrentListenActionCreator, kontokorrentListenActionCreatorFactory } from \"../../state/actions/KontokorrentListenActionCreator\";\n\nexport class KontokorrentPage extends HTMLElement {\n    private store: Store;\n    private subscription: () => void;\n    private routingActionCreator: RoutingActionCreator;\n    private kontokorrentActionCreator: KontokorrentActionCreator;\n    private appBar: AppBar;\n    private balanceAnzeige: BalanceAnzeige;\n    private bezahlungenView: BezahlungenView;\n    private kontokorrentSpinner: HTMLSpanElement;\n    private kontokorrent: KontokorrentState;\n    private kontokorrentIdParameter: string;\n    private kontokorrentListenActionCreator: KontokorrentListenActionCreator;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.appBar = this.querySelector(AppBarTagName);\n        this.balanceAnzeige = this.querySelector(\"#balance-anzeige\");\n        this.bezahlungenView = this.querySelector(\"#bezahlungen-view\");\n        this.kontokorrentSpinner = this.querySelector(\"#spinner\");\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.kontokorrentActionCreator = kontokorrentActionCreatorFactory(serviceLocator);\n        this.kontokorrentListenActionCreator = kontokorrentListenActionCreatorFactory(serviceLocator);\n        this.appBar.addServices(serviceLocator);\n    }\n\n    connectedCallback() {\n        if (!this.kontokorrentIdParameter) {\n            this.kontokorrentListenActionCreator.navigiereZuLetztGesehenem(true);\n        }\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.appBar.addEventListener(\"gotokontokorrent\", (e: CustomEvent) => {\n            this.routingActionCreator.navigateKontokorrent(e.detail);\n        });\n        convertLinks(this.querySelectorAll(\"#eintragen-desktop, #eintragen-mobile\"), this.routingActionCreator);\n        this.applyStoreState(this.store.state);\n    }\n\n    private applyStoreState(state: State) {\n        this.kontokorrent = state.kontokorrents.kontokorrents[state.kontokorrents.activeKontokorrentId];\n        if (this.kontokorrent) {\n            document.title = `${this.kontokorrent.name} - Kontokorrent`;\n            if (this.kontokorrent.personen) {\n                this.balanceAnzeige.setBalance(this.kontokorrent.personen);\n                this.bezahlungenView.setBezahlungen(this.kontokorrent.bezahlungen, this.kontokorrent.personen);\n            }\n            this.kontokorrentSpinner.style.display = this.kontokorrent.synchronisieren ? \"flex\" : \"none\";\n        }\n    }\n\n    setRouteParameters(id: string) {\n        this.kontokorrentActionCreator.kontokorrentOeffnen(id);\n        this.kontokorrentIdParameter = id;\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n    }\n}\n\ncustomElements.define('kontokorrent-page', KontokorrentPage);\n","// Module\nvar code = \"<div class=\\\"balance-anzeige-element__graphic-container\\\"> <div class=\\\"balance-anzeige-element__bar\\\" data-ref=\\\"bar\\\"></div> <div class=\\\"balance-anzeige-element__horizontal-line\\\"></div> <span class=\\\"balance-anzeige-element__balance\\\" data-ref=\\\"balance-container\\\"> <span data-ref=\\\"balance-text\\\"></span>€ </span> </div> <div class=\\\"balance-anzeige-element__text-container\\\"> <span data-ref=\\\"person-name\\\" class=\\\"balance-anzeige-element__name\\\"></span> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"balance-anzeige-element__graphic-container\\\"> <div class=\\\"balance-anzeige-element__bar\\\" data-ref=\\\"bar\\\"></div> <div class=\\\"balance-anzeige-element__horizontal-line\\\"></div> <span class=\\\"balance-anzeige-element__balance\\\" data-ref=\\\"balance-container\\\"> <span data-ref=\\\"balance-text\\\"></span>€ </span> </div> <div class=\\\"balance-anzeige-element__text-container\\\"> <span data-ref=\\\"person-name\\\" class=\\\"balance-anzeige-element__name\\\"></span> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"bezahlung-card__beschreibung\\\"> <div data-ref=\\\"beschreibung\\\"></div> <div class=\\\"bezahlung-card__personen\\\"> <span data-ref=\\\"bezahlende-person\\\"></span> für <span data-ref=\\\"empfaenger\\\"></span> </div> </div> <div class=\\\"bezahlung-card__col2\\\"> <div class=\\\"bezahlung-card__dummy\\\"></div> <div class=\\\"bezahlung-card__wert\\\"> <span data-ref=\\\"wert\\\"></span>€ </div> <div class=\\\"bezahlung-card__status\\\"> <span class=\\\"material-icons\\\" data-ref=\\\"icon-done\\\" style=\\\"display:none\\\" title=\\\"lokal zwischengespeichert\\\"> schedule </span> <span class=\\\"material-icons\\\" data-ref=\\\"icon-done-all\\\" style=\\\"display:none\\\" title=\\\"synchronisiert\\\"> done_all </span> <span class=\\\"material-icons\\\" data-ref=\\\"icon-sync\\\" style=\\\"display:none\\\" title=\\\"synchronisieren...\\\"> sync </span> </div> </div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<h3 data-ref=\\\"title\\\" class=\\\"bezahlungen-group__title\\\">Gruppe</h3> <div class=\\\"bezahlungen-group__container\\\" data-ref=\\\"container\\\"></div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div id=\\\"bezahlungen-container\\\"> </div> <button id=\\\"show-more\\\" class=\\\"button\\\">Mehr anzeigen</button>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<app-bar></app-bar> <div style=\\\"display:none\\\" id=\\\"login-expired\\\">Google-Login abgelaufen: zum Synchronisieren neu anmelden</div> <balance-anzeige id=\\\"balance-anzeige\\\"></balance-anzeige> <div class=\\\"kontokorrentpage-menu\\\"> <a id=\\\"eintragen-desktop\\\" class=\\\"floating-action-button floating-action-button--embed\\\" href=\\\"eintragen\\\"> <span class=\\\"material-icons\\\"> add </span> eintragen </a> <span class=\\\"kontokorrentpage-menu__sync-display\\\" id=\\\"spinner\\\" style=\\\"display:none\\\"> <div class=\\\"spinner\\\"></div> synchronisieren </span> </div> <bezahlungen-view id=\\\"bezahlungen-view\\\"></bezahlungen-view> <a id=\\\"eintragen-mobile\\\" class=\\\"floating-action-button floating-action-button--fixed\\\" href=\\\"eintragen\\\"> <span class=\\\"material-icons\\\"> add </span> eintragen </a>\";\n// Exports\nmodule.exports = code;"],"sourceRoot":""}