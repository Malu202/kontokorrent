{"version":3,"sources":["webpack://kontokorrent/../src/comlink.ts","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/endOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/isSameDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/toDate/index.js","webpack://kontokorrent/./src/utils/Debouncer.ts","webpack://kontokorrent/./src/components/BezahlungEintragenPage/BezahlungEintragenPage.ts","webpack://kontokorrent/./node_modules/core-js/modules/web.url.to-json.js","webpack://kontokorrent/./src/components/BezahlungEintragenPage/BezahlungEintragenPage.html"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","obj","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","value","serialized","Error","isError","message","name","stack","Object","assign","ep","self","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","_target","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","processed","v","arr","Array","prototype","concat","WeakMap","handler","serializedValue","serialize","get","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","requiredArgs","required","args","TypeError","endOfDay","dirtyDate","arguments","date","toDate","setHours","isSameDay","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","startOfDay","dateRightStartOfDay","getTime","argument","argStr","call","Date","console","warn","NaN","Debouncer","ms","setTimeout","status","aborted","promise","reject","this","abort","aborter","race","timeout","BezahlungEintragenPage","HTMLElement","super","betreffVorschlagDebouncer","innerHTML","zurueckLink","querySelector","appBar","AppBar","bezahlungEintragenForm","BezahlungEintragenForm","saveButton","editingSection","savingSection","saveError","formContainer","serviceLocator","store","routingActionCreator","bezahlungActionCreator","addServices","kontokorrentsSubscription","subscribe","s","applyStoreState","beschreibungVorschlagSubscription","beschreibungVorschlaegeChanged","e","bezahlungEintragenKontokorrentChanged","detail","bezahlungEintragenGeoeffnet","convertLinks","state","saveEventListener","save","betreffChanged","betreff","trigger","getBeschreibungVorschlaege","kontokorrentId","beschreibungVorschlaege","vorschlaege","validate","getData","bezahlungHinzufuegen","navigateKontokorrent","scrollTop","href","kontokorrents","activeKontokorrentId","personen","style","display","bezahlungAnlegen","hidden","customElements","define","$","proto","enumerable","toJSON","URL","module","exports"],"mappings":"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","file":"67dd85b4450caa1f587a.bundle.js","sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","export class Debouncer {\n    private abort: () => void;\n    constructor() {\n    }\n\n    private timeout(ms: number): Promise<void> {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve();\n            }, ms);\n        });\n    }\n\n    private aborter() {\n        let status = {\n            aborted: false,\n            promise: <Promise<void>>null\n        };\n        let promise = new Promise<void>((resolve, reject) => {\n            this.abort = () => {\n                status.aborted = false;\n                reject();\n            };\n        });\n        status.promise = promise;\n        return status;\n    }\n\n    async trigger(ms: number): Promise<void> {\n        if (this.abort) {\n            this.abort();\n        }\n        let status = this.aborter();\n        try {\n            await Promise.race([this.timeout(ms), status.promise]);\n        }\n        catch {\n            throw new Error(\"aborted\");\n        }\n    }\n}\n","import template from \"./BezahlungEintragenPage.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport \"./BezahlungEintragenPage.scss\";\nimport { BezahlungActionCreator, bezahlungActionCreatorFactory } from \"../../state/actions/BezahlungActionCreator\";\nimport { BezahlungAnlegenStatus, State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\nimport \"../BezahlungEintragenForm/BezahlungEintragenForm\";\nimport { BezahlungEintragenForm, BezahlungEintragenFormTagName } from \"../BezahlungEintragenForm/BezahlungEintragenForm\";\nimport { Debouncer } from \"../../utils/Debouncer\";\n\nexport class BezahlungEintragenPage extends HTMLElement {\n    private store: Store;\n    private kontokorrentsSubscription: () => void;\n    private routingActionCreator: RoutingActionCreator;\n    private appBar: AppBar;\n    private bezahlungActionCreator: BezahlungActionCreator;\n    private zurueckLink: HTMLAnchorElement;\n    private bezahlungEintragenForm: BezahlungEintragenForm;\n    private saveButton: HTMLButtonElement;\n    private saveEventListener: () => void;\n    private kontokorrentId: string;\n    private editingSection: HTMLDivElement;\n    private savingSection: HTMLDivElement;\n    private saveError: HTMLDivElement;\n    private formContainer: HTMLDivElement;\n    private beschreibungVorschlagSubscription: () => void;\n    private betreffVorschlagDebouncer = new Debouncer();\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.zurueckLink = this.querySelector(\"#zurueck-zum-kontokorrent\");\n        this.appBar = this.querySelector(AppBarTagName);\n        this.bezahlungEintragenForm = this.querySelector(BezahlungEintragenFormTagName);\n        this.saveButton = this.querySelector(\"#bezahlung-eintragen__save\");\n        this.editingSection = this.querySelector(\"#bezahlung-eintragen__edit\");\n        this.savingSection = this.querySelector(\"#bezahlung-eintragen__saving\");\n        this.saveError = this.querySelector(\"#save-error\");\n        this.formContainer = this.querySelector(\"#bezahlung-eintragen__form-container\");\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.bezahlungActionCreator = bezahlungActionCreatorFactory(serviceLocator);\n        this.appBar.addServices(serviceLocator);\n    }\n\n    connectedCallback() {\n        this.kontokorrentsSubscription = this.store.subscribe(\"kontokorrents\", s => this.applyStoreState(s));\n        this.beschreibungVorschlagSubscription = this.store.subscribe(\"beschreibungVorschlaege\", s => this.beschreibungVorschlaegeChanged(s));\n        this.appBar.addEventListener(\"gotokontokorrent\", (e: CustomEvent) => {\n            this.bezahlungActionCreator.bezahlungEintragenKontokorrentChanged(e.detail);\n        });\n        this.bezahlungActionCreator.bezahlungEintragenGeoeffnet();\n        convertLinks([this.zurueckLink], this.routingActionCreator);\n        this.applyStoreState(this.store.state);\n        this.saveEventListener = () => this.save();\n        this.saveButton.addEventListener(\"click\", this.saveEventListener);\n        this.bezahlungEintragenForm.addEventListener(\"betreffChanged\", (ev: CustomEvent) => this.betreffChanged(ev.detail));\n    }\n    async betreffChanged(betreff: string) {\n            try {\n                await this.betreffVorschlagDebouncer.trigger(200);\n            }\n            catch {\n                //aborted\n            }\n            await this.bezahlungActionCreator.getBeschreibungVorschlaege(this.kontokorrentId, betreff);\n    }\n    private beschreibungVorschlaegeChanged(s: State): void {\n        if (s.beschreibungVorschlaege?.kontokorrentId == this.kontokorrentId) {\n            this.bezahlungEintragenForm.beschreibungVorschlaege = s.beschreibungVorschlaege.vorschlaege.slice(0,10);\n        }\n        else {\n            this.bezahlungEintragenForm.beschreibungVorschlaege = [];\n        }\n    }\n\n    async save() {\n        if (this.bezahlungEintragenForm.validate()) {\n            let data = this.bezahlungEintragenForm.getData();\n            await this.bezahlungActionCreator.bezahlungHinzufuegen(this.kontokorrentId, data);\n            this.routingActionCreator.navigateKontokorrent(this.kontokorrentId, true);\n        }\n        else {\n            this.formContainer.scrollTop = 0;\n        }\n    }\n\n    private applyStoreState(s: State) {\n        this.zurueckLink.href = s.kontokorrents.activeKontokorrentId ? `kontokorrents/${s.kontokorrents.activeKontokorrentId}` : null;\n        if (s.kontokorrents.activeKontokorrentId) {\n            this.bezahlungEintragenForm.personen = s.kontokorrents.kontokorrents[s.kontokorrents.activeKontokorrentId].personen;\n            this.editingSection.style.display = s.kontokorrents.kontokorrents[s.kontokorrents.activeKontokorrentId].bezahlungAnlegen == BezahlungAnlegenStatus.Anlegen ? \"none\" : \"flex\";\n            this.savingSection.style.display = s.kontokorrents.kontokorrents[s.kontokorrents.activeKontokorrentId].bezahlungAnlegen != BezahlungAnlegenStatus.Anlegen ? \"none\" : \"flex\";\n            this.saveError.hidden = s.kontokorrents.kontokorrents[s.kontokorrents.activeKontokorrentId].bezahlungAnlegen != BezahlungAnlegenStatus.Failed;\n        }\n        this.kontokorrentId = s.kontokorrents.activeKontokorrentId;\n    }\n\n    disconnectedCallback() {\n        this.kontokorrentsSubscription();\n        this.beschreibungVorschlagSubscription();\n        this.saveButton.removeEventListener(\"click\", this.saveEventListener);\n    }\n}\n\ncustomElements.define('bezahlung-eintragen-page', BezahlungEintragenPage);\n","'use strict';\nvar $ = require('../internals/export');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return URL.prototype.toString.call(this);\n  }\n});\n","// Module\nvar code = \"<app-bar></app-bar> <div id=\\\"bezahlung-eintragen__edit\\\" class=\\\"bezahlung-eintragen__edit\\\"> <div class=\\\"bezahlungen-page-menu\\\"> <a id=\\\"zurueck-zum-kontokorrent\\\" class=\\\"button\\\"> <span class=\\\"material-icons\\\"> arrow_back </span> zurück </a> <button class=\\\"button\\\" title=\\\"speichern\\\" id=\\\"bezahlung-eintragen__save\\\"> <span class=\\\"material-icons\\\"> save </span> speichern </button> </div> <div class=\\\"bezahlung-eintragen__form-container\\\" id=\\\"bezahlung-eintragen__form-container\\\"> <div id=\\\"save-error\\\" class=\\\"alert alert--error\\\" hidden>Zahlung konnte nicht gespeichert werden. </div> <bezahlung-eintragen-form> </bezahlung-eintragen-form> </div> </div> <div id=\\\"bezahlung-eintragen__saving\\\" class=\\\"bezahlung-eintragen__saving\\\"> <span class=\\\"spinner\\\"></span> <span>wird gespeichert</span> </div>\";\n// Exports\nmodule.exports = code;"],"sourceRoot":""}