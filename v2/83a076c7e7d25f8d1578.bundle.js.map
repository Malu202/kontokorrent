{"version":3,"file":"83a076c7e7d25f8d1578.bundle.js","mappings":"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","sources":["webpack://kontokorrent/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/toDate/index.js","webpack://kontokorrent/./src/components/KontokorrentPage/KontokorrentPage.html","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeigeElement.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeigeElement.html","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeige.ts","webpack://kontokorrent/./src/components/BalanceAnzeige/BalanceAnzeige.html","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenView.html","webpack://kontokorrent/./src/components/BezahlungCard/BezahlungCard.ts","webpack://kontokorrent/./src/components/BezahlungCard/BezahlungCard.html","webpack://kontokorrent/./node_modules/date-fns/esm/startOfWeek/index.js","webpack://kontokorrent/./src/utils/groupBy.ts","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenGroup.ts","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenGroup.html","webpack://kontokorrent/./src/components/BezahlungenView/BezahlungenView.ts","webpack://kontokorrent/./node_modules/date-fns/esm/addDays/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfToday/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/endOfWeek/index.js","webpack://kontokorrent/./src/state/actions/KontokorrentActionCreator.ts","webpack://kontokorrent/./src/components/KontokorrentPage/KontokorrentPage.ts","webpack://kontokorrent/./src/utils/formatCurrency.ts","webpack://kontokorrent/./src/utils/round.ts"],"sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","// Module\nvar code = \"<app-bar></app-bar> <div style=\\\"display:none\\\" id=\\\"login-expired\\\">Google-Login abgelaufen: zum Synchronisieren neu anmelden</div> <balance-anzeige id=\\\"balance-anzeige\\\"></balance-anzeige> <div class=\\\"kontokorrentpage-menu\\\"> <a id=\\\"eintragen-desktop\\\" class=\\\"floating-action-button floating-action-button--embed\\\" href=\\\"eintragen\\\"> <span class=\\\"material-icons\\\"> add </span> eintragen </a> <span class=\\\"kontokorrentpage-menu__sync-display\\\" id=\\\"spinner\\\" style=\\\"display:none\\\"> <div class=\\\"spinner\\\"></div> synchronisieren </span> </div> <bezahlungen-view id=\\\"bezahlungen-view\\\"></bezahlungen-view> <a id=\\\"eintragen-mobile\\\" class=\\\"floating-action-button floating-action-button--fixed\\\" href=\\\"eintragen\\\"> <span class=\\\"material-icons\\\"> add </span> eintragen </a>\";\n// Exports\nexport default code;","import templateContent from \"./BalanceAnzeigeElement.html\";\nimport \"./BalanceAnzeigeElement.scss\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { ReuseableTemplate, TemplateInstance } from \"../../utils/ReuseableTemplate\";\n\nexport const PersonNameAttribute = \"person-name\";\nexport const BalanceAttribute = \"balance\";\nexport const BalanceRangeAttribute = \"balance-range\";\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class BalanceAnzeigeElement extends HTMLElement {\n    private personName: string;\n    private balance: number;\n    private personNameElement: HTMLSpanElement;\n    private balanceTextElement: HTMLSpanElement;\n    private balanceRange: number;\n    private barElement: HTMLDivElement;\n    private balanceContainerElement: HTMLSpanElement;\n    private templateInstance: TemplateInstance;\n\n    constructor() {\n        super();\n        this.templateInstance = template.getInstance();\n    }\n\n    connectedCallback() {\n        if (this.templateInstance.apply(this)) {\n            this.personNameElement = this.querySelector(`[data-ref=\"person-name\"]`);\n            this.balanceTextElement = this.querySelector(`[data-ref=\"balance-text\"]`);\n            this.balanceContainerElement = this.querySelector(`[data-ref=\"balance-container\"]`);\n            this.barElement = this.querySelector(`[data-ref=\"bar\"]`);\n            this.updatesStyle();\n        }\n        requestAnimationFrame(() => {\n            this.barElement.style.transform = `scaleY(0)`;\n            this.updatesStyle();\n        });\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.personName = this.getAttribute(PersonNameAttribute);\n        this.balance = parseFloat(this.getAttribute(BalanceAttribute));\n        this.balanceRange = Math.max(2, parseFloat(this.getAttribute(BalanceRangeAttribute)));\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [PersonNameAttribute, BalanceAttribute, BalanceRangeAttribute];\n    }\n\n    private updatesStyle() {\n        if (this.templateInstance.isApplied()) {\n            requestAnimationFrame(() => {\n                this.personNameElement.innerText = this.personName;\n                this.balanceTextElement.innerText = formatCurrency(this.balance);\n                let scale = Math.sign(this.balance) * Math.abs(this.balance) / this.balanceRange;\n                let balanceTransform = scale * 1.9;\n                this.barElement.style.transform = `scaleY(${scale})`;\n                this.balanceContainerElement.style.transform = Math.sign(this.balance) < 0 ? `translateY(calc(${balanceTransform}em - 150%))`\n                    : `translateY(calc(${balanceTransform}em + 50%))`;\n                if (scale > 0) {\n                    this.barElement.classList.add(\"balance-anzeige-element__bar--negative\");\n                    this.barElement.classList.remove(\"balance-anzeige-element__bar--positive\");\n                }\n                else {\n                    this.barElement.classList.remove(\"balance-anzeige-element__bar--negative\");\n                    this.barElement.classList.add(\"balance-anzeige-element__bar--positive\");\n                }\n            });\n        }\n    }\n\n}\nexport const BalanceAnzeigeElementTagName = \"balance-anzeige-element\";\ncustomElements.define(BalanceAnzeigeElementTagName, BalanceAnzeigeElement);\n","// Module\nvar code = \"<div class=\\\"balance-anzeige-element__graphic-container\\\"> <div class=\\\"balance-anzeige-element__bar\\\" data-ref=\\\"bar\\\"></div> <div class=\\\"balance-anzeige-element__horizontal-line\\\"></div> <span class=\\\"balance-anzeige-element__balance\\\" data-ref=\\\"balance-container\\\"> <span data-ref=\\\"balance-text\\\"></span>€ </span> </div> <div class=\\\"balance-anzeige-element__text-container\\\"> <span data-ref=\\\"person-name\\\" class=\\\"balance-anzeige-element__name\\\"></span> </div>\";\n// Exports\nexport default code;","import template from \"./BalanceAnzeige.html\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BalanceAnzeigeElement, PersonNameAttribute, BalanceAttribute, BalanceRangeAttribute } from \"./BalanceAnzeigeElement\";\nimport { Person } from \"../../state/State\";\n\nexport class BalanceAnzeige extends HTMLElement {\n    private balanceRange: number;\n    private personen: Person[] = [];\n    private personenRenderer: ArrayToElementRenderer<Person, HTMLElement, string>;\n    private rendered = false;\n\n    constructor() {\n        super();\n        this.personenRenderer = new ArrayToElementRenderer(this,\n            (b: Person) => b.id,\n            b => new BalanceAnzeigeElement());\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.updatesStyle();\n        }\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    setBalance(personen: Person[]) {\n        this.personen = personen;\n        this.balanceRange = Math.max(...Object.values(personen).map(v => Math.abs(v.balance)));\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        if (this.rendered) {\n            this.personenRenderer.update(this.personen,\n                (e, b) => {\n                    e.setAttribute(PersonNameAttribute, b.name);\n                    e.setAttribute(BalanceAttribute, \"\" + b.balance);\n                    e.setAttribute(BalanceRangeAttribute, \"\" + this.balanceRange);\n                });\n        }\n    }\n\n}\nexport const BalanceAnzeigeTagName = \"balance-anzeige\";\ncustomElements.define(BalanceAnzeigeTagName, BalanceAnzeige);\n","// Module\nvar code = \"<div class=\\\"balance-anzeige-element__graphic-container\\\"> <div class=\\\"balance-anzeige-element__bar\\\" data-ref=\\\"bar\\\"></div> <div class=\\\"balance-anzeige-element__horizontal-line\\\"></div> <span class=\\\"balance-anzeige-element__balance\\\" data-ref=\\\"balance-container\\\"> <span data-ref=\\\"balance-text\\\"></span>€ </span> </div> <div class=\\\"balance-anzeige-element__text-container\\\"> <span data-ref=\\\"person-name\\\" class=\\\"balance-anzeige-element__name\\\"></span> </div>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div id=\\\"bezahlungen-container\\\"> </div> <button id=\\\"show-more\\\" class=\\\"button\\\">Mehr anzeigen</button>\";\n// Exports\nexport default code;","import templateContent from \"./BezahlungCard.html\";\nimport \"./BezahlungCard.scss\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { ReuseableTemplate, TemplateInstance } from \"../../utils/ReuseableTemplate\";\nimport { BezahlungStatus } from \"../../state/State\";\n\nexport const BeschreibungAttribute = \"beschreibung\";\nexport const WertAttribute = \"wert\";\nexport const BezahlendePersonAttribute = \"bezahlende-person\";\nexport const EmpfaengerAttribute = \"empfaenger\";\nexport const StatusAttribute = \"status\";\nexport const BezahlungIdAttribute = \"bezahlung-id\";\n\ninterface AttributeStore {\n    bezahlendePerson: string;\n    beschreibung: string;\n    wert: number;\n    empfaenger: string;\n    status: string;\n}\n\nconst template = new ReuseableTemplate(templateContent);\n\nexport class BezahlungCard extends HTMLElement {\n    private attributeStore: AttributeStore;\n    private wertElement: HTMLSpanElement;\n    private empfaengerElement: HTMLSpanElement;\n    private bezahlendePersonElement: HTMLSpanElement;\n    private beschreibungElement: HTMLDivElement;\n    private doneElement: HTMLSpanElement;\n    private doneAllElement: HTMLSpanElement;\n    private syncElement: HTMLSpanElement;\n    private clickListener: (e: MouseEvent) => void;\n    private templateInstance: TemplateInstance;\n\n    constructor() {\n        super();\n        this.attributeStore = {\n            beschreibung: null,\n            bezahlendePerson: null,\n            empfaenger: null,\n            wert: null,\n            status: null\n        };\n        this.templateInstance = template.getInstance();\n    }\n\n    private onClick(e: MouseEvent) {\n        this.dispatchEvent(new CustomEvent(\"bezahlungclick\", { detail: this.getAttribute(BezahlungIdAttribute), bubbles: true }));\n    }\n\n    connectedCallback() {\n        if (this.templateInstance.apply(this)) {\n            this.setAttribute(\"title\", \"Bezahlung bearbeiten oder löschen\");\n            this.beschreibungElement = this.querySelector(`[data-ref=\"beschreibung\"]`);\n            this.bezahlendePersonElement = this.querySelector(`[data-ref=\"bezahlende-person\"]`);\n            this.empfaengerElement = this.querySelector(`[data-ref=\"empfaenger\"]`);\n            this.wertElement = this.querySelector(`[data-ref=\"wert\"]`);\n            this.doneElement = this.querySelector(`[data-ref=\"icon-done\"]`);\n            this.doneAllElement = this.querySelector(`[data-ref=\"icon-done-all\"]`);\n            this.syncElement = this.querySelector(`[data-ref=\"icon-sync\"]`);\n            this.updatesStyle();\n        }\n        this.clickListener = e => this.onClick(e);\n        this.addEventListener(\"click\", this.clickListener);\n    }\n\n    disconnectedCallback() {\n        this.removeEventListener(\"click\", this.clickListener);\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private checkChanged<K extends keyof AttributeStore>(prop: K, getAtt: () => AttributeStore[K]) {\n        let att = getAtt();\n        if (this.attributeStore[prop] != att) {\n            this.attributeStore[prop] = att;\n            return true;\n        }\n        return false;\n    }\n\n    private updateAttributes() {\n        let changed = [\n            this.checkChanged(\"bezahlendePerson\", () => this.getAttribute(BezahlendePersonAttribute)),\n            this.checkChanged(\"beschreibung\", () => this.getAttribute(BeschreibungAttribute)),\n            this.checkChanged(\"wert\", () => parseFloat(this.getAttribute(WertAttribute))),\n            this.checkChanged(\"empfaenger\", () => this.getAttribute(EmpfaengerAttribute)),\n            this.checkChanged(\"status\", () => this.getAttribute(StatusAttribute))\n        ].some(v => v);\n        if (changed) {\n            this.updatesStyle();\n        }\n    }\n\n    static get observedAttributes() {\n        return [BeschreibungAttribute, BezahlendePersonAttribute, WertAttribute, EmpfaengerAttribute, StatusAttribute];\n    }\n\n    private updatesStyle() {\n        if (this.templateInstance.isApplied()) {\n            this.beschreibungElement.innerText = this.attributeStore.beschreibung;\n            this.bezahlendePersonElement.innerText = this.attributeStore.bezahlendePerson;\n            this.wertElement.innerText = formatCurrency(this.attributeStore.wert);\n            this.empfaengerElement.innerText = this.attributeStore.empfaenger;\n            this.doneAllElement.style.display = this.attributeStore.status == BezahlungStatus.Gespeichert ? \"inline\" : \"none\";\n            this.doneElement.style.display = this.attributeStore.status == BezahlungStatus.Zwischengespeichert ? \"inline\" : \"none\";\n            this.syncElement.style.display = this.attributeStore.status == BezahlungStatus.Speichern ? \"inline\" : \"none\";\n        }\n    }\n\n}\nexport const BezahlungCardTagName = \"bezahlung-card\";\ncustomElements.define(BezahlungCardTagName, BezahlungCard);\n","// Module\nvar code = \"<div class=\\\"bezahlung-card__beschreibung\\\"> <div data-ref=\\\"beschreibung\\\"></div> <div class=\\\"bezahlung-card__personen\\\"> <span data-ref=\\\"bezahlende-person\\\"></span> für <span data-ref=\\\"empfaenger\\\"></span> </div> </div> <div class=\\\"bezahlung-card__col2\\\"> <div class=\\\"bezahlung-card__dummy\\\"></div> <div class=\\\"bezahlung-card__wert\\\"> <span data-ref=\\\"wert\\\"></span>€ </div> <div class=\\\"bezahlung-card__status\\\"> <span class=\\\"material-icons\\\" data-ref=\\\"icon-done\\\" style=\\\"display:none\\\" title=\\\"lokal zwischengespeichert\\\"> schedule </span> <span class=\\\"material-icons\\\" data-ref=\\\"icon-done-all\\\" style=\\\"display:none\\\" title=\\\"synchronisiert\\\"> done_all </span> <span class=\\\"material-icons\\\" data-ref=\\\"icon-sync\\\" style=\\\"display:none\\\" title=\\\"synchronisieren...\\\"> sync </span> </div> </div>\";\n// Exports\nexport default code;","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","export function groupBy<T, K extends keyof T>(list: T[], key: K) {\n    const map = new Map<T[K], T[]>();\n    list.forEach((item) => {\n        const k = item[key];\n        const collection = map.get(k);\n        if (!collection) {\n            map.set(k, [item]);\n        } else {\n            collection.push(item);\n        }\n    });\n    return map;\n}\n","import template from \"./BezahlungenGroup.html\";\nimport \"../BezahlungCard/BezahlungCard\";\nimport { BezahlungViewModel } from \"./BezahlungViewModel\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BeschreibungAttribute, BezahlendePersonAttribute, BezahlungCard, BezahlungIdAttribute, EmpfaengerAttribute, StatusAttribute, WertAttribute } from \"../BezahlungCard/BezahlungCard\";\n\nexport class BezahlungenGroup extends HTMLElement {\n    private container: HTMLDivElement;\n    private titleElement: HTMLHeadingElement;\n    private bezahlungenRenderer: ArrayToElementRenderer<BezahlungViewModel, BezahlungCard, string>;\n    private rendered = false;\n    private bezahlungen: BezahlungViewModel[] = [];\n    private _title: string = \"\";\n\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.container = this.querySelector(`[data-ref=\"container\"]`);\n            this.titleElement = this.querySelector(`[data-ref=\"title\"]`);\n            this.bezahlungenRenderer = new ArrayToElementRenderer(this.container,\n                (b: BezahlungViewModel) => b.id,\n                b => new BezahlungCard());\n            this.update();\n        }\n    }\n\n    disconnectedCallback() {\n\n    }\n\n\n    setBezahlungen(bezahlungen: BezahlungViewModel[]) {\n        this.bezahlungen = bezahlungen;\n        this.update();\n    }\n\n    set title(t: string) {\n        this._title = t;\n        this.update();\n    }\n\n    private update() {\n        if (this.rendered) {\n            this.bezahlungenRenderer.update(this.bezahlungen, (e, b) => {\n                e.setAttribute(BeschreibungAttribute, b.beschreibung);\n                e.setAttribute(WertAttribute, \"\" + b.wert);\n                e.setAttribute(BezahlendePersonAttribute, b.bezahlendePersonName);\n                e.setAttribute(EmpfaengerAttribute, b.empfaenger);\n                e.setAttribute(StatusAttribute, b.status);\n                e.setAttribute(BezahlungIdAttribute, b.id);\n            });\n            this.titleElement.innerText = this._title;\n        }\n    }\n\n}\nexport const BezahlungenGroupTagName = \"bezahlungen-group\";\ncustomElements.define(BezahlungenGroupTagName, BezahlungenGroup);\n","// Module\nvar code = \"<h3 data-ref=\\\"title\\\" class=\\\"bezahlungen-group__title\\\">Gruppe</h3> <div class=\\\"bezahlungen-group__container\\\" data-ref=\\\"container\\\"></div>\";\n// Exports\nexport default code;","import template from \"./BezahlungenView.html\";\nimport \"./BezahlungenView.scss\";\nimport \"../BezahlungCard/BezahlungCard\";\nimport { Bezahlung, Person } from \"../../state/State\";\nimport { addDays, startOfToday, startOfDay, startOfWeek, endOfWeek } from \"date-fns\";\nimport { groupBy } from \"../../utils/groupBy\";\nimport \"./BezahlungenGroup\";\nimport { BezahlungViewModel } from \"./BezahlungViewModel\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { BezahlungenGroup } from \"./BezahlungenGroup\";\n\nexport class BezahlungenView extends HTMLElement {\n    private minEintraege: number;\n    private minTage: number;\n    private all: boolean;\n    private bezahlungen: Bezahlung[] = [];\n    private personen: Person[] = [];\n    private bezahlungenContainer: HTMLDivElement;\n    private showMoreButton: HTMLButtonElement;\n    private groupRenderer: ArrayToElementRenderer<[number, BezahlungViewModel[]], BezahlungenGroup, string>;\n    private templateApplied = false;\n    private scrollToElement: Element;\n\n    constructor() {\n        super();\n        this.minTage = 3;\n        this.minEintraege = 20;\n        this.all = false;\n    }\n\n    connectedCallback() {\n        if (!this.templateApplied) {\n            this.templateApplied = true;\n            this.innerHTML = template;\n            this.bezahlungenContainer = this.querySelector(\"#bezahlungen-container\");\n            this.showMoreButton = this.querySelector(\"#show-more\");\n            this.showMoreClick = this.showMoreClick.bind(this);\n            this.groupRenderer = new ArrayToElementRenderer(this.bezahlungenContainer,\n                (s: [number, BezahlungViewModel[]]) => \"\" + s[0], () => new BezahlungenGroup());\n            this.render();\n        }\n        this.showMoreButton.addEventListener(\"click\", this.showMoreClick);\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private setShowMoreButtonDisplay() {\n        if (this.bezahlungen) {\n            this.showMoreButton.style.display = this.bezahlungen.length > this.anzahlEintraege ? \"inline\" : \"none\";\n        }\n    }\n\n    private showMoreClick() {\n        let cards = this.bezahlungenContainer.lastElementChild.querySelectorAll(\"bezahlung-card\");\n        this.scrollToElement = cards[cards.length - 1];\n        this.anzahlEintraege += 20;\n\n        this.setShowMoreButtonDisplay();\n    }\n\n    private formatEmpfaenger(z: Bezahlung, personen: Person[]) {\n        if (z.empfaengerIds.length == personen.length) {\n            return \"alle\";\n        }\n        return z.empfaengerIds.map(id => personen.find(p => p.id == id).name).join(\", \");\n    }\n\n    setBezahlungen(bezahlungen: Bezahlung[], personen: Person[]) {\n        this.bezahlungen = bezahlungen;\n        this.personen = personen;\n        this.setShowMoreButtonDisplay();\n        this.render();\n    }\n\n    private render() {\n        if (this.templateApplied) {\n            let sorted = this.bezahlungen.sort((a, b) => +b.zeitpunkt - +a.zeitpunkt);\n\n            let filtered = sorted;\n            if (!this.all) {\n                filtered = sorted.filter(z => z.zeitpunkt > addDays(startOfToday(), -this.minTage));\n                if (filtered.length < this.minEintraege) {\n                    filtered = sorted.slice(0, this.minEintraege)\n                }\n            }\n\n            let mapped = filtered.map(z => {\n                let x: BezahlungViewModel = {\n                    bezahlendePersonName: this.personen.find(p => p.id == z.bezahlendePersonId).name,\n                    wert: z.wert,\n                    beschreibung: z.beschreibung,\n                    empfaenger: this.formatEmpfaenger(z, this.personen),\n                    tag: +startOfDay(z.zeitpunkt),\n                    id: z.id,\n                    woche: +startOfWeek(z.zeitpunkt),\n                    status: z.status\n                };\n                return x;\n            });\n\n            let isWeek = false;\n            let grouped = Array.of(...groupBy(mapped, \"tag\").entries());\n            let avgGroupSize = grouped.reduce((p, c) => p + c[1].length, 0) / grouped.length;\n            if (avgGroupSize < 3) {\n                grouped = Array.of(...groupBy(mapped, \"woche\").entries());\n                isWeek = true;\n            }\n            let sortedGroups = grouped.sort((a, b) => b[0] - a[0]);\n            this.groupRenderer.update(sortedGroups,\n                (e, d) => {\n                    e.setBezahlungen(d[1]);\n                    if (isWeek) {\n                        e.title = this.formatWeek(new Date(d[0]));\n                    }\n                    else {\n\n                        e.title = this.formatDay(new Date(d[0]));\n                    }\n                });\n            if (this.scrollToElement) {\n                this.scrollToElement.scrollIntoView({ behavior: \"smooth\" });\n                this.scrollToElement = null;\n            }\n        }\n    }\n\n    get anzahlEintraege() {\n        return this.minEintraege;\n    }\n\n    set anzahlEintraege(val: number) {\n        this.minEintraege = val;\n        this.render();\n    }\n\n\n    private formatWeek(date: Date) {\n        let endWeek = endOfWeek(date);\n        let weekformat: string;\n        const dayAndMonth = (d: Date) => new Intl.DateTimeFormat([\"de-AT\"], { day: \"numeric\", month: \"long\" }).format(d);\n        if (endWeek.getMonth() == date.getMonth()) {\n            weekformat = `${new Intl.DateTimeFormat([\"de-AT\"], { day: \"numeric\" }).format(date)}. - ${dayAndMonth(endWeek)}`;\n        }\n        else {\n            weekformat = `${dayAndMonth(date)} - ${dayAndMonth(endWeek)}`;\n        }\n        return weekformat;\n    }\n\n    private formatDay(date: Date) {\n        return new Intl.DateTimeFormat([\"de-AT\"], { weekday: \"short\", year: \"numeric\", month: \"2-digit\", day: \"2-digit\" }).format(date);\n    }\n}\nexport const BezahlungenViewTagName = \"bezahlungen-view\";\ncustomElements.define(BezahlungenViewTagName, BezahlungenView);\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import startOfDay from \"../startOfDay/index.js\";\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import { ServiceLocator } from \"../../ServiceLocator\";\nimport { WorkerService, workerServiceFactory } from \"../../lib/WorkerService\";\n\nexport class KontokorrentActionCreator {\n\n    constructor(private workerService: WorkerService) {\n\n    }\n\n    kontokorrentOeffnen(oeffentlicherName: string) {\n        this.workerService.kontokorrentOeffnen(oeffentlicherName);\n    }\n}\n\nexport function kontokorrentActionCreatorFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"KontokorrentActionCreator\",\n        serviceLocator => new KontokorrentActionCreator(\n            workerServiceFactory(serviceLocator)\n        ));\n}","import template from \"./KontokorrentPage.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { KontokorrentState, State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport \"../BalanceAnzeige/BalanceAnzeigeElement\";\nimport { BalanceAnzeige } from \"../BalanceAnzeige/BalanceAnzeige\";\nimport \"../BalanceAnzeige/BalanceAnzeige\";\nimport \"../BezahlungenView/BezahlungenView\";\nimport { BezahlungenView } from \"../BezahlungenView/BezahlungenView\";\nimport \"./KontokorrentPage.scss\";\nimport { KontokorrentActionCreator, kontokorrentActionCreatorFactory } from \"../../state/actions/KontokorrentActionCreator\";\nimport { KontokorrentListenActionCreator, kontokorrentListenActionCreatorFactory } from \"../../state/actions/KontokorrentListenActionCreator\";\n\nexport class KontokorrentPage extends HTMLElement {\n    private store: Store;\n    private subscription: () => void;\n    private routingActionCreator: RoutingActionCreator;\n    private kontokorrentActionCreator: KontokorrentActionCreator;\n    private appBar: AppBar;\n    private balanceAnzeige: BalanceAnzeige;\n    private bezahlungenView: BezahlungenView;\n    private kontokorrentSpinner: HTMLSpanElement;\n    private kontokorrent: KontokorrentState;\n    private kontokorrentListenActionCreator: KontokorrentListenActionCreator;\n    private bezahlungClickListener: (e: CustomEvent) => void;\n    private oeffentlicherNameParameter: string;\n    private rendered = false;\n    private serviceLocator: ServiceLocator;\n    private navigiertZuNichtGefunden = false;\n\n    constructor() {\n        super();\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.kontokorrentActionCreator = kontokorrentActionCreatorFactory(serviceLocator);\n        this.kontokorrentListenActionCreator = kontokorrentListenActionCreatorFactory(serviceLocator);\n        this.serviceLocator = serviceLocator;\n    }\n\n    private bezahlungClick(id: string) {\n        this.routingActionCreator.navigateBezahlung(this.kontokorrent.id, id);\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.appBar = this.querySelector(AppBarTagName);\n            this.appBar.addServices(this.serviceLocator);\n            this.balanceAnzeige = this.querySelector(\"#balance-anzeige\");\n            this.bezahlungenView = this.querySelector(\"#bezahlungen-view\");\n            this.kontokorrentSpinner = this.querySelector(\"#spinner\");\n        }\n        if (!this.oeffentlicherNameParameter) {\n            this.kontokorrentListenActionCreator.navigiereZuLetztGesehenem(true);\n        }\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.appBar.addEventListener(\"gotokontokorrent\", async (e: CustomEvent) => {\n            await this.routingActionCreator.navigateKontokorrentById(e.detail);\n        });\n        convertLinks(this.querySelectorAll(\"#eintragen-desktop, #eintragen-mobile\"), this.routingActionCreator);\n        this.applyStoreState(this.store.state);\n        this.bezahlungClickListener = e => this.bezahlungClick(e.detail);\n        this.bezahlungenView.addEventListener(\"bezahlungclick\", this.bezahlungClickListener);\n    }\n\n    private applyStoreState(state: State) {\n        this.kontokorrent = state.kontokorrents.kontokorrents[state.kontokorrents.activeKontokorrentId];\n        if (this.kontokorrent) {\n            document.title = `${this.kontokorrent.name} - Kontokorrent`;\n            if (this.kontokorrent.personen) {\n                this.balanceAnzeige.setBalance(this.kontokorrent.personen);\n                this.bezahlungenView.setBezahlungen(this.kontokorrent.bezahlungen, this.kontokorrent.personen);\n            }\n            this.kontokorrentSpinner.style.display = this.kontokorrent.synchronisieren ? \"flex\" : \"none\";\n        }\n        if (state.kontokorrents.nichtGefunden && !this.navigiertZuNichtGefunden) {\n            this.navigiertZuNichtGefunden = true;\n            this.routingActionCreator.navigateNichtGefunden(state.kontokorrents.nichtGefunden.oeffentlicherName);\n        }\n    }\n\n    setRouteParameters(oeffentlicherName: string) {\n        this.oeffentlicherNameParameter = oeffentlicherName;\n        this.kontokorrentActionCreator.kontokorrentOeffnen(oeffentlicherName);\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n        this.bezahlungenView.removeEventListener(\"bezahlungclick\", this.bezahlungClickListener);\n    }\n}\n\ncustomElements.define('kontokorrent-page', KontokorrentPage);\n","import { round } from \"./round\";\n\nexport function formatCurrency(wert: number) {\n    var Betrag: string = \"\" + round(wert, 2);\n    var Kommaindex = Betrag.toString().indexOf(\".\");\n    var Nachkommastellen = 0;\n    if (Kommaindex != -1) {\n        Nachkommastellen = Betrag.toString().length - (Kommaindex + 1);\n        if (Nachkommastellen == 1)\n            Betrag += '0';\n    }\n    return Betrag;\n}\n","export function round(value: number, decimals: number) {\n\n    //Removing scientific notation if used:\n    var valueString = value.toString();\n    var indexOfE = valueString.indexOf(\"E\");\n    var indexOfe = valueString.indexOf(\"e\");\n    var power = 0;\n    if (indexOfe > -1) {\n        power = parseFloat(valueString.substring(indexOfe + 1));\n        valueString = valueString.substring(0, indexOfe)\n    } else if (indexOfE > -1) {\n        power = parseFloat(valueString.substring(indexOfE + 1));\n        valueString = valueString.substring(0, indexOfE)\n    }\n    //round\n    return Number(Math.round(Number(valueString + 'e' + (power + decimals))) + 'e-' + (decimals));\n}"],"names":["requiredArgs","required","args","length","TypeError","toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","startOfDay","dirtyDate","arguments","date","toDate","setHours","argument","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","PersonNameAttribute","BalanceAttribute","BalanceRangeAttribute","template","ReuseableTemplate","HTMLElement","constructor","super","this","templateInstance","getInstance","connectedCallback","apply","personNameElement","querySelector","balanceTextElement","balanceContainerElement","barElement","updatesStyle","requestAnimationFrame","style","transform","disconnectedCallback","attributeChangedCallback","updateAttributes","personName","getAttribute","balance","parseFloat","balanceRange","max","isApplied","innerText","formatCurrency","scale","sign","abs","balanceTransform","classList","add","remove","customElements","define","BalanceAnzeige","personen","rendered","personenRenderer","ArrayToElementRenderer","b","id","innerHTML","setBalance","values","map","v","update","e","setAttribute","name","BeschreibungAttribute","WertAttribute","BezahlendePersonAttribute","EmpfaengerAttribute","StatusAttribute","BezahlungIdAttribute","attributeStore","beschreibung","bezahlendePerson","empfaenger","wert","status","onClick","dispatchEvent","CustomEvent","detail","bubbles","beschreibungElement","bezahlendePersonElement","empfaengerElement","wertElement","doneElement","doneAllElement","syncElement","clickListener","addEventListener","removeEventListener","checkChanged","prop","getAtt","att","some","display","startOfWeek","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","day","getDay","diff","setDate","getDate","groupBy","list","key","Map","forEach","item","k","collection","get","push","set","BezahlungenGroup","bezahlungen","_title","container","titleElement","bezahlungenRenderer","setBezahlungen","t","bezahlendePersonName","BezahlungenView","templateApplied","minTage","minEintraege","all","bezahlungenContainer","showMoreButton","showMoreClick","bind","groupRenderer","s","render","setShowMoreButtonDisplay","anzahlEintraege","cards","lastElementChild","querySelectorAll","scrollToElement","formatEmpfaenger","z","empfaengerIds","find","p","join","sorted","sort","a","zeitpunkt","filtered","filter","dirtyAmount","amount","addDays","now","slice","mapped","bezahlendePersonId","tag","woche","isWeek","grouped","Array","of","entries","reduce","c","sortedGroups","d","title","formatWeek","formatDay","scrollIntoView","behavior","val","weekformat","endWeek","endOfWeek","dayAndMonth","Intl","DateTimeFormat","month","format","getMonth","weekday","year","KontokorrentActionCreator","workerService","kontokorrentOeffnen","oeffentlicherName","KontokorrentPage","navigiertZuNichtGefunden","addServices","serviceLocator","store","routingActionCreator","kontokorrentActionCreator","kontokorrentActionCreatorFactory","kontokorrentListenActionCreator","bezahlungClick","navigateBezahlung","kontokorrent","appBar","AppBar","balanceAnzeige","bezahlungenView","kontokorrentSpinner","oeffentlicherNameParameter","navigiereZuLetztGesehenem","subscription","subscribe","state","applyStoreState","async","navigateKontokorrentById","convertLinks","bezahlungClickListener","kontokorrents","activeKontokorrentId","document","synchronisieren","nichtGefunden","navigateNichtGefunden","setRouteParameters","valueString","indexOfE","indexOfe","power","Betrag","indexOf","substring","round","Kommaindex"],"sourceRoot":""}