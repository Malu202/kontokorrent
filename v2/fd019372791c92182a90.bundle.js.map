{"version":3,"file":"fd019372791c92182a90.bundle.js","mappings":"iHAAe,SAASA,EAAaC,EAAUC,GAC7C,GAAIA,EAAKC,OAASF,EAChB,MAAM,IAAIG,UAAUH,EAAW,aAAeA,EAAW,EAAI,IAAM,IAAM,uBAAyBC,EAAKC,OAAS,Y,8GCuBrG,SAASE,EAASC,IAC/BN,EAAAA,EAAAA,GAAa,EAAGO,WAChB,IAAIC,GAAOC,EAAAA,EAAAA,GAAOH,GAElB,OADAE,EAAKE,SAAS,GAAI,GAAI,GAAI,KACnBF,I,4ECJM,SAASG,EAAUC,EAAeC,IAC/Cb,EAAAA,EAAAA,GAAa,EAAGO,WAChB,IAAIO,GAAqBC,EAAAA,EAAAA,GAAWH,GAChCI,GAAsBD,EAAAA,EAAAA,GAAWF,GACrC,OAAOC,EAAmBG,YAAcD,EAAoBC,Y,6ECJ/C,SAASF,EAAWT,IACjCN,EAAAA,EAAAA,GAAa,EAAGO,WAChB,IAAIC,GAAOC,EAAAA,EAAAA,GAAOH,GAElB,OADAE,EAAKE,SAAS,EAAG,EAAG,EAAG,GAChBF,I,mECGM,SAASC,EAAOS,IAC7BlB,EAAAA,EAAAA,GAAa,EAAGO,WAChB,IAAIY,EAASC,OAAOC,UAAUC,SAASC,KAAKL,GAE5C,OAAIA,aAAoBM,MAA4B,iBAAbN,GAAoC,kBAAXC,EAEvD,IAAIK,KAAKN,EAASD,WACI,iBAAbC,GAAoC,oBAAXC,EAClC,IAAIK,KAAKN,IAES,iBAAbA,GAAoC,oBAAXC,GAAoD,oBAAZM,UAE3EA,QAAQC,KAAK,oJAEbD,QAAQC,MAAK,IAAIC,OAAQC,QAGpB,IAAIJ,KAAKK,Q,wEChDpB,I,4DCcM,MAAOC,UAAsBC,YA4B/BC,cACIC,QAhBI,KAAAC,0BAA4B,IAAIC,EAAA,EAShC,KAAAC,YAAsB,EAQ1BC,KAAKC,UD5CF,otEC6CHD,KAAKE,YAAcF,KAAKG,cAAc,6BACtCH,KAAKI,OAASJ,KAAKG,cAAcE,EAAA,GACjCL,KAAKM,uBAAyBN,KAAKG,cAAcI,EAAA,GACjDP,KAAKQ,4BAA8BR,KAAKG,cAAc,mCACtDH,KAAKS,kCAAoCT,KAAKG,cAAc,wCAC5DH,KAAKU,wBAA0BV,KAAKG,cAAc,8BAClDH,KAAKW,yBAA2BX,KAAKG,cAAc,+BACnDH,KAAKY,aAAeZ,KAAKG,cAAc,sBACvCH,KAAKa,aAAeb,KAAKG,cAAc,sBACvCH,KAAKc,eAAiBd,KAAKG,cAAc,oBACzCH,KAAKe,gBAAkBf,KAAKG,cAAc,wBAC1CH,KAAKgB,gBAAkBhB,KAAKG,cAAc,wBAC1CH,KAAKiB,YAAcjB,KAAKG,cAAc,iBACtCH,KAAKkB,YAAclB,KAAKG,cAAc,iBACtCH,KAAKmB,cAAgBnB,KAAKG,cAAc,8BAG5CiB,YAAYC,GACRrB,KAAKsB,MAAQD,EAAeC,MAC5BtB,KAAKuB,sBAAuB,OAA4BF,GACxDrB,KAAKwB,wBAAyB,QAA8BH,GAC5DrB,KAAKI,OAAOgB,YAAYC,GAG5BI,oBACIzB,KAAK0B,0BAA4B1B,KAAKsB,MAAMK,UAAU,iBAAiBC,GAAK5B,KAAK6B,gBAAgBD,KACjG5B,KAAK8B,kCAAoC9B,KAAKsB,MAAMK,UAAU,2BAA2BC,GAAK5B,KAAK+B,+BAA+BH,KAClI5B,KAAKI,OAAO4B,iBAAiB,oBAAqBC,IAC9CjC,KAAKuB,qBAAqBW,qBAAqBD,EAAEE,YAErD,EAAAC,EAAA,GAAa,CAACpC,KAAKE,aAAcF,KAAKuB,sBACtCvB,KAAK+B,+BAA+B/B,KAAKsB,MAAMe,OAC/CrC,KAAKM,uBAAuB0B,iBAAiB,kBAAmBM,GAAoBtC,KAAKuC,eAAeD,EAAGH,UAC3GnC,KAAKwC,aAAexC,KAAKG,cAAc,kBACvCH,KAAKyC,aAAezC,KAAKG,cAAc,kBACvCH,KAAKG,cAAc,sBAAsB6B,iBAAiB,SAAUC,IAC5DjC,KAAKM,uBAAuBoC,WAC5B1C,KAAKwC,aAAaG,OAGlB3C,KAAKmB,cAAcyB,OAAO,CAAEC,IAAK,EAAGC,SAAU,WAElDb,EAAEc,qBAEN/C,KAAKG,cAAc,mBAAmB6B,iBAAiB,SAASgB,UAC5DhD,KAAKwC,aAAaS,OAClB,IAAIC,EAAOlD,KAAKM,uBAAuB6C,gBACjCnD,KAAKwB,uBAAuB4B,oBAAoBpD,KAAKqD,wBAAyBrD,KAAKsD,qBAAsBJ,GAC/GlD,KAAKuB,qBAAqBW,qBAAqBlC,KAAKqD,4BAExDrD,KAAKG,cAAc,iBAAiB6B,iBAAiB,SAAS,KAC1DhC,KAAKwC,aAAaS,UAEtBjD,KAAKG,cAAc,sBAAsB6B,iBAAiB,SAAUC,IAChEjC,KAAKyC,aAAaE,OAClBV,EAAEc,qBAEN/C,KAAKG,cAAc,mBAAmB6B,iBAAiB,SAASgB,UAC5DhD,KAAKyC,aAAaQ,aACZjD,KAAKwB,uBAAuB+B,kBAAkBvD,KAAKqD,wBAAyBrD,KAAKsD,sBACvFtD,KAAKuB,qBAAqBW,qBAAqBlC,KAAKqD,4BAExDrD,KAAKG,cAAc,iBAAiB6B,iBAAiB,SAAS,KAC1DhC,KAAKyC,aAAaQ,UAGN,qBAACO,GACjB,UACUxD,KAAKH,0BAA0B4D,QAAQ,KAEjD,MAAOC,IAGP1D,KAAKwB,uBAAuBmC,2BAA2B3D,KAAKqD,wBAAyBG,GAEjFzB,+BAA+BH,G,OACN,QAAzB,EAAAA,EAAEgC,+BAAuB,eAAEC,iBAAkB7D,KAAKqD,wBAClDrD,KAAKM,uBAAuBsD,wBAA0BhC,EAAEgC,wBAAwBE,YAAYC,MAAM,EAAG,IAGrG/D,KAAKM,uBAAuBsD,wBAA0B,GAItD/B,gBAAgBD,GACpB,IAAIoC,GAAW,EACXC,GAAW,EACXC,GAAW,EACXjD,GAAc,EACdC,GAAc,EAClB,GAAIlB,KAAKqD,yBAA2BrD,KAAKsD,qBAAsB,CAC3D,IAAIa,EAAevC,EAAEwC,cAAcA,cAAcpE,KAAKqD,yBACtD,GAAIc,EAAc,CACdnE,KAAKM,uBAAuB+D,SAAWF,EAAaE,SACpD,IAAIC,EAAsBH,EAAaG,oBAAoBtE,KAAKsD,sBAC5DgB,IACAtE,KAAKQ,4BAA4B+D,OAA+C,GAAtCD,EAAoBE,mBAC9DxE,KAAKS,kCAAkC8D,OAA+C,GAAtCD,EAAoBE,mBACpExE,KAAKU,wBAAwB6D,OAA+C,GAAtCD,EAAoBE,mBAC1DxE,KAAKW,yBAAyB4D,OAA+C,GAAtCD,EAAoBE,mBAC3DR,EAAiD,GAAtCM,EAAoBE,mBAC/BP,EAA2C,GAAhCK,EAAoBG,aAC/BxD,EAA8C,GAAhCqD,EAAoBG,aAClCP,EAA2C,GAAhCI,EAAoBI,aAC/BxD,EAA8C,GAAhCoD,EAAoBI,cAEtC,IAAIC,EAAgBR,EAAaS,YAAYC,MAAKC,GAAKA,EAAEC,IAAM/E,KAAKsD,uBAChEa,EAAaE,UAAYF,EAAaE,SAASvG,OAAS,GACrD6G,IAAkB3E,KAAKD,aAC1BC,KAAKD,YAAa,EAClBC,KAAKM,uBAAuB0E,QAAQL,KAIhD3E,KAAKY,aAAaqE,MAAMC,WAAalB,EAAW,UAAY,WAC5DhE,KAAKa,aAAaoE,MAAMC,WAAalB,EAAW,UAAY,WAC5DhE,KAAKe,gBAAgBkE,MAAME,QAAUlB,EAAW,GAAK,OACrDjE,KAAKgB,gBAAgBiE,MAAME,QAAUjB,EAAW,GAAK,OACrDlE,KAAKc,eAAemE,MAAME,QAAWlB,GAAYC,EAAY,OAAS,GACtElE,KAAKM,uBAAuB2E,MAAME,QAAUnB,EAAW,GAAK,OAC5DhE,KAAKiB,YAAYsD,QAAUtD,EAC3BjB,KAAKkB,YAAYqD,QAAUrD,EAG/BkE,mBAAmBvB,EAAwBwB,GACvCrF,KAAKqD,wBAA0BQ,EAC/B7D,KAAKsD,qBAAuB+B,EAC5BrF,KAAKE,YAAYoF,KAAjB,wBAAyCzB,GACzC7D,KAAKwB,uBAAuB+D,mBAAmB1B,EAAgBwB,GAGnEG,uBACIxF,KAAK0B,4BACL1B,KAAK8B,qCAIb2D,eAAeC,OAAO,iBAAkBjG,I,6DCvLlC,MAAOK,EAETH,eAGQgG,QAAQC,GACZ,OAAO,IAAIC,SAASC,IAChBC,YAAW,KACPD,MACDF,MAIHI,UACJ,IAAIC,EAAS,CACTC,SAAS,EACTC,QAAwB,MAExBA,EAAU,IAAIN,SAAc,CAACC,EAASM,KACtCpG,KAAKqG,MAAQ,KACTJ,EAAOC,SAAU,EACjBE,QAIR,OADAH,EAAOE,QAAUA,EACVF,EAGE,cAACL,GACN5F,KAAKqG,OACLrG,KAAKqG,QAET,IAAIJ,EAASjG,KAAKgG,UAClB,UACUH,QAAQS,KAAK,CAACtG,KAAK2F,QAAQC,GAAKK,EAAOE,UAEjD,MAAMzC,GACF,MAAM,IAAIpE,MAAM,e,qBCpCpB,EAAQ,KAIhBiH,CAAE,CAAEC,OAAQ,MAAOC,OAAO,EAAMC,YAAY,GAAQ,CAClDC,OAAQ,WACN,OAAOC,IAAI5H,UAAUC,SAASC,KAAKc","sources":["webpack://kontokorrent/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/endOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/isSameDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/toDate/index.js","webpack://kontokorrent/./src/components/BezahlungPage/BezahlungPage.html","webpack://kontokorrent/./src/components/BezahlungPage/BezahlungPage.ts","webpack://kontokorrent/./src/utils/Debouncer.ts","webpack://kontokorrent/./node_modules/core-js/modules/web.url.to-json.js"],"sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","// Module\nvar code = \"<app-bar></app-bar> <div id=\\\"bezahlung__edit\\\" class=\\\"bezahlung__edit\\\"> <div class=\\\"bezahlung-page-menu\\\"> <a id=\\\"zurueck-zum-kontokorrent\\\" class=\\\"button\\\"> <span class=\\\"material-icons\\\"> arrow_back </span> zurück </a> <button class=\\\"button\\\" title=\\\"speichern\\\" id=\\\"bezahlung__delete\\\"> <span class=\\\"material-icons\\\"> delete </span> löschen </button> <button class=\\\"button\\\" title=\\\"speichern\\\" id=\\\"bezahlung__update\\\"> <span class=\\\"material-icons\\\"> save </span> speichern </button> </div> <div class=\\\"bezahlung__form-container\\\" id=\\\"bezahlung__form-container\\\"> <div id=\\\"update-error\\\" class=\\\"alert alert--error\\\" hidden> Zahlung konnte nicht bearbeitet werden. </div> <div id=\\\"delete-error\\\" class=\\\"alert alert--error\\\" hidden> Zahlung konnte nicht bearbeitet werden. </div> <div id=\\\"bezahlung-nicht-gefunden-error\\\" class=\\\"alert alert--error\\\" hidden> Zahlung konnte nicht gefunden werden. </div> <div id=\\\"bezahlung-zwischengespeichert-error\\\" class=\\\"alert alert--error\\\" hidden> Zahlung kann nicht geöffnet werden, weil sie noch synchronisiert wird. </div> <div id=\\\"bezahlung-geloescht-error\\\" class=\\\"alert alert--error\\\" hidden> Zahlung kann nicht verändert werden, weil sie gelöscht wurde. </div> <div id=\\\"bezahlung-bearbeitet-error\\\" class=\\\"alert alert--error\\\" hidden> Zahlung kann nicht verändert werden, weil sie bereits bearbeitet wurde. </div> <bezahlung-eintragen-form> </bezahlung-eintragen-form> </div> </div> <div class=\\\"bezahlung__progress\\\" id=\\\"bezahlung__updating\\\"> <span class=\\\"spinner\\\"></span> <span>wird gespeichert</span> </div> <div class=\\\"bezahlung__progress\\\" id=\\\"bezahlung__deleting\\\"> <span class=\\\"spinner\\\"></span> <span>wird gelöscht</span> </div> <app-popup id=\\\"update-dialog\\\"> <div class=\\\"dialog__backdrop\\\"></div> <div class=\\\"dialog\\\"> <p> Geänderte Bezahlung speichern? </p> <div class=\\\"dialog__button-pane\\\"> <button id=\\\"abort-update\\\" class=\\\"button\\\">Abbrechen</button> <button id=\\\"confirm-update\\\" class=\\\"button\\\">Speichern</button> </div> </div> </app-popup> <app-popup id=\\\"delete-dialog\\\"> <div class=\\\"dialog__backdrop\\\"></div> <div class=\\\"dialog\\\"> <p> Bezahlung löschen? </p> <div class=\\\"dialog__button-pane\\\"> <button id=\\\"abort-delete\\\" class=\\\"button\\\">Abbrechen</button> <button id=\\\"confirm-delete\\\" class=\\\"button\\\">Löschen</button> </div> </div> </app-popup>\";\n// Exports\nexport default code;","import template from \"./BezahlungPage.html\";\nimport { Store } from \"../../state/Store\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport \"./BezahlungPage.scss\";\nimport { BezahlungActionCreator, bezahlungActionCreatorFactory } from \"../../state/actions/BezahlungActionCreator\";\nimport { RequestStatus, State } from \"../../state/State\";\nimport { convertLinks } from \"../convertLinks\";\nimport \"../BezahlungEintragenForm/BezahlungEintragenForm\";\nimport { BezahlungEintragenForm, BezahlungEintragenFormTagName } from \"../BezahlungEintragenForm/BezahlungEintragenForm\";\nimport { Debouncer } from \"../../utils/Debouncer\";\nimport { BearbeitungsStatus } from \"../../lib/BearbeitungsStatus\";\nimport { Popup } from \"../ui-components/popup/popup\";\n\nexport class BezahlungPage extends HTMLElement {\n    private store: Store;\n    private kontokorrentsSubscription: () => void;\n    private routingActionCreator: RoutingActionCreator;\n    private appBar: AppBar;\n    private bezahlungActionCreator: BezahlungActionCreator;\n    private zurueckLink: HTMLAnchorElement;\n    private bezahlungEintragenForm: BezahlungEintragenForm;\n    private editingSection: HTMLDivElement;\n    private updatingSection: HTMLDivElement;\n    private deletingSection: HTMLDivElement;\n    private formContainer: HTMLDivElement;\n    private beschreibungVorschlagSubscription: () => void;\n    private betreffVorschlagDebouncer = new Debouncer();\n    private kontokorrentIdParameter: string;\n    private bezahlungIdParameter: string;\n    private bezahlungNichtGefundenError: HTMLDivElement;\n    private bezahlungZwischengespeichertError: HTMLDivElement;\n    private bezahlungGeloeschtError: HTMLDivElement;\n    private bezahlungBearbeitetError: HTMLDivElement;\n    private updateButton: HTMLButtonElement;\n    private deleteButton: HTMLButtonElement;\n    private dataLoaded: boolean = false;\n    private updateDialog: Popup;\n    private deleteDialog: Popup;\n    private updateError: HTMLDivElement;\n    private deleteError: HTMLDivElement;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.zurueckLink = this.querySelector(\"#zurueck-zum-kontokorrent\");\n        this.appBar = this.querySelector(AppBarTagName);\n        this.bezahlungEintragenForm = this.querySelector(BezahlungEintragenFormTagName);\n        this.bezahlungNichtGefundenError = this.querySelector(\"#bezahlung-nicht-gefunden-error\");\n        this.bezahlungZwischengespeichertError = this.querySelector(\"#bezahlung-zwischengespeichert-error\");\n        this.bezahlungGeloeschtError = this.querySelector(\"#bezahlung-geloescht-error\");\n        this.bezahlungBearbeitetError = this.querySelector(\"#bezahlung-bearbeitet-error\");\n        this.updateButton = this.querySelector(\"#bezahlung__update\");\n        this.deleteButton = this.querySelector(\"#bezahlung__delete\");\n        this.editingSection = this.querySelector(\"#bezahlung__edit\");\n        this.updatingSection = this.querySelector(\"#bezahlung__updating\");\n        this.deletingSection = this.querySelector(\"#bezahlung__deleting\");\n        this.updateError = this.querySelector(\"#update-error\");\n        this.deleteError = this.querySelector(\"#delete-error\");\n        this.formContainer = this.querySelector(\"#bezahlung__form-container\");\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.bezahlungActionCreator = bezahlungActionCreatorFactory(serviceLocator);\n        this.appBar.addServices(serviceLocator);\n    }\n\n    connectedCallback() {\n        this.kontokorrentsSubscription = this.store.subscribe(\"kontokorrents\", s => this.applyStoreState(s));\n        this.beschreibungVorschlagSubscription = this.store.subscribe(\"beschreibungVorschlaege\", s => this.beschreibungVorschlaegeChanged(s));\n        this.appBar.addEventListener(\"gotokontokorrent\", (e: CustomEvent) => {\n            this.routingActionCreator.navigateKontokorrent(e.detail);\n        });\n        convertLinks([this.zurueckLink], this.routingActionCreator);\n        this.beschreibungVorschlaegeChanged(this.store.state);\n        this.bezahlungEintragenForm.addEventListener(\"betreffChanged\", (ev: CustomEvent) => this.betreffChanged(ev.detail));\n        this.updateDialog = this.querySelector(\"#update-dialog\");\n        this.deleteDialog = this.querySelector(\"#delete-dialog\");\n        this.querySelector(\"#bezahlung__update\").addEventListener(\"click\", (e: MouseEvent) => {\n            if (this.bezahlungEintragenForm.validate()) {\n                this.updateDialog.show();\n            }\n            else {\n                this.formContainer.scroll({ top: 0, behavior: \"smooth\" });\n            }\n            e.stopPropagation();\n        });\n        this.querySelector(\"#confirm-update\").addEventListener(\"click\", async () => {\n            this.updateDialog.hide();\n            let data = this.bezahlungEintragenForm.getData();\n            await this.bezahlungActionCreator.bezahlungBearbeiten(this.kontokorrentIdParameter, this.bezahlungIdParameter, data);\n            this.routingActionCreator.navigateKontokorrent(this.kontokorrentIdParameter);\n        });\n        this.querySelector(\"#abort-update\").addEventListener(\"click\", () => {\n            this.updateDialog.hide();\n        });\n        this.querySelector(\"#bezahlung__delete\").addEventListener(\"click\", (e: MouseEvent) => {\n            this.deleteDialog.show();\n            e.stopPropagation();\n        });\n        this.querySelector(\"#confirm-delete\").addEventListener(\"click\", async () => {\n            this.deleteDialog.hide();\n            await this.bezahlungActionCreator.bezahlungLoeschen(this.kontokorrentIdParameter, this.bezahlungIdParameter);\n            this.routingActionCreator.navigateKontokorrent(this.kontokorrentIdParameter);\n        });\n        this.querySelector(\"#abort-delete\").addEventListener(\"click\", () => {\n            this.deleteDialog.hide();\n        });\n    }\n    async betreffChanged(betreff: string) {\n        try {\n            await this.betreffVorschlagDebouncer.trigger(200);\n        }\n        catch (err) {\n            //aborted\n        }\n        this.bezahlungActionCreator.getBeschreibungVorschlaege(this.kontokorrentIdParameter, betreff);\n    }\n    private beschreibungVorschlaegeChanged(s: State): void {\n        if (s.beschreibungVorschlaege?.kontokorrentId == this.kontokorrentIdParameter) {\n            this.bezahlungEintragenForm.beschreibungVorschlaege = s.beschreibungVorschlaege.vorschlaege.slice(0, 10);\n        }\n        else {\n            this.bezahlungEintragenForm.beschreibungVorschlaege = [];\n        }\n    }\n\n    private applyStoreState(s: State) {\n        let editable = false;\n        let updating = false;\n        let deleting = false;\n        let updateError = false;\n        let deleteError = false;\n        if (this.kontokorrentIdParameter && this.bezahlungIdParameter) {\n            let kontokorrent = s.kontokorrents.kontokorrents[this.kontokorrentIdParameter];\n            if (kontokorrent) {\n                this.bezahlungEintragenForm.personen = kontokorrent.personen;\n                let angezeigteBezahlung = kontokorrent.angezeigteBezahlung[this.bezahlungIdParameter];\n                if (angezeigteBezahlung) {\n                    this.bezahlungNichtGefundenError.hidden = angezeigteBezahlung.bearbeitungsStatus != BearbeitungsStatus.NichtGefunden;\n                    this.bezahlungZwischengespeichertError.hidden = angezeigteBezahlung.bearbeitungsStatus != BearbeitungsStatus.Zwischengespeichert;\n                    this.bezahlungGeloeschtError.hidden = angezeigteBezahlung.bearbeitungsStatus != BearbeitungsStatus.Geloescht;\n                    this.bezahlungBearbeitetError.hidden = angezeigteBezahlung.bearbeitungsStatus != BearbeitungsStatus.Bearbeitet;\n                    editable = angezeigteBezahlung.bearbeitungsStatus == BearbeitungsStatus.Bearbeitbar;\n                    updating = angezeigteBezahlung.updateStatus == RequestStatus.InProgress;\n                    updateError = angezeigteBezahlung.updateStatus == RequestStatus.Failed;\n                    deleting = angezeigteBezahlung.deleteStatus == RequestStatus.InProgress;\n                    deleteError = angezeigteBezahlung.deleteStatus == RequestStatus.Failed;\n                }\n                let bezahlungData = kontokorrent.bezahlungen.find(b => b.id == this.bezahlungIdParameter);\n                if (kontokorrent.personen && kontokorrent.personen.length > 0\n                    && bezahlungData && !this.dataLoaded) {\n                    this.dataLoaded = true;\n                    this.bezahlungEintragenForm.setData(bezahlungData);\n                }\n            }\n        }\n        this.updateButton.style.visibility = editable ? \"visible\" : \"collapse\";\n        this.deleteButton.style.visibility = editable ? \"visible\" : \"collapse\";\n        this.updatingSection.style.display = updating ? \"\" : \"none\";\n        this.deletingSection.style.display = deleting ? \"\" : \"none\";\n        this.editingSection.style.display = (updating || deleting) ? \"none\" : \"\";\n        this.bezahlungEintragenForm.style.display = editable ? \"\" : \"none\";\n        this.updateError.hidden = !updateError;\n        this.deleteError.hidden = !deleteError;\n    }\n\n    setRouteParameters(kontokorrentId: string, bezahlungId: string) {\n        this.kontokorrentIdParameter = kontokorrentId;\n        this.bezahlungIdParameter = bezahlungId;\n        this.zurueckLink.href = `kontokorrents/${kontokorrentId}`;\n        this.bezahlungActionCreator.bezahlungGeoeffnet(kontokorrentId, bezahlungId);\n    }\n\n    disconnectedCallback() {\n        this.kontokorrentsSubscription();\n        this.beschreibungVorschlagSubscription();\n    }\n}\n\ncustomElements.define('bezahlung-page', BezahlungPage);\n","export class Debouncer {\n    private abort: () => void;\n    constructor() {\n    }\n\n    private timeout(ms: number): Promise<void> {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve();\n            }, ms);\n        });\n    }\n\n    private aborter() {\n        let status = {\n            aborted: false,\n            promise: <Promise<void>>null\n        };\n        let promise = new Promise<void>((resolve, reject) => {\n            this.abort = () => {\n                status.aborted = false;\n                reject();\n            };\n        });\n        status.promise = promise;\n        return status;\n    }\n\n    async trigger(ms: number): Promise<void> {\n        if (this.abort) {\n            this.abort();\n        }\n        let status = this.aborter();\n        try {\n            await Promise.race([this.timeout(ms), status.promise]);\n        }\n        catch(err) {\n            throw new Error(\"aborted\");\n        }\n    }\n}\n","'use strict';\nvar $ = require('../internals/export');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return URL.prototype.toString.call(this);\n  }\n});\n"],"names":["requiredArgs","required","args","length","TypeError","endOfDay","dirtyDate","arguments","date","toDate","setHours","isSameDay","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","startOfDay","dateRightStartOfDay","getTime","argument","argStr","Object","prototype","toString","call","Date","console","warn","Error","stack","NaN","BezahlungPage","HTMLElement","constructor","super","betreffVorschlagDebouncer","Debouncer","dataLoaded","this","innerHTML","zurueckLink","querySelector","appBar","AppBar","bezahlungEintragenForm","BezahlungEintragenForm","bezahlungNichtGefundenError","bezahlungZwischengespeichertError","bezahlungGeloeschtError","bezahlungBearbeitetError","updateButton","deleteButton","editingSection","updatingSection","deletingSection","updateError","deleteError","formContainer","addServices","serviceLocator","store","routingActionCreator","bezahlungActionCreator","connectedCallback","kontokorrentsSubscription","subscribe","s","applyStoreState","beschreibungVorschlagSubscription","beschreibungVorschlaegeChanged","addEventListener","e","navigateKontokorrent","detail","convertLinks","state","ev","betreffChanged","updateDialog","deleteDialog","validate","show","scroll","top","behavior","stopPropagation","async","hide","data","getData","bezahlungBearbeiten","kontokorrentIdParameter","bezahlungIdParameter","bezahlungLoeschen","betreff","trigger","err","getBeschreibungVorschlaege","beschreibungVorschlaege","kontokorrentId","vorschlaege","slice","editable","updating","deleting","kontokorrent","kontokorrents","personen","angezeigteBezahlung","hidden","bearbeitungsStatus","updateStatus","deleteStatus","bezahlungData","bezahlungen","find","b","id","setData","style","visibility","display","setRouteParameters","bezahlungId","href","bezahlungGeoeffnet","disconnectedCallback","customElements","define","timeout","ms","Promise","resolve","setTimeout","aborter","status","aborted","promise","reject","abort","race","$","target","proto","enumerable","toJSON","URL"],"sourceRoot":""}