(self.webpackChunkkontokorrent=self.webpackChunkkontokorrent||[]).push([[856],{3856:(e,t,n)=>{"use strict";n.r(t),n.d(t,{CreateKontokorrent:()=>v});var r=n(3617),i=n.n(r),o=n(9773),s=n(2887),a=n(294),l=n.n(a),c=n(824),h=n.n(c);class d extends HTMLElement{constructor(){super(),this.innerHTML=h()}connectedCallback(){this.removeButton=this.querySelector("#remove"),this.nameInput=this.querySelector("#name"),this.nameInput.addEventListener("change",(()=>{this.dispatchEvent(new Event("change"))})),this.removeButton.addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("onremove"))}))}get name(){return this.nameInput.value}disconnectedCallback(){}}const u="app-personen-listen-eintrag";customElements.define(u,d);class p extends HTMLElement{constructor(){super(),this.innerHTML=l()}get personen(){let e=[];return this.personenListe.querySelectorAll(u).forEach((t=>e.push(t.name))),e}connectedCallback(){this.addPersonButton=this.querySelector("#add-person"),this.personenListe=this.querySelector("#personen-liste"),this.addPersonButton.addEventListener("click",(()=>{let e=document.createElement("li"),t=new d;e.appendChild(t),this.personenListe.appendChild(e),t.addEventListener("onremove",(()=>{this.personenListe.removeChild(e)}))}))}disconnectedCallback(){}}customElements.define("app-personen-liste",p);var m=n(886),f=n(6604);class v extends HTMLElement{constructor(){super(),this.innerHTML=i(),this.kontokorrentId=(0,m.Z)(),this.oeffentlicherNameManuell=!1}addServices(e){this.store=e.store,this.routingActionCreator=(0,o.b)(e),this.accountActionCreator=(0,s.gg)(e),this.kontokorrentHinzufuegenActionCreator=(0,f.Jj)(e)}connectedCallback(){let e=this;this.personenListe=e.querySelector("#personen-liste"),this.emptyNameError=e.querySelector("#empty-name-error"),this.eventCreateError=e.querySelector("#event-create-error"),this.personCountError=e.querySelector("#person-count-error"),this.eventNameError=e.querySelector("#event-name-error"),this.createButton=e.querySelector("#create-button"),this.eventName=e.querySelector("#event-name"),this.creating=e.querySelector("#creating"),this.oeffentlicherName=e.querySelector("#oeffentlicher-name"),this.oeffentlich=e.querySelector("#oeffentlich"),this.oeffentlichBox=e.querySelector("#oeffentlich-box"),this.oeffentlicherNameError=e.querySelector("#oeffentlicher-name-error"),this.eventNameDuplicate=e.querySelector("#event-name-duplicate"),this.accountCreationFailed=e.querySelector("#account-creation-failed"),this.personNameDuplicateError=e.querySelector("#person-name-duplicate-error"),this.createButton.addEventListener("click",this.createEvent.bind(this)),this.oeffentlich.addEventListener("change",(()=>{this.oeffentlichBox.style.display=this.oeffentlich.checked?"block":"none"})),this.eventName.addEventListener("change",(()=>{this.oeffentlicherNameManuell||(this.oeffentlicherName.value=this.eventName.value)})),this.oeffentlicherName.addEventListener("change",(()=>{this.oeffentlicherNameManuell=!0})),this.subscription=this.store.subscribe(null,(e=>this.applyStoreState(e))),this.applyStoreState(this.store.state)}async createEvent(){let e=this.eventName.value,t=this.personenListe.personen;this.eventNameError.style.display=e?"none":"block";let n=t.length>=2;this.personCountError.style.display=n?"none":"block";let r=t.some((e=>!e));this.emptyNameError.style.display=r?"block":"none";let i=this.oeffentlich.checked&&(!this.oeffentlicherName.value||!/^[a-z0-9]+$/.test(this.oeffentlicherName.value));this.oeffentlicherNameError.style.display=i?"block":"none";let o=t.some(((e,n)=>t.indexOf(e)!=n));this.personNameDuplicateError.style.display=o?"block":"none",!e||!n||r||i||o||await this.accountActionCreator.ensureAccount()&&await this.kontokorrentHinzufuegenActionCreator.kontokorrentErstellen(this.kontokorrentId,this.eventName.value,this.oeffentlich.checked?this.oeffentlicherName.value:null,t)&&this.routingActionCreator.navigateKontokorrent(this.kontokorrentId)}applyStoreState(e){this.creating.style.display=e.kontokorrents.creating||e.account.accountCreating?"block":"none",this.eventCreateError.style.display=e.kontokorrents.creationFailed?"block":"none",this.eventNameDuplicate.style.display=e.kontokorrents.creationFailed&&e.kontokorrents.creationFailed.exists?"block":"none",this.accountCreationFailed.style.display=!e.account.accountCreating&&e.account.accountCreationFailed?"block":"none"}disconnectedCallback(){this.subscription()}}customElements.define("app-create-event",v)},6604:(e,t,n)=>{"use strict";n.d(t,{Jj:()=>u});var r=n(886);class i{constructor(e){this.exists=e,this.type=7}}class o{constructor(){this.type=8}}class s{constructor(e){this.kontokorrent=e,this.type=21}}class a{constructor(e){this.notFound=e,this.type=9}}class l{constructor(){this.type=10}}class c{constructor(e){this.kontokorrents=e,this.type=20}}class h{constructor(){this.type=18}}class d{constructor(e,t,n){this.store=e,this.apiClient=t,this.db=n}loginPageGeoeffnet(){this.store.dispatch(new h)}async kontokorrentErstellen(e,t,n,a){let l={name:t,id:e,oeffentlicherName:n,personen:a.map((e=>({name:e,id:(0,r.Z)()})))};this.store.dispatch(new o);let c=await this.apiClient.neuerKontokorrent(l);return c.success?(await this.db.addKontokorrent({id:e,name:t,personen:l.personen,oeffentlicherName:n}),this.store.dispatch(new s({id:e,name:t,personen:l.personen,oeffentlicherName:n})),!0):(this.store.dispatch(new i(c.exists)),!1)}async kontokorrentHinzufuegen(e){let t=await this.db.getPerOeffentlichName(e);if(null!=t)return t.id;this.store.dispatch(new l);try{let t=await this.apiClient.kontokorrentHinzufuegen(e,null);if(null!=t){let e=await this.db.setKontokorrents(t.map((e=>({id:e.id,name:e.name,personen:e.personen,oeffentlicherName:e.oeffentlicherName}))));return this.store.dispatch(new c(t)),e[0]}this.store.dispatch(new a(!0))}catch(e){this.store.dispatch(new a(!1))}return!1}}function u(e){return e.get("KontokorrentHinzufuegenActionCreator",(e=>new d(e.store,e.apiClient,e.db)))}},3617:e=>{e.exports='<h1>Event erstellen</h1> <label for="event-name">Eventname</label> <input type="text" id="event-name" name="event-name"> <label for="event-name">Oeffentlich</label> <input type="checkbox" id="oeffentlich" name="oeffentlich" checked="checked"> <div id="oeffentlich-box"> <label for="oeffentlicher-name">Öffentlicher Name</label> <input type="text" id="oeffentlicher-name" name="oeffentlicher-name"> </div> <div id="empty-name-error" style="display:none">Für alle Personen Namen angeben</div> <div id="person-count-error" style="display:none">Mindestens zwei Personen angeben</div> <div id="event-create-error" style="display:none">Kontokorrent konnte nicht erstellt werden</div> <div id="event-name-duplicate" style="display:none">Ein Kontokorrent mit diesem Namen exisitert bereits</div> <div id="event-name-error" style="display:none">Eventname angeben</div> <div id="oeffentlicher-name-error" style="display:none">Öfferntlicher Name: Nur Kleinbuchstaben und Zahlen</div> <div id="person-name-duplicate-error" style="display:none">Personennamen müssen unterschiedlich sein</div> <div id="creating" style="display:none">Wird erstellt</div> <div id="account-creation-failed" style="display:none">Account konnte nicht erstellt werden</div> <app-personen-liste id="personen-liste"></app-personen-liste> <button id="create-button">Erstellen</button>'},294:e=>{e.exports='<ul id="personen-liste" class="mdc-list mdc-list--non-interactive"> </ul> <button type="button" id="add-person">Person hinzufügen</button>'},824:e=>{e.exports='<input type="text" id="name" placehoder="Name"/> <button id="remove">entfernen</button>'}}]);
//# sourceMappingURL=4fc85e32c1143fba93bf.bundle.js.map