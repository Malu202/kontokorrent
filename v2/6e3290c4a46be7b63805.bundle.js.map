{"version":3,"file":"6e3290c4a46be7b63805.bundle.js","mappings":"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","sources":["webpack://kontokorrent/./src/components/AppBar/AppBar.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectListEntry.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelectList.html","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.ts","webpack://kontokorrent/./src/components/KontokorrentSelect/KontokorrentSelect.html","webpack://kontokorrent/./src/components/AppBar/AppBar.ts","webpack://kontokorrent/./src/components/KontokorrentNichtGefunden/KontokorrentNichtGefunden.ts","webpack://kontokorrent/./src/components/KontokorrentNichtGefunden/KontokorrentNichtGefunden.html","webpack://kontokorrent/./src/components/ui-components/popup/popup.ts","webpack://kontokorrent/./src/state/actions/KontokorrentHinzufuegenActionCreator.ts","webpack://kontokorrent/./src/utils/ArrayToElementRenderer.ts"],"sourcesContent":["// Module\nvar code = \"<header class=\\\"app-bar\\\"> <kontokorrent-select class=\\\"app-bar__kontokorrent-select\\\"></kontokorrent-select> <nav class=\\\"app-bar__links\\\"> <button id=\\\"logout-button\\\" class=\\\"app-bar__link\\\" title=\\\"Logout\\\"> <span class=\\\"material-icons\\\"> exit_to_app </span> </button> <a href=\\\"info\\\" class=\\\"app-bar__link\\\" title=\\\"Informationen Ã¼ber diese App\\\"> <span class=\\\"material-icons\\\"> info </span> </a> </nav> </header> <app-popup id=\\\"logout-dialog\\\"> <div class=\\\"dialog__backdrop\\\"></div> <div class=\\\"dialog\\\"> <p> Wirklich aus allen Kontokorrents ausloggen? </p> <div class=\\\"dialog__button-pane\\\"> <button id=\\\"abort-logout\\\" class=\\\"button\\\">Abbrechen</button> <button id=\\\"confirm-logout\\\" class=\\\"button\\\">Ausloggen</button> </div> </div> </app-popup>\";\n// Exports\nexport default code;","import template from \"./KontokorrentSelectListEntry.html\";\nimport { KontokorrentState } from \"../../state/State\";\n\n\nexport class KontokorrentSelectListEntry extends HTMLElement {\n    private name: HTMLSpanElement;\n    private link: HTMLAnchorElement;\n    private kontokorrent: KontokorrentState;\n    private rendered = false;\n    private isActive: boolean = false;\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.name = this.querySelector(`[data-ref=\"name\"]`);\n            this.link = this.querySelector(`[data-ref=\"link\"]`);\n            this.updateStyle();\n        }\n        this.clickEvent = this.clickEvent.bind(this);\n        this.link.addEventListener(\"click\", this.clickEvent);\n    }\n\n    private clickEvent(e: MouseEvent): void {\n        e.preventDefault();\n        this.dispatchEvent(new CustomEvent(\"gotokontokorrent\", { detail: this.kontokorrent.id, bubbles: true }));\n    }\n\n    disconnectedCallback() {\n        this.link.removeEventListener(\"click\", this.clickEvent);\n    }\n\n    update(kontokorrent: KontokorrentState, isActive: boolean) {\n        this.kontokorrent = kontokorrent;\n        this.isActive = isActive;\n        this.updateStyle();\n    }\n\n    private updateStyle() {\n        if (this.rendered && this.kontokorrent) {\n            this.name.innerText = this.kontokorrent.name;\n            this.link.href = `kontokorrents/${this.kontokorrent.id}`;\n            this.link.classList.toggle(\"kontokorrent-select-list__entry--active\", this.isActive);\n        }\n    }\n}\nexport const KontokorrentSelectListEntryTagName = \"kontokorrent-select-list-entry\";\ncustomElements.define(KontokorrentSelectListEntryTagName, KontokorrentSelectListEntry);\n","// Module\nvar code = \"<a data-ref=\\\"link\\\" class=\\\"kontokorrent-select-list__entry\\\"> <span data-ref=\\\"name\\\"></span> </a>\";\n// Exports\nexport default code;","import template from \"./KontokorrentSelectList.html\";\nimport \"./KontokorrentSelectList.scss\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { sortByAlphabetically } from \"../../utils/sortBy\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { KontokorrentSelectListEntry } from \"./KontokorrentSelectListEntry\";\n\nexport class KontokorrentSelectList extends HTMLElement {\n    private list: HTMLOListElement;\n    private _kontokorrents: KontokorrentState[];\n    private _activeKontokorrentId: string;\n    private kontokorrentsRenderer: ArrayToElementRenderer<KontokorrentState, HTMLLIElement, string>;\n    private rendered = false;\n\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.list = this.querySelector(`[data-ref=\"list\"]`);\n            this._kontokorrents = [];\n            this.kontokorrentsRenderer = new ArrayToElementRenderer(this.list,\n                (k: KontokorrentState) => k.id,\n                () => {\n                    let li = document.createElement(\"li\");\n                    li.appendChild(new KontokorrentSelectListEntry());\n                    return li;\n                });\n            this.update();\n        }\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private update() {\n        if (this.rendered) {\n            this.kontokorrentsRenderer.update(this._kontokorrents,\n                (li, kontokorrent) => {\n                    let x: KontokorrentSelectListEntry = <KontokorrentSelectListEntry>li.firstChild;\n                    x.update(kontokorrent, this._activeKontokorrentId == kontokorrent.id);\n                });\n        }\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this._kontokorrents = sortByAlphabetically(kontokorrents, k => k.name);\n        this.update();\n    }\n\n    set activeKontokorrentId(id: string) {\n        this._activeKontokorrentId = id;\n        this.update();\n    }\n}\nexport const KontokorrentSelectListTagName = \"kontokorrent-select-list\";\ncustomElements.define(KontokorrentSelectListTagName, KontokorrentSelectList);\n","// Module\nvar code = \"<ol data-ref=\\\"list\\\" class=\\\"kontokorrent-select-list\\\"> </ol>\";\n// Exports\nexport default code;","import template from \"./KontokorrentSelect.html\";\nimport \"./KontokorrentSelect.scss\";\nimport \"./KontokorrentSelectList\";\nimport { KontokorrentState } from \"../../state/State\";\nimport { KontokorrentSelectListTagName, KontokorrentSelectList } from \"./KontokorrentSelectList\";\nimport { Popup } from \"../ui-components/popup/popup\";\nimport \"../ui-components/popup/popup\";\n\nexport class KontokorrentSelect extends HTMLElement {\n    private kontokorrentName: HTMLHeadingElement;\n    private popup: Popup;\n    private kontokorrentSelectList: KontokorrentSelectList;\n    private addButton: HTMLButtonElement;\n    private activeKontokorrentId: string;\n    private _kontokorrents: KontokorrentState[] = null;\n    private rendered = false;\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.kontokorrentName = this.querySelector(`[data-ref=\"kontokorrent-name\"]`);\n            this.kontokorrentSelectList = this.querySelector(KontokorrentSelectListTagName);\n            this.addButton = this.querySelector(`#add-kontokorrent`);\n            this.popup = this.querySelector(`app-popup`);\n        }\n        this.updateAttributes();\n        this.addEventListener(\"click\", e => {\n            if (!this.popup.contains(<Element>(event.target))) {\n                this.popup.toggle();\n                e.stopPropagation();\n            }\n        });\n        this.addButton.addEventListener(\"click\", e => {\n            this.dispatchEvent(new CustomEvent(\"addkontokorrent\"));\n        });\n        this.kontokorrentSelectList.addEventListener(\"gotokontokorrent\", () => {\n            this.popup.hide();\n        })\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    private updateAttributes() {\n        this.activeKontokorrentId = this.getAttribute(\"active-kontokorrent-id\");\n        this.kontokorrentSelectList.activeKontokorrentId = this.activeKontokorrentId;\n        this.updatesStyle();\n    }\n\n    static get observedAttributes() {\n        return [\"active-kontokorrent-id\"];\n    }\n\n    set kontokorrents(kontokorrents: KontokorrentState[]) {\n        this.kontokorrentSelectList.kontokorrents = kontokorrents;\n        this._kontokorrents = kontokorrents;\n        this.updatesStyle();\n    }\n\n    private updatesStyle() {\n        if (this.rendered && this._kontokorrents && this._kontokorrents.length) {\n            let activeKontokorrent = this._kontokorrents.find(k => k.id == this.activeKontokorrentId);\n            if (activeKontokorrent) {\n                this.kontokorrentName.innerText = activeKontokorrent.name;\n                this.kontokorrentName.classList.remove(\"kontokorrent-select__name--unselected\");\n            }\n            else {\n                this.kontokorrentName.innerText = \"(Kontokorrent wÃ¤hlen)\";\n                this.kontokorrentName.classList.add(\"kontokorrent-select__name--unselected\");\n            }\n        }\n    }\n\n}\nexport const KontokorrentSelectTagName = \"kontokorrent-select\";\ncustomElements.define(KontokorrentSelectTagName, KontokorrentSelect);\n","// Module\nvar code = \"<div class=\\\"kontokorrent-select-wrapper\\\"> <div class=\\\"kontokorrent-select\\\"> <h1 data-ref=\\\"kontokorrent-name\\\" class=\\\"kontokorrent-select__name\\\">Kontokorrent</h1> <button class=\\\"kontokorrent-select__choose\\\" title=\\\"anderen Kontokorrent wÃ¤hlen\\\"> <span class=\\\"material-icons\\\"> arrow_drop_down </span> </button> </div> <app-popup class=\\\"kontokorrent-select__popup\\\"> <kontokorrent-select-list></kontokorrent-select-list> <div class=\\\"kontokorrent-select__buttons\\\"> <button id=\\\"add-kontokorrent\\\" class=\\\"button\\\">weiteren hinzufÃ¼gen</button> </div> </app-popup> </div>\";\n// Exports\nexport default code;","import template from \"./AppBar.html\";\nimport \"./AppBar.scss\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { convertLinks } from \"../convertLinks\";\nimport \"../KontokorrentSelect/KontokorrentSelect\";\nimport { KontokorrentSelectTagName, KontokorrentSelect } from \"../KontokorrentSelect/KontokorrentSelect\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { AccountActionCreator, accountActionCreatorFactory } from \"../../state/actions/AccountActionCreator\";\nimport { Store } from \"../../state/Store\";\nimport { State } from \"../../state/State\";\nimport { Popup } from \"../ui-components/popup/popup\";\n\nexport class AppBar extends HTMLElement {\n    private kontokorrentSelect: KontokorrentSelect;\n    private store: Store;\n    private routingActionCreator: RoutingActionCreator;\n    private accountActionCreator: AccountActionCreator;\n    private logoutDialog: Popup;\n    private subscription: () => void;\n    private rendered: boolean = false;\n\n\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.kontokorrentSelect = this.querySelector(KontokorrentSelectTagName);\n            this.logoutDialog = this.querySelector(\"#logout-dialog\");\n            if (this.store) {\n                this.applyStoreState(this.store.state);\n            }\n        }\n        this.querySelector(\"#logout-button\").addEventListener(\"click\", (e: MouseEvent) => {\n            this.logoutDialog.toggle();\n            e.stopPropagation();\n        });\n        this.querySelector(\"#confirm-logout\").addEventListener(\"click\", async () => {\n            await this.accountActionCreator.logout();\n        });\n        this.querySelector(\"#abort-logout\").addEventListener(\"click\", () => {\n            this.logoutDialog.hide();\n        });\n        this.querySelectorAll(\"a\").forEach((e: HTMLAnchorElement) => {\n            e.addEventListener(\"click\", ev => {\n                ev.preventDefault();\n                this.routingActionCreator.navigate(e.getAttribute(\"href\"));\n            });\n        });\n\n        this.kontokorrentSelect.addEventListener(\"addkontokorrent\", () => {\n            this.routingActionCreator.navigateLogin();\n        });\n    }\n\n    private applyStoreState(state: State): void {\n        if (this.rendered) {\n            this.kontokorrentSelect.kontokorrents = Object.values(state.kontokorrents.kontokorrents);\n            this.kontokorrentSelect.setAttribute(\"active-kontokorrent-id\", state.kontokorrents.activeKontokorrentId);\n        }\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.accountActionCreator = accountActionCreatorFactory(serviceLocator);\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n    }\n\n    disconnectedCallback() {\n        if (this.subscription) {\n            this.subscription();\n            this.subscription = null;\n        }\n\n    }\n}\nexport const AppBarTagName = \"app-bar\";\ncustomElements.define(AppBarTagName, AppBar);\n","import { OeffentlicherNameParam } from \"../../routing/KontokorrentRouteResolver\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { RoutingActionCreator, routingActionCreatorFactory } from \"../../state/actions/RoutingActionCreator\";\nimport { Store } from \"../../state/Store\";\nimport { State } from \"../../state/State\";\nimport { AppBar, AppBarTagName } from \"../AppBar/AppBar\";\nimport template from \"./KontokorrentNichtGefunden.html\";\nimport \"./KontokorrentNichtGefunden.scss\";\nimport { KontokorrentHinzufuegenActionCreator, kontokorrentHinzufuegenActionCreatorFactory } from \"../../state/actions/KontokorrentHinzufuegenActionCreator\";\n\nexport class KontokorrentNichtGefunden extends HTMLElement {\n    private rendered = false;\n    private store: Store;\n    private routingActionCreator: RoutingActionCreator;\n    private serviceLocator: ServiceLocator;\n    private appBar: AppBar;\n    private oeffentlicherKontokorrentLabel: HTMLSpanElement;\n    private hinzufuegenBtn: HTMLButtonElement;\n    private oeffentlicherName: string;\n    private hinzufuegenClickListener: (e: MouseEvent) => void;\n    private subscription: () => void;\n    private kontokorrentHinzufuegenActionCreator: KontokorrentHinzufuegenActionCreator;\n    private notFoundError: HTMLDivElement;\n    private processing: HTMLDivElement;\n\n    constructor() {\n        super();\n    }\n\n    addServices(serviceLocator: ServiceLocator) {\n        this.store = serviceLocator.store;\n        this.routingActionCreator = routingActionCreatorFactory(serviceLocator);\n        this.kontokorrentHinzufuegenActionCreator = kontokorrentHinzufuegenActionCreatorFactory(serviceLocator);\n        this.serviceLocator = serviceLocator;\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.oeffentlicherKontokorrentLabel = this.querySelector(\"#oeffentlicher-name\");\n            this.hinzufuegenBtn = this.querySelector(\"#hinzufuegen-btn\");\n            this.notFoundError = this.querySelector(\"#notFoundError\");\n            this.processing = this.querySelector(\"#hinzufuegen__progress\");\n            this.appBar = this.querySelector(AppBarTagName);\n            this.appBar.addServices(this.serviceLocator);\n            let searchParams = new URLSearchParams(window.location.search);\n            if (searchParams.has(OeffentlicherNameParam)) {\n                this.oeffentlicherName = searchParams.get(OeffentlicherNameParam);\n                this.oeffentlicherKontokorrentLabel.innerText = this.oeffentlicherName;\n            }\n        }\n        this.appBar.addEventListener(\"gotokontokorrent\", async (e: CustomEvent) => {\n            await this.routingActionCreator.navigateKontokorrentById(e.detail);\n        });\n        this.hinzufuegenClickListener = () => this.hinzufuegen();\n        this.hinzufuegenBtn.addEventListener(\"click\", this.hinzufuegenClickListener);\n        this.subscription = this.store.subscribe(null, state => this.applyStoreState(state));\n        this.applyStoreState(this.store.state);\n        this.kontokorrentHinzufuegenActionCreator.nichtGefundenPageGeoeffnet();\n    }\n\n    private async hinzufuegen() {\n        let id = await this.kontokorrentHinzufuegenActionCreator.kontokorrentHinzufuegen(this.oeffentlicherName);\n        if (id) {\n            await this.routingActionCreator.navigateKontokorrentById(id);\n        };\n    }\n\n    private applyStoreState(state: State) {\n        this.notFoundError.style.display = !state.kontokorrents.hinzufuegen && state.kontokorrents.hinzufuegenFailed && state.kontokorrents.hinzufuegenFailed.kontokorrentNotFound ?\n            \"block\" : \"none\";\n        let processing = state.kontokorrents.hinzufuegen || state.account.accountCreating;\n        this.processing.style.display = processing ? \"flex\" : \"none\";\n        this.hinzufuegenBtn.style.display = !processing ? \"inline-flex\" : \"none\";\n    }\n\n    disconnectedCallback() {\n        this.subscription();\n        this.hinzufuegenBtn.removeEventListener(\"click\", this.hinzufuegenClickListener);\n    }\n}\n\ncustomElements.define(\"kontokorrent-nicht-gefunden\", KontokorrentNichtGefunden);\n","// Module\nvar code = \"<app-bar></app-bar> <div class=\\\"kontokorrent-hinzufuegen-section\\\"> MÃ¶chtest du den Ã¶ffentlichen Kontokorrent <strong><span id=\\\"oeffentlicher-name\\\"></span></strong> hinzufÃ¼gen? </div> <div class=\\\"kontokorrent-hinzufuegen-section\\\"> <div id=\\\"notFoundError\\\" class=\\\"alert alert--error\\\" style=\\\"display:none\\\">Kontokorrent wurde nicht gefunden</div> <button class=\\\"button button--raised\\\" id=\\\"hinzufuegen-btn\\\"> hinzufÃ¼gen </button> </div> <div class=\\\"hinzufuegen__progress\\\" id=\\\"hinzufuegen__progress\\\"> <span class=\\\"spinner\\\"></span> <span>wird hinzugefÃ¼gt</span> </div>\";\n// Exports\nexport default code;","export class Popup extends HTMLElement {\n    private popupShown: boolean = false;\n    constructor() {\n        super();\n        this.keyListener = this.keyListener.bind(this);\n        this.clickListener = this.clickListener.bind(this);\n    }\n\n    connectedCallback() {\n        this.updateStyles();\n    }\n\n    private keyListener(ev: KeyboardEvent) {\n        if (ev.key == \"Escape\") {\n            this.hide();\n        }\n    }\n\n    private clickListener(ev: MouseEvent | TouchEvent) {\n        if (!this.contains(<Element>(event.target))) {\n            this.hide();\n        }\n    }\n\n    public hide() {\n        if (this.popupShown) {\n            document.removeEventListener(\"keydown\", this.keyListener);\n            document.removeEventListener(\"click\", this.clickListener);\n            this.popupShown = false;\n            this.updateStyles();\n        }\n    }\n\n    public show() {\n        if (!this.popupShown) {\n            document.addEventListener(\"keydown\", this.keyListener);\n            document.addEventListener(\"click\", this.clickListener);\n            this.popupShown = true;\n            this.updateStyles();\n        }\n    }\n\n    private updateStyles() {\n        this.style.display = this.popupShown ? \"block\" : \"none\";\n    }\n\n    public toggle() {\n        if (!this.popupShown) {\n            this.show();\n        }\n        else {\n            this.hide();\n\n        }\n    }\n\n    disconnectedCallback() {\n        this.hide();\n    }\n}\ncustomElements.define(\"app-popup\", Popup);\n","import { ApiClient } from \"../../api/ApiClient\";\nimport { KontokorrentInfo } from \"../../api/KontokorrentInfo\";\nimport { NeuerKontokorrentRequest } from \"../../api/NeuerKontokorrentRequest\";\nimport { KontokorrentDatabase } from \"../../lib/KontokorrentDatabase\";\nimport { ServiceLocator } from \"../../ServiceLocator\";\nimport { Action } from \"../lib/Action\";\nimport { Store } from \"../Store\";\nimport { ActionNames } from \"./ActionNames\";\nimport { v4 as uuid } from \"uuid\";\n\nexport class KontokorrentCreationFailed implements Action {\n    readonly type = ActionNames.KontokorrentCreationFailed;\n    constructor(public exists: boolean) {\n\n    }\n}\n\nexport class KontokorrentCreating implements Action {\n    readonly type = ActionNames.KontokorrentCreating;\n    constructor() {\n\n    }\n}\n\nexport class KontokorrentCreated implements Action {\n    readonly type = ActionNames.KontokorrentCreated;\n    constructor(public kontokorrent: KontokorrentInfo) {\n\n    }\n}\n\nexport class KontokorrentHinzufuegenFailed implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegenFailed;\n    constructor(public notFound: boolean) {\n\n    }\n}\n\nexport class KontokorrentHinzufuegen implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegen;\n    constructor() {\n\n    }\n}\n\nexport class KontokorrentHinzufuegenSuccess implements Action {\n    readonly type = ActionNames.KontokorrentHinzufuegenSuccess;\n    constructor(public kontokorrents: KontokorrentInfo[]) {\n\n    }\n}\n\nexport class LoginPageGeoeffnet implements Action {\n    readonly type = ActionNames.LoginPageGeoeffnet;\n    constructor() {\n\n    }\n}\n\nexport class NichtGefundenPageGeoeffnet implements Action {\n    readonly type = ActionNames.NichtGefundenPageGeoeffnet;\n    constructor() {\n\n    }\n}\n\nexport type KontokorrentHinzufuegenActions = KontokorrentCreationFailed\n    | KontokorrentCreating\n    | KontokorrentCreated\n    | KontokorrentHinzufuegenFailed\n    | KontokorrentHinzufuegen\n    | KontokorrentHinzufuegenSuccess\n    | LoginPageGeoeffnet\n    | NichtGefundenPageGeoeffnet;\n\nexport class KontokorrentHinzufuegenActionCreator {\n\n    constructor(private store: Store,\n        private apiClient: ApiClient,\n        private db: KontokorrentDatabase) {\n\n    }\n\n    loginPageGeoeffnet() {\n        this.store.dispatch(new LoginPageGeoeffnet());\n    }\n\n    nichtGefundenPageGeoeffnet() {\n        this.store.dispatch(new NichtGefundenPageGeoeffnet());\n    }\n\n    async kontokorrentErstellen(id: string, name: string, oeffentlicherName: string, personen: string[]) {\n        let request: NeuerKontokorrentRequest = {\n            name,\n            id,\n            oeffentlicherName,\n            personen: personen.map(v => { return { name: v, id: uuid() } })\n        };\n        this.store.dispatch(new KontokorrentCreating());\n        let res = await this.apiClient.neuerKontokorrent(request);\n        if (!res.success) {\n            this.store.dispatch(new KontokorrentCreationFailed(res.exists));\n        }\n        else {\n            await this.db.addKontokorrent({\n                id: id,\n                name: name,\n                personen: request.personen,\n                oeffentlicherName: oeffentlicherName\n            });\n            this.store.dispatch(new KontokorrentCreated({\n                id: id,\n                name: name,\n                personen: request.personen,\n                oeffentlicherName: oeffentlicherName\n            }));\n            return true;\n        }\n        return false;\n    }\n\n    async kontokorrentHinzufuegen(oeffentlicherName: string) {\n        let kk = await this.db.getPerOeffentlichName(oeffentlicherName);\n        if (null != kk) {\n            return kk.id;\n        }\n        this.store.dispatch(new KontokorrentHinzufuegen());\n        try {\n            let res = await this.apiClient.kontokorrentHinzufuegen(oeffentlicherName, null);\n            if (null == res) {\n                this.store.dispatch(new KontokorrentHinzufuegenFailed(true));\n            }\n            else {\n                let newIds = await this.db.setKontokorrents(res.map(v => {\n                    return {\n                        id: v.id,\n                        name: v.name,\n                        personen: v.personen,\n                        oeffentlicherName: v.oeffentlicherName\n                    };\n                }));\n                this.store.dispatch(new KontokorrentHinzufuegenSuccess(res));\n                return newIds[0];\n            }\n        }\n        catch (err) {\n            this.store.dispatch(new KontokorrentHinzufuegenFailed(false));\n        }\n        return false;\n    }\n}\n\nexport function kontokorrentHinzufuegenActionCreatorFactory(serviceLocator: ServiceLocator) {\n    return serviceLocator.get(\"KontokorrentHinzufuegenActionCreator\",\n        serviceLocator => new KontokorrentHinzufuegenActionCreator(\n            serviceLocator.store,\n            serviceLocator.apiClient,\n            serviceLocator.db\n        ));\n}","export class ArrayToElementRenderer<T, E extends Element, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n    \n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find(i => this.elementToKey.get(el) == getKey(i));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let t of list) {\n            let key = getKey(t);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}"],"names":["KontokorrentSelectListEntry","HTMLElement","constructor","super","rendered","isActive","connectedCallback","this","innerHTML","name","querySelector","link","updateStyle","clickEvent","bind","addEventListener","e","preventDefault","dispatchEvent","CustomEvent","detail","kontokorrent","id","bubbles","disconnectedCallback","removeEventListener","update","innerText","href","classList","toggle","customElements","define","KontokorrentSelectList","list","_kontokorrents","kontokorrentsRenderer","ArrayToElementRenderer","k","li","document","createElement","appendChild","firstChild","_activeKontokorrentId","kontokorrents","sortBy","KontokorrentSelectListTagName","KontokorrentSelect","kontokorrentName","kontokorrentSelectList","addButton","popup","updateAttributes","contains","event","target","stopPropagation","hide","attributeChangedCallback","activeKontokorrentId","getAttribute","updatesStyle","length","activeKontokorrent","find","remove","add","KontokorrentSelectTagName","AppBar","kontokorrentSelect","logoutDialog","store","applyStoreState","state","async","accountActionCreator","logout","querySelectorAll","forEach","ev","routingActionCreator","navigate","navigateLogin","Object","values","setAttribute","addServices","serviceLocator","subscription","subscribe","AppBarTagName","KontokorrentNichtGefunden","kontokorrentHinzufuegenActionCreator","oeffentlicherKontokorrentLabel","hinzufuegenBtn","notFoundError","processing","appBar","searchParams","URLSearchParams","window","location","search","has","oeffentlicherName","get","navigateKontokorrentById","hinzufuegenClickListener","hinzufuegen","nichtGefundenPageGeoeffnet","kontokorrentHinzufuegen","style","display","hinzufuegenFailed","kontokorrentNotFound","account","accountCreating","Popup","popupShown","keyListener","clickListener","updateStyles","key","show","KontokorrentCreationFailed","exists","type","KontokorrentCreating","KontokorrentCreated","KontokorrentHinzufuegenFailed","notFound","KontokorrentHinzufuegen","KontokorrentHinzufuegenSuccess","LoginPageGeoeffnet","NichtGefundenPageGeoeffnet","KontokorrentHinzufuegenActionCreator","apiClient","db","loginPageGeoeffnet","dispatch","personen","request","map","v","res","neuerKontokorrent","success","addKontokorrent","kk","getPerOeffentlichName","newIds","setKontokorrents","err","kontokorrentHinzufuegenActionCreatorFactory","listElement","keySelector","keyToElement","Map","elementToKey","WeakMap","updateElement","keyCache","getKey","d","set","x","Array","from","children","el","data","i","removeChild","before","nextKeyToElement","t","childElement","firstElementChild","prepend","nextElementSibling","insertAdjacentElement"],"sourceRoot":""}