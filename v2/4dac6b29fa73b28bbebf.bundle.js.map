{"version":3,"sources":["webpack://kontokorrent/../src/comlink.ts","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/endOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/isSameDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/de/_lib/formatDistance/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/de/_lib/formatLong/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/de/_lib/formatRelative/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/de/_lib/localize/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/de/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/de/_lib/match/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/en-US/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/addMilliseconds/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/subMilliseconds/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/assign/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/setUTCDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/parse/_lib/parsers/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/setUTCWeek/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/_lib/setUTCISODay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/parse/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/startOfDay/index.js","webpack://kontokorrent/./node_modules/date-fns/esm/toDate/index.js","webpack://kontokorrent/./node_modules/core-js/modules/web.url.to-json.js"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","obj","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","value","serialized","Error","isError","message","name","stack","Object","assign","ep","self","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","_target","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","processed","v","arr","Array","prototype","concat","WeakMap","handler","serializedValue","serialize","get","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","requiredArgs","required","args","TypeError","toInteger","dirtyNumber","NaN","number","isNaN","ceil","endOfDay","dirtyDate","arguments","date","toDate","setHours","isSameDay","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","startOfDay","dateRightStartOfDay","getTime","buildFormatLongFn","dirtyOptions","options","width","String","defaultWidth","formats","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","call","array","predicate","key","test","findIndex","object","hasOwnProperty","findKey","valueCallback","rest","buildMatchPatternFn","parseResult","parsePattern","formatDistanceLocale","lessThanXSeconds","standalone","one","other","withPreposition","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","ordinalNumber","_dirtyOptions","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","code","formatDistance","token","count","result","usageGroup","addSuffix","replace","comparison","formatLong","formatRelative","_date","_baseDate","_options","localize","parseInt","any","index","weekStartsOn","firstWeekContainsDate","rem100","addMilliseconds","dirtyAmount","timestamp","amount","Date","subMilliseconds","dirtyObject","property","dateLongFormatter","pattern","timeLongFormatter","P","dateTimeFormat","datePattern","timePattern","MILLISECONDS_IN_MINUTE","getDateMillisecondsPart","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","getTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","format","input","RangeError","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCWeekYear","year","getUTCFullYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","setUTCFullYear","startOfNextYear","firstWeekOfThisYear","startOfThisYear","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","startOfUTCISOWeek","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","fourthOfJanuaryOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","getUTCISOWeek","round","startOfUTCWeekYear","firstWeek","getUTCWeek","numericPatterns","timezonePatterns","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","G","priority","parse","flags","incompatibleTokens","y","isTwoDigitYear","unit","validate","normalizedTwoDigitYear","Y","R","_match","_flags","firstWeekOfYear","u","Q","setUTCMonth","q","M","L","w","dirtyWeek","week","setUTCWeek","I","dirtyISOWeek","isoWeek","setUTCISOWeek","d","subPriority","isLeapYear","getUTCMonth","D","E","e","wholeWeekDays","c","i","setUTCISODay","a","b","B","h","isPM","getUTCHours","H","K","k","hours","m","setUTCMinutes","s","setUTCSeconds","S","pow","setUTCMilliseconds","X","timestampIsSet","x","t","_token","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","defaultLocale","subFnOptions","setters","dateToSystemTimezone","tokens","substring","firstCharacter","longFormatter","longFormatters","usedTokens","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parser","parsers","isArray","incompatibleToken","_i","usedToken","fullToken","push","cleanEscapedString","uniquePrioritySetters","setter","sort","filter","setterArray","utcDate","convertedDate","setFullYear","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","argument","argStr","console","warn","$","proto","enumerable","toJSON","URL","this"],"mappings":"wJAwBaA,EAAcC,OAAO,iBACrBC,EAAiBD,OAAO,oBACxBE,EAAeF,OAAO,wBAE7BG,EAAcH,OAAO,kBAuJrBI,EAAYC,GACA,iBAARA,GAA4B,OAARA,GAAgC,mBAARA,EA+FzCC,EAAmB,IAAIC,IAGlC,CACA,CAAC,QAjEgE,CACjEC,UAAYH,GACVD,EAASC,IAASA,EAAoBN,GACxC,UAAUU,GACR,MAAM,MAAEC,EAAF,MAASC,GAAU,IAAIC,eAE7B,OADAC,EAAOJ,EAAKC,GACL,CAACC,EAAO,CAACA,KAElBG,YAAYC,IACVA,EAAKC,QACEC,EAAKF,MAwDd,CAAC,QAtCC,CACFP,UAAYU,GACVd,EAASc,IAAUf,KAAee,EACpC,WAAU,MAAEA,IACV,IAAIC,EAaJ,OAXEA,EADED,aAAiBE,MACN,CACXC,SAAS,EACTH,MAAO,CACLI,QAASJ,EAAMI,QACfC,KAAML,EAAMK,KACZC,MAAON,EAAMM,QAIJ,CAAEH,SAAS,EAAOH,SAE1B,CAACC,EAAY,KAEtB,YAAYA,GACV,GAAIA,EAAWE,QACb,MAAMI,OAAOC,OACX,IAAIN,MAAMD,EAAWD,MAAMI,SAC3BH,EAAWD,OAGf,MAAMC,EAAWD,W,SAeLL,EAAOJ,EAAUkB,EAAeC,MAC9CD,EAAGE,iBAAiB,WAAW,SAASC,EAASC,GAC/C,IAAKA,IAAOA,EAAGC,KACb,OAEF,MAAM,GAAEC,EAAF,KAAMC,EAAN,KAAYC,GAAM,eACtBA,KAAM,IACFJ,EAAGC,MAEHI,GAAgBL,EAAGC,KAAKI,cAAgB,IAAIC,IAAIC,GACtD,IAAIC,EACJ,IACE,MAAMC,EAASL,EAAKM,MAAM,GAAI,GAAGC,QAAO,CAACjC,EAAKkC,IAASlC,EAAIkC,IAAOlC,GAC5DmC,EAAWT,EAAKO,QAAO,CAACjC,EAAKkC,IAASlC,EAAIkC,IAAOlC,GACvD,OAAQyB,GACN,OAEIK,EAAcK,EAEhB,MACF,OAEIJ,EAAOL,EAAKM,OAAO,GAAG,IAAMH,EAAcP,EAAGC,KAAKd,OAClDqB,GAAc,EAEhB,MACF,OAEIA,EAAcK,EAASC,MAAML,EAAQJ,GAEvC,MACF,OAGIG,E,SA8Ja9B,GACvB,OAAOgB,OAAOC,OAAOjB,EAAK,CAAE,CAACV,IAAc,IA/JnB+C,CADA,IAAIF,KAAYR,IAGhC,MACF,OACE,CACE,MAAM,MAAE1B,EAAF,MAASC,GAAU,IAAIC,eAC7BC,EAAOJ,EAAKE,GACZ4B,E,SAkJa9B,EAAUsC,GAEjC,OADAC,EAAcC,IAAIxC,EAAKsC,GAChBtC,EApJiByC,CAASxC,EAAO,CAACA,IAEjC,MACF,OAEI6B,OAAcY,GAIpB,MAAOjC,GACPqB,EAAc,CAAErB,QAAO,CAACf,GAAc,GAExCiD,QAAQC,QAAQd,GACbe,OAAOpC,IACC,CAAEA,QAAO,CAACf,GAAc,MAEhCoD,MAAMhB,IACL,MAAOiB,EAAWC,GAAiBC,EAAYnB,GAC/CZ,EAAGgC,YAAW,+BAAMH,GAAS,CAAEvB,OAAMwB,GACxB,IAATvB,IAEFP,EAAGiC,oBAAoB,UAAW9B,GAClC+B,EAAclC,UAIlBA,EAAGX,OACLW,EAAGX,QAQP,SAAS6C,EAAcC,IAJvB,SAAuBA,GACrB,MAAqC,gBAA9BA,EAASC,YAAYxC,MAIxByC,CAAcF,IAAWA,EAASG,Q,SAGxBhD,EAAQU,EAAcuC,GACpC,OAAOC,EAAexC,EAAI,GAAIuC,GAGhC,SAASE,EAAqBC,GAC5B,GAAIA,EACF,MAAM,IAAIjD,MAAM,8CAIpB,SAAS+C,EACPxC,EACAQ,EAAqC,GACrC+B,EAAiB,cAEjB,IAAII,GAAkB,EACtB,MAAMxB,EAAQ,IAAIyB,MAAML,EAAQ,CAC9B,IAAIM,EAAS7B,GAEX,GADAyB,EAAqBE,GACjB3B,IAASzC,EACX,MAAO,IACEuE,EAAuB9C,EAAI,CAChCO,KAAM,EACNC,KAAMA,EAAKE,KAAKqC,GAAMA,EAAEC,eACvBpB,MAAK,KACNM,EAAclC,GACd2C,GAAkB,KAIxB,GAAa,SAAT3B,EAAiB,CACnB,GAAoB,IAAhBR,EAAKyC,OACP,MAAO,CAAErB,KAAM,IAAMT,GAEvB,MAAM+B,EAAIJ,EAAuB9C,EAAI,CACnCO,KAAM,EACNC,KAAMA,EAAKE,KAAKqC,GAAMA,EAAEC,eACvBpB,KAAKjB,GACR,OAAOuC,EAAEtB,KAAKuB,KAAKD,GAErB,OAAOV,EAAYxC,EAAI,IAAIQ,EAAMQ,KAEnC,IAAI6B,EAAS7B,EAAMC,GACjBwB,EAAqBE,GAGrB,MAAOpD,EAAOuC,GAAiBC,EAAYd,GAC3C,OAAO6B,EACL9C,EACA,CACEO,KAAM,EACNC,KAAM,IAAIA,EAAMQ,GAAMN,KAAKqC,GAAMA,EAAEC,aACnCzD,SAEFuC,GACAF,KAAKjB,IAET,MAAMkC,EAASO,EAAUC,GACvBZ,EAAqBE,GACrB,MAAMW,EAAO9C,EAAKA,EAAKyC,OAAS,GAChC,GAAKK,IAAiBhF,EACpB,OAAOwE,EAAuB9C,EAAI,CAChCO,KAAM,IACLqB,KAAKjB,GAGV,GAAa,SAAT2C,EACF,OAAOd,EAAYxC,EAAIQ,EAAKM,MAAM,GAAI,IAExC,MAAOL,EAAcqB,GAAiByB,EAAiBF,GACvD,OAAOP,EACL9C,EACA,CACEO,KAAM,EACNC,KAAMA,EAAKE,KAAKqC,GAAMA,EAAEC,aACxBvC,gBAEFqB,GACAF,KAAKjB,IAET,UAAUkC,EAASQ,GACjBZ,EAAqBE,GACrB,MAAOlC,EAAcqB,GAAiByB,EAAiBF,GACvD,OAAOP,EACL9C,EACA,CACEO,KAAM,EACNC,KAAMA,EAAKE,KAAKqC,GAAMA,EAAEC,aACxBvC,gBAEFqB,GACAF,KAAKjB,MAGX,OAAOQ,EAOT,SAASoC,EAAiB9C,GACxB,MAAM+C,EAAY/C,EAAaC,IAAIqB,GACnC,MAAO,CAACyB,EAAU9C,KAAK+C,GAAMA,EAAE,MANdC,EAM0BF,EAAU9C,KAAK+C,GAAMA,EAAE,KAL3DE,MAAMC,UAAUC,OAAO3C,MAAM,GAAIwC,KAD1C,IAAmBA,EASnB,MAAMrC,EAAgB,IAAIyC,QAuB1B,SAAS/B,EAAYxC,GACnB,IAAK,MAAOK,EAAMmE,KAAYpF,EAC5B,GAAIoF,EAAQlF,UAAUU,GAAQ,CAC5B,MAAOyE,EAAiBlC,GAAiBiC,EAAQE,UAAU1E,GAC3D,MAAO,CACL,CACEgB,KAAM,EACNX,OACAL,MAAOyE,GAETlC,GAIN,MAAO,CACL,CACEvB,KAAM,EACNhB,SAEF8B,EAAc6C,IAAI3E,IAAU,IAIhC,SAASoB,EAAcpB,GACrB,OAAQA,EAAMgB,MACZ,OACE,OAAO5B,EAAiBuF,IAAI3E,EAAMK,MAAOT,YAAYI,EAAMA,OAC7D,OACE,OAAOA,EAAMA,OAInB,SAASuD,EACP9C,EACAmE,EACA/C,GAEA,OAAO,IAAIK,SAASC,IAClB,MAAMpB,EAgBD,IAAIqD,MAAM,GACdS,KAAK,GACL1D,KAAI,IAAM2D,KAAKC,MAAMD,KAAKE,SAAWC,OAAOC,kBAAkBzB,SAAS,MACvE0B,KAAK,KAlBN1E,EAAGE,iBAAiB,WAAW,SAASyE,EAAEvE,GACnCA,EAAGC,MAASD,EAAGC,KAAKC,IAAMF,EAAGC,KAAKC,KAAOA,IAG9CN,EAAGiC,oBAAoB,UAAW0C,GAClCjD,EAAQtB,EAAGC,UAETL,EAAGX,OACLW,EAAGX,QAELW,EAAGgC,YAAW,eAAG1B,MAAO6D,GAAO/C,Q,kCC7hBpB,SAASwD,EAAaC,EAAUC,GAC7C,GAAIA,EAAK7B,OAAS4B,EAChB,MAAM,IAAIE,UAAUF,EAAW,aAAeA,EAAW,EAAI,IAAM,IAAM,uBAAyBC,EAAK7B,OAAS,Y,kECFrG,SAAS+B,EAAUC,GAChC,GAAoB,OAAhBA,IAAwC,IAAhBA,IAAwC,IAAhBA,EAClD,OAAOC,IAGT,IAAIC,EAASX,OAAOS,GAEpB,OAAIG,MAAMD,GACDA,EAGFA,EAAS,EAAId,KAAKgB,KAAKF,GAAUd,KAAKC,MAAMa,G,2HCctC,SAASG,EAASC,IAC/BX,OAAa,EAAGY,WAChB,IAAIC,GAAOC,OAAOH,GAElB,OADAE,EAAKE,SAAS,GAAI,GAAI,GAAI,KACnBF,I,yFCJM,SAASG,EAAUC,EAAeC,IAC/ClB,OAAa,EAAGY,WAChB,IAAIO,GAAqBC,OAAWH,GAChCI,GAAsBD,OAAWF,GACrC,OAAOC,EAAmBG,YAAcD,EAAoBC,Y,kCC7B/C,SAASC,EAAkBrB,GACxC,OAAO,SAAUsB,GACf,IAAIC,EAAUD,GAAgB,GAC1BE,EAAQD,EAAQC,MAAQC,OAAOF,EAAQC,OAASxB,EAAK0B,aAEzD,OADa1B,EAAK2B,QAAQH,IAAUxB,EAAK2B,QAAQ3B,EAAK0B,e,mECJ3C,SAASE,EAAgB5B,GACtC,OAAO,SAAU6B,EAAYP,GAC3B,IAEIQ,EAFAP,EAAUD,GAAgB,GAI9B,GAAgB,gBAHFC,EAAQQ,QAAUN,OAAOF,EAAQQ,SAAW,eAG1B/B,EAAKgC,iBAAkB,CACrD,IAAIN,EAAe1B,EAAKiC,wBAA0BjC,EAAK0B,aACnDF,EAAQD,EAAQC,MAAQC,OAAOF,EAAQC,OAASE,EACpDI,EAAc9B,EAAKgC,iBAAiBR,IAAUxB,EAAKgC,iBAAiBN,OAC/D,CACL,IAAIQ,EAAgBlC,EAAK0B,aAErBS,EAASZ,EAAQC,MAAQC,OAAOF,EAAQC,OAASxB,EAAK0B,aAE1DI,EAAc9B,EAAKoC,OAAOD,IAAWnC,EAAKoC,OAAOF,GAInD,OAAOJ,EADK9B,EAAKqC,iBAAmBrC,EAAKqC,iBAAiBR,GAAcA,I,mEClB7D,SAASS,EAAatC,GACnC,OAAO,SAAUuC,EAAajB,GAC5B,IAAIkB,EAASf,OAAOc,GAChBhB,EAAUD,GAAgB,GAC1BE,EAAQD,EAAQC,MAChBiB,EAAejB,GAASxB,EAAK0C,cAAclB,IAAUxB,EAAK0C,cAAc1C,EAAK2C,mBAC7EC,EAAcJ,EAAOK,MAAMJ,GAE/B,IAAKG,EACH,OAAO,KAGT,IAEInI,EAFAqI,EAAgBF,EAAY,GAC5BG,EAAgBvB,GAASxB,EAAK+C,cAAcvB,IAAUxB,EAAK+C,cAAc/C,EAAKgD,mBAelF,OAXEvI,EADoD,mBAAlDO,OAAO8D,UAAUZ,SAAS+E,KAAKF,GA2BvC,SAAmBG,EAAOC,GACxB,IAAK,IAAIC,EAAM,EAAGA,EAAMF,EAAM/E,OAAQiF,IACpC,GAAcF,EAAME,GA3BDC,KAAKP,GA4BtB,OAAOM,EA7BCE,CAAUP,GAkBxB,SAAiBQ,EAAQJ,GACvB,IAAK,IAAIC,KAAOG,EACd,GAAIA,EAAOC,eAAeJ,IAAkBG,EAAOH,GAfhCC,KAAKP,GAgBtB,OAAOM,EAjBCK,CAAQV,GAKlBtI,EAAQuF,EAAK0D,cAAgB1D,EAAK0D,cAAcjJ,GAASA,EAElD,CACLA,MAFFA,EAAQ8G,EAAQmC,cAAgBnC,EAAQmC,cAAcjJ,GAASA,EAG7DkJ,KAAMnB,EAAOxG,MAAM8G,EAAc3E,U,mEC9BxB,SAASyF,EAAoB5D,GAC1C,OAAO,SAAUuC,EAAajB,GAC5B,IAAIkB,EAASf,OAAOc,GAChBhB,EAAUD,GAAgB,GAC1BsB,EAAcJ,EAAOK,MAAM7C,EAAKyC,cAEpC,IAAKG,EACH,OAAO,KAGT,IAAIE,EAAgBF,EAAY,GAC5BiB,EAAcrB,EAAOK,MAAM7C,EAAK8D,cAEpC,IAAKD,EACH,OAAO,KAGT,IAAIpJ,EAAQuF,EAAK0D,cAAgB1D,EAAK0D,cAAcG,EAAY,IAAMA,EAAY,GAElF,MAAO,CACLpJ,MAFFA,EAAQ8G,EAAQmC,cAAgBnC,EAAQmC,cAAcjJ,GAASA,EAG7DkJ,KAAMnB,EAAOxG,MAAM8G,EAAc3E,U,+GCrBnC4F,EAAuB,CACzBC,iBAAkB,CAChBC,WAAY,CACVC,IAAK,2BACLC,MAAO,kCAETC,gBAAiB,CACfF,IAAK,4BACLC,MAAO,mCAGXE,SAAU,CACRJ,WAAY,CACVC,IAAK,eACLC,MAAO,sBAETC,gBAAiB,CACfF,IAAK,gBACLC,MAAO,uBAGXG,YAAa,CACXL,WAAY,oBACZG,gBAAiB,uBAEnBG,iBAAkB,CAChBN,WAAY,CACVC,IAAK,0BACLC,MAAO,iCAETC,gBAAiB,CACfF,IAAK,2BACLC,MAAO,kCAGXK,SAAU,CACRP,WAAY,CACVC,IAAK,cACLC,MAAO,qBAETC,gBAAiB,CACfF,IAAK,eACLC,MAAO,sBAGXM,YAAa,CACXR,WAAY,CACVC,IAAK,mBACLC,MAAO,0BAETC,gBAAiB,CACfF,IAAK,oBACLC,MAAO,2BAGXO,OAAQ,CACNT,WAAY,CACVC,IAAK,cACLC,MAAO,qBAETC,gBAAiB,CACfF,IAAK,eACLC,MAAO,sBAGXQ,MAAO,CACLV,WAAY,CACVC,IAAK,UACLC,MAAO,kBAETC,gBAAiB,CACfF,IAAK,YACLC,MAAO,oBAGXS,YAAa,CACXX,WAAY,CACVC,IAAK,iBACLC,MAAO,yBAETC,gBAAiB,CACfF,IAAK,mBACLC,MAAO,0BAGXU,OAAQ,CACNZ,WAAY,CACVC,IAAK,YACLC,MAAO,oBAETC,gBAAiB,CACfF,IAAK,cACLC,MAAO,qBAGXW,aAAc,CACZb,WAAY,CACVC,IAAK,iBACLC,MAAO,yBAETC,gBAAiB,CACfF,IAAK,mBACLC,MAAO,2BAGXY,QAAS,CACPd,WAAY,CACVC,IAAK,YACLC,MAAO,oBAETC,gBAAiB,CACfF,IAAK,cACLC,MAAO,sBAGXa,YAAa,CACXf,WAAY,CACVC,IAAK,gBACLC,MAAO,wBAETC,gBAAiB,CACfF,IAAK,kBACLC,MAAO,0BAGXc,OAAQ,CACNhB,WAAY,CACVC,IAAK,WACLC,MAAO,mBAETC,gBAAiB,CACfF,IAAK,aACLC,MAAO,qBAGXe,WAAY,CACVjB,WAAY,CACVC,IAAK,oBACLC,MAAO,4BAETC,gBAAiB,CACfF,IAAK,sBACLC,MAAO,8BAGXgB,aAAc,CACZlB,WAAY,CACVC,IAAK,gBACLC,MAAO,wBAETC,gBAAiB,CACfF,IAAK,kBACLC,MAAO,2B,UClHb,EAdiB,CACfxD,MAAMU,OAAkB,CACtBM,QAxBc,CAChByD,KAAM,kBAENC,KAAM,YAENC,OAAQ,YAERC,MAAO,WAkBL7D,aAAc,SAEhB8D,MAAMnE,OAAkB,CACtBM,QAlBc,CAChByD,KAAM,gBACNC,KAAM,aACNC,OAAQ,WACRC,MAAO,SAeL7D,aAAc,SAEhB+D,UAAUpE,OAAkB,CAC1BM,QAhBkB,CACpByD,KAAM,yBACNC,KAAM,yBACNC,OAAQ,oBACRC,MAAO,qBAaL7D,aAAc,UCnCdgE,EAAuB,CACzBC,SAAU,wBACVC,UAAW,iBACXC,MAAO,eACPC,SAAU,gBACVC,SAAU,cACV5B,MAAO,K,UCuHT,EA5Be,CACb6B,cANF,SAAuB7F,EAAa8F,GAElC,OADavG,OAAOS,GACJ,KAKhB+F,KAAKtE,OAAgB,CACnBQ,OAnGY,CACd+D,OAAQ,CAAC,SAAU,UACnBC,YAAa,CAAC,SAAU,UACxBC,KAAM,CAAC,eAAgB,kBAiGrB3E,aAAc,SAEhB4E,SAAS1E,OAAgB,CACvBQ,OAlGgB,CAClB+D,OAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,YAAa,CAAC,KAAM,KAAM,KAAM,MAChCC,KAAM,CAAC,aAAc,aAAc,aAAc,eAgG/C3E,aAAc,OACdW,iBAAkB,SAAUiE,GAC1B,OAAO5G,OAAO4G,GAAW,KAG7BC,OAAO3E,OAAgB,CACrBQ,OAhGc,CAChB+D,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChEC,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3FC,KAAM,CAAC,SAAU,UAAW,OAAQ,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,aA8FhH3E,aAAc,SAEhB8E,KAAK5E,OAAgB,CACnBQ,OA/FY,CACd+D,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvCZ,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5Ca,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxDC,KAAM,CAAC,UAAW,SAAU,WAAY,WAAY,aAAc,UAAW,YA4F3E3E,aAAc,SAEhB+E,WAAW7E,OAAgB,CACzBQ,OA5FkB,CACpB+D,OAAQ,CACNO,GAAI,MACJC,GAAI,MACJC,SAAU,cACVC,KAAM,SACNC,QAAS,SACTC,UAAW,SACXC,QAAS,QACTC,MAAO,SAETb,YAAa,CACXM,GAAI,QACJC,GAAI,SACJC,SAAU,cACVC,KAAM,SACNC,QAAS,SACTC,UAAW,aACXC,QAAS,QACTC,MAAO,SAETZ,KAAM,CACJK,GAAI,aACJC,GAAI,cACJC,SAAU,cACVC,KAAM,SACNC,QAAS,SACTC,UAAW,aACXC,QAAS,QACTC,MAAO,UAgEPvF,aAAc,OACdM,iBA9D4B,CAC9BmE,OAAQ,CACNO,GAAI,MACJC,GAAI,MACJC,SAAU,cACVC,KAAM,SACNC,QAAS,UACTC,UAAW,SACXC,QAAS,SACTC,MAAO,UAETb,YAAa,CACXM,GAAI,QACJC,GAAI,SACJC,SAAU,cACVC,KAAM,SACNC,QAAS,UACTC,UAAW,cACXC,QAAS,SACTC,MAAO,UAETZ,KAAM,CACJK,GAAI,aACJC,GAAI,cACJC,SAAU,cACVC,KAAM,SACNC,QAAS,UACTC,UAAW,cACXC,QAAS,SACTC,MAAO,WAkCPhF,uBAAwB,U,oBC1F5B,EAda,CACXiF,KAAM,KACNC,eJwIa,SAAwBC,EAAOC,EAAO9F,GAEnD,IACI+F,EADAC,GADJhG,EAAUA,GAAW,IACIiG,UAAYzD,EAAqBqD,GAAOhD,gBAAkBL,EAAqBqD,GAAOnD,WAW/G,OAPEqD,EADwB,iBAAfC,EACAA,EACU,IAAVF,EACAE,EAAWrD,IAEXqD,EAAWpD,MAAMsD,QAAQ,YAAaJ,GAG7C9F,EAAQiG,UACNjG,EAAQmG,WAAa,EAChB,MAAQJ,EAER,OAASA,EAIbA,GI5JPK,WAAYA,EACZC,eFda,SAAwBR,EAAOS,EAAOC,EAAWC,GAC9D,OAAOrC,EAAqB0B,IEc5BY,SAAUA,EACVnF,MCiCU,CACVmD,eAAepC,OAAoB,CACjCnB,aAzD4B,eA0D5BqB,aAzD4B,OA0D5BJ,cAAe,SAAUjJ,GACvB,OAAOwN,SAASxN,EAAO,OAG3ByL,KAAK5D,OAAa,CAChBI,cA9DmB,CACrByD,OAAQ,gCACRC,YAAa,gCACbC,KAAM,gFA4DJ1D,kBAAmB,OACnBI,cA3DmB,CACrBmF,IAAK,CAAC,MAAO,QA2DXlF,kBAAmB,QAErBsD,SAAShE,OAAa,CACpBI,cA5DuB,CACzByD,OAAQ,WACRC,YAAa,YACbC,KAAM,yBA0DJ1D,kBAAmB,OACnBI,cAzDuB,CACzBmF,IAAK,CAAC,KAAM,KAAM,KAAM,OAyDtBlF,kBAAmB,MACnBU,cAAe,SAAUyE,GACvB,OAAOA,EAAQ,KAGnB5B,OAAOjE,OAAa,CAClBI,cA7DqB,CACvByD,OAAQ,eACRC,YAAa,sDACbC,KAAM,0FA2DJ1D,kBAAmB,OACnBI,cA1DqB,CACvBoD,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtF+B,IAAK,CAAC,OAAQ,MAAO,QAAS,OAAQ,QAAS,QAAS,QAAS,OAAQ,MAAO,MAAO,MAAO,QAyD5FlF,kBAAmB,QAErBwD,KAAKlE,OAAa,CAChBI,cA1DmB,CACrByD,OAAQ,YACRZ,MAAO,2BACPa,YAAa,4CACbC,KAAM,mEAuDJ1D,kBAAmB,OACnBI,cAtDmB,CACrBmF,IAAK,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,SAsDnDlF,kBAAmB,QAErByD,WAAWnE,OAAa,CACtBI,cAvDyB,CAC3ByD,OAAQ,oEACRC,YAAa,yEACbC,KAAM,mFAqDJ1D,kBAAmB,OACnBI,cApDyB,CAC3BmF,IAAK,CACHxB,GAAI,MACJC,GAAI,MACJC,SAAU,UACVC,KAAM,UACNC,QAAS,WACTC,UAAW,eAEXC,QAAS,UACTC,MAAO,YA2CPjE,kBAAmB,SDvErBzB,QAAS,CACP6G,aAAc,EAGdC,sBAAuB,K,+EE7BvBtE,EAAuB,CACzBC,iBAAkB,CAChBE,IAAK,qBACLC,MAAO,+BAETE,SAAU,CACRH,IAAK,WACLC,MAAO,qBAETG,YAAa,gBACbC,iBAAkB,CAChBL,IAAK,qBACLC,MAAO,+BAETK,SAAU,CACRN,IAAK,WACLC,MAAO,qBAETM,YAAa,CACXP,IAAK,eACLC,MAAO,yBAETO,OAAQ,CACNR,IAAK,SACLC,MAAO,mBAETQ,MAAO,CACLT,IAAK,QACLC,MAAO,kBAETS,YAAa,CACXV,IAAK,eACLC,MAAO,yBAETU,OAAQ,CACNX,IAAK,SACLC,MAAO,mBAETW,aAAc,CACZZ,IAAK,gBACLC,MAAO,0BAETY,QAAS,CACPb,IAAK,UACLC,MAAO,oBAETa,YAAa,CACXd,IAAK,eACLC,MAAO,yBAETc,OAAQ,CACNf,IAAK,SACLC,MAAO,mBAETe,WAAY,CACVhB,IAAK,cACLC,MAAO,wBAETgB,aAAc,CACZjB,IAAK,gBACLC,MAAO,2B,UC3BX,EAdiB,CACfxD,MAAMU,OAAkB,CACtBM,QApBc,CAChByD,KAAM,mBACNC,KAAM,aACNC,OAAQ,WACRC,MAAO,cAiBL7D,aAAc,SAEhB8D,MAAMnE,OAAkB,CACtBM,QAlBc,CAChByD,KAAM,iBACNC,KAAM,cACNC,OAAQ,YACRC,MAAO,UAeL7D,aAAc,SAEhB+D,UAAUpE,OAAkB,CAC1BM,QAhBkB,CACpByD,KAAM,yBACNC,KAAM,yBACNC,OAAQ,qBACRC,MAAO,sBAaL7D,aAAc,UC9BdgE,EAAuB,CACzBC,SAAU,qBACVC,UAAW,mBACXC,MAAO,eACPC,SAAU,kBACVC,SAAU,cACV5B,MAAO,K,UC8IT,EA5Be,CACb6B,cA9BF,SAAuB7F,EAAa8F,GAClC,IAAI5F,EAASX,OAAOS,GAUhBmI,EAASjI,EAAS,IAEtB,GAAIiI,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,IACf,KAAK,EACH,OAAOjI,EAAS,KAElB,KAAK,EACH,OAAOA,EAAS,KAElB,KAAK,EACH,OAAOA,EAAS,KAItB,OAAOA,EAAS,MAKhB6F,KAAKtE,OAAgB,CACnBQ,OA1HY,CACd+D,OAAQ,CAAC,IAAK,KACdC,YAAa,CAAC,KAAM,MACpBC,KAAM,CAAC,gBAAiB,gBAwHtB3E,aAAc,SAEhB4E,SAAS1E,OAAgB,CACvBQ,OAzHgB,CAClB+D,OAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,YAAa,CAAC,KAAM,KAAM,KAAM,MAChCC,KAAM,CAAC,cAAe,cAAe,cAAe,gBAuHlD3E,aAAc,OACdW,iBAAkB,SAAUiE,GAC1B,OAAO5G,OAAO4G,GAAW,KAG7BC,OAAO3E,OAAgB,CACrBQ,OAvHc,CAChB+D,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChEC,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3FC,KAAM,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,aAqHnH3E,aAAc,SAEhB8E,KAAK5E,OAAgB,CACnBQ,OAtHY,CACd+D,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvCZ,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5Ca,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxDC,KAAM,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,aAmHvE3E,aAAc,SAEhB+E,WAAW7E,OAAgB,CACzBQ,OApHkB,CACpB+D,OAAQ,CACNO,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETb,YAAa,CACXM,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETZ,KAAM,CACJK,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,UAwFPvF,aAAc,OACdM,iBAtF4B,CAC9BmE,OAAQ,CACNO,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETb,YAAa,CACXM,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETZ,KAAM,CACJK,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,aA0DPhF,uBAAwB,U,oBCpH5B,EAda,CACXiF,KAAM,QACNC,eJ8Ca,SAAwBC,EAAOC,EAAO9F,GAEnD,IAAI+F,EAUJ,OAXA/F,EAAUA,GAAW,GAInB+F,EADyC,iBAAhCvD,EAAqBqD,GACrBrD,EAAqBqD,GACX,IAAVC,EACAtD,EAAqBqD,GAAOlD,IAE5BH,EAAqBqD,GAAOjD,MAAMsD,QAAQ,YAAaJ,GAG9D9F,EAAQiG,UACNjG,EAAQmG,WAAa,EAChB,MAAQJ,EAERA,EAAS,OAIbA,GIjEPK,WAAYA,EACZC,eFXa,SAAwBR,EAAOS,EAAOC,EAAWC,GAC9D,OAAOrC,EAAqB0B,IEW5BY,SAAUA,EACVnF,MCkCU,CACVmD,eAAepC,OAAoB,CACjCnB,aAvD4B,wBAwD5BqB,aAvD4B,OAwD5BJ,cAAe,SAAUjJ,GACvB,OAAOwN,SAASxN,EAAO,OAG3ByL,KAAK5D,OAAa,CAChBI,cA5DmB,CACrByD,OAAQ,UACRC,YAAa,6DACbC,KAAM,8DA0DJ1D,kBAAmB,OACnBI,cAzDmB,CACrBmF,IAAK,CAAC,MAAO,YAyDXlF,kBAAmB,QAErBsD,SAAShE,OAAa,CACpBI,cA1DuB,CACzByD,OAAQ,WACRC,YAAa,YACbC,KAAM,kCAwDJ1D,kBAAmB,OACnBI,cAvDuB,CACzBmF,IAAK,CAAC,KAAM,KAAM,KAAM,OAuDtBlF,kBAAmB,MACnBU,cAAe,SAAUyE,GACvB,OAAOA,EAAQ,KAGnB5B,OAAOjE,OAAa,CAClBI,cA3DqB,CACvByD,OAAQ,eACRC,YAAa,sDACbC,KAAM,6FAyDJ1D,kBAAmB,OACnBI,cAxDqB,CACvBoD,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtF+B,IAAK,CAAC,OAAQ,MAAO,QAAS,OAAQ,QAAS,QAAS,QAAS,OAAQ,MAAO,MAAO,MAAO,QAuD5FlF,kBAAmB,QAErBwD,KAAKlE,OAAa,CAChBI,cAxDmB,CACrByD,OAAQ,YACRZ,MAAO,2BACPa,YAAa,kCACbC,KAAM,gEAqDJ1D,kBAAmB,OACnBI,cApDmB,CACrBoD,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnD+B,IAAK,CAAC,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,SAmDjDlF,kBAAmB,QAErByD,WAAWnE,OAAa,CACtBI,cApDyB,CAC3ByD,OAAQ,6DACR+B,IAAK,kFAmDHvF,kBAAmB,MACnBI,cAlDyB,CAC3BmF,IAAK,CACHxB,GAAI,MACJC,GAAI,MACJC,SAAU,OACVC,KAAM,OACNC,QAAS,WACTC,UAAW,aACXC,QAAS,WACTC,MAAO,WA0CPjE,kBAAmB,SDxErBzB,QAAS,CACP6G,aAAc,EAGdC,sBAAuB,I,6BEAZ,SAASE,EAAgB9H,EAAW+H,IACjD1I,OAAa,EAAGY,WAChB,IAAI+H,GAAY7H,OAAOH,GAAWW,UAC9BsH,GAASxI,OAAUsI,GACvB,OAAO,IAAIG,KAAKF,EAAYC,GCJf,SAASE,EAAgBnI,EAAW+H,IACjD1I,OAAa,EAAGY,WAChB,IAAIgI,GAASxI,OAAUsI,GACvB,OAAOD,EAAgB9H,GAAYiI,GC7BtB,SAASzN,EAAOwC,EAAQoL,GACrC,GAAc,MAAVpL,EACF,MAAM,IAAIwC,UAAU,iEAKtB,IAAK,IAAI6I,KAFTD,EAAcA,GAAe,GAGvBA,EAAYrF,eAAesF,KAC7BrL,EAAOqL,GAAYD,EAAYC,IAInC,OAAOrL,ECbT,SAASsL,EAAkBC,EAASrB,GAClC,OAAQqB,GACN,IAAK,IACH,OAAOrB,EAAWhH,KAAK,CACrBa,MAAO,UAGX,IAAK,KACH,OAAOmG,EAAWhH,KAAK,CACrBa,MAAO,WAGX,IAAK,MACH,OAAOmG,EAAWhH,KAAK,CACrBa,MAAO,SAGX,IAAK,OACL,QACE,OAAOmG,EAAWhH,KAAK,CACrBa,MAAO,UAKf,SAASyH,EAAkBD,EAASrB,GAClC,OAAQqB,GACN,IAAK,IACH,OAAOrB,EAAWnC,KAAK,CACrBhE,MAAO,UAGX,IAAK,KACH,OAAOmG,EAAWnC,KAAK,CACrBhE,MAAO,WAGX,IAAK,MACH,OAAOmG,EAAWnC,KAAK,CACrBhE,MAAO,SAGX,IAAK,OACL,QACE,OAAOmG,EAAWnC,KAAK,CACrBhE,MAAO,UA8Cf,IAIA,EAJqB,CACnBvD,EAAGgL,EACHC,EA3CF,SAA+BF,EAASrB,GACtC,IAQIwB,EARAvG,EAAcoG,EAAQnG,MAAM,aAC5BuG,EAAcxG,EAAY,GAC1ByG,EAAczG,EAAY,GAE9B,IAAKyG,EACH,OAAON,EAAkBC,EAASrB,GAKpC,OAAQyB,GACN,IAAK,IACHD,EAAiBxB,EAAWlC,SAAS,CACnCjE,MAAO,UAET,MAEF,IAAK,KACH2H,EAAiBxB,EAAWlC,SAAS,CACnCjE,MAAO,WAET,MAEF,IAAK,MACH2H,EAAiBxB,EAAWlC,SAAS,CACnCjE,MAAO,SAET,MAEF,IAAK,OACL,QACE2H,EAAiBxB,EAAWlC,SAAS,CACnCjE,MAAO,SAKb,OAAO2H,EAAe1B,QAAQ,WAAYsB,EAAkBK,EAAazB,IAAaF,QAAQ,WAAYwB,EAAkBI,EAAa1B,MCxFvI2B,EAAyB,IAE7B,SAASC,EAAwB5I,GAC/B,OAAOA,EAAKS,UAAYkI,EAeX,SAASE,EAAgC/I,GACtD,IAAIE,EAAO,IAAIgI,KAAKlI,EAAUW,WAC1BqI,EAAqBlK,KAAKgB,KAAKI,EAAK+I,qBACxC/I,EAAKgJ,WAAW,EAAG,GACnB,IACIC,EADuBH,EAAqB,GACeH,EAAyBC,EAAwB5I,IAAS2I,EAAyBC,EAAwB5I,GAC1K,OAAO8I,EAAqBH,EAAyBM,ECxBvD,IAAIC,EAA2B,CAAC,IAAK,MACjCC,EAA0B,CAAC,KAAM,QAC9B,SAASC,EAA0B3C,GACxC,OAAoD,IAA7CyC,EAAyBG,QAAQ5C,GAEnC,SAAS6C,EAAyB7C,GACvC,OAAmD,IAA5C0C,EAAwBE,QAAQ5C,GAElC,SAAS8C,EAAoB9C,EAAO+C,EAAQC,GACjD,GAAc,SAAVhD,EACF,MAAM,IAAIiD,WAAW,qCAAqCtL,OAAOoL,EAAQ,0CAA0CpL,OAAOqL,EAAO,iCAC5H,GAAc,OAAVhD,EACT,MAAM,IAAIiD,WAAW,iCAAiCtL,OAAOoL,EAAQ,0CAA0CpL,OAAOqL,EAAO,iCACxH,GAAc,MAAVhD,EACT,MAAM,IAAIiD,WAAW,+BAA+BtL,OAAOoL,EAAQ,sDAAsDpL,OAAOqL,EAAO,iCAClI,GAAc,OAAVhD,EACT,MAAM,IAAIiD,WAAW,iCAAiCtL,OAAOoL,EAAQ,sDAAsDpL,OAAOqL,EAAO,iCCX9H,SAASE,EAAe7J,EAAWa,IAChDxB,OAAa,EAAGY,WAChB,IAAIa,EAAUD,GAAgB,GAC1BiJ,EAAShJ,EAAQgJ,OACjBC,EAAqBD,GAAUA,EAAOhJ,SAAWgJ,EAAOhJ,QAAQ6G,aAChEqC,EAA4C,MAAtBD,EAA6B,GAAItK,OAAUsK,GACjEpC,EAAuC,MAAxB7G,EAAQ6G,aAAuBqC,GAAsBvK,OAAUqB,EAAQ6G,cAE1F,KAAMA,GAAgB,GAAKA,GAAgB,GACzC,MAAM,IAAIiC,WAAW,oDAGvB,IAAI1J,GAAOC,OAAOH,GACd+F,EAAM7F,EAAK+J,YACXC,GAAQnE,EAAM4B,EAAe,EAAI,GAAK5B,EAAM4B,EAGhD,OAFAzH,EAAKiK,WAAWjK,EAAKkK,aAAeF,GACpChK,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBnK,EChBM,SAASoK,EAAetK,EAAWa,IAChDxB,OAAa,EAAGY,WAChB,IAAIC,GAAOC,OAAOH,EAAWa,GACzB0J,EAAOrK,EAAKsK,iBACZ1J,EAAUD,GAAgB,GAC1BiJ,EAAShJ,EAAQgJ,OACjBW,EAA8BX,GAAUA,EAAOhJ,SAAWgJ,EAAOhJ,QAAQ8G,sBACzE8C,EAA8D,MAA/BD,EAAsC,GAAIhL,OAAUgL,GACnF7C,EAAyD,MAAjC9G,EAAQ8G,sBAAgC8C,GAA+BjL,OAAUqB,EAAQ8G,uBAErH,KAAMA,GAAyB,GAAKA,GAAyB,GAC3D,MAAM,IAAIgC,WAAW,6DAGvB,IAAIe,EAAsB,IAAIzC,KAAK,GACnCyC,EAAoBC,eAAeL,EAAO,EAAG,EAAG3C,GAChD+C,EAAoBN,YAAY,EAAG,EAAG,EAAG,GACzC,IAAIQ,EAAkBhB,EAAec,EAAqB9J,GACtDiK,EAAsB,IAAI5C,KAAK,GACnC4C,EAAoBF,eAAeL,EAAM,EAAG3C,GAC5CkD,EAAoBT,YAAY,EAAG,EAAG,EAAG,GACzC,IAAIU,EAAkBlB,EAAeiB,EAAqBjK,GAE1D,OAAIX,EAAKS,WAAakK,EAAgBlK,UAC7B4J,EAAO,EACLrK,EAAKS,WAAaoK,EAAgBpK,UACpC4J,EAEAA,EAAO,EC7BH,SAASS,EAAUhL,EAAWiL,EAAUpK,IACrDxB,OAAa,EAAGY,WAChB,IAAIa,EAAUD,GAAgB,GAC1BiJ,EAAShJ,EAAQgJ,OACjBC,EAAqBD,GAAUA,EAAOhJ,SAAWgJ,EAAOhJ,QAAQ6G,aAChEqC,EAA4C,MAAtBD,EAA6B,GAAItK,OAAUsK,GACjEpC,EAAuC,MAAxB7G,EAAQ6G,aAAuBqC,GAAsBvK,OAAUqB,EAAQ6G,cAE1F,KAAMA,GAAgB,GAAKA,GAAgB,GACzC,MAAM,IAAIiC,WAAW,oDAGvB,IAAI1J,GAAOC,OAAOH,GACd+F,GAAMtG,OAAUwL,GAChBC,EAAahL,EAAK+J,YAClBkB,EAAYpF,EAAM,EAClBqF,GAAYD,EAAY,GAAK,EAC7BjB,GAAQkB,EAAWzD,EAAe,EAAI,GAAK5B,EAAMmF,EAErD,OADAhL,EAAKiK,WAAWjK,EAAKkK,aAAeF,GAC7BhK,ECpBM,SAASmL,EAAkBrL,IACxCX,OAAa,EAAGY,WAChB,IAAI0H,EAAe,EACfzH,GAAOC,OAAOH,GACd+F,EAAM7F,EAAK+J,YACXC,GAAQnE,EAAM4B,EAAe,EAAI,GAAK5B,EAAM4B,EAGhD,OAFAzH,EAAKiK,WAAWjK,EAAKkK,aAAeF,GACpChK,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBnK,ECPM,SAASoL,EAAkBtL,IACxCX,OAAa,EAAGY,WAChB,IAAIC,GAAOC,OAAOH,GACduK,EAAOrK,EAAKsK,iBACZe,EAA4B,IAAIrD,KAAK,GACzCqD,EAA0BX,eAAeL,EAAO,EAAG,EAAG,GACtDgB,EAA0BlB,YAAY,EAAG,EAAG,EAAG,GAC/C,IAAIQ,EAAkBQ,EAAkBE,GACpCC,EAA4B,IAAItD,KAAK,GACzCsD,EAA0BZ,eAAeL,EAAM,EAAG,GAClDiB,EAA0BnB,YAAY,EAAG,EAAG,EAAG,GAC/C,IAAIU,EAAkBM,EAAkBG,GAExC,OAAItL,EAAKS,WAAakK,EAAgBlK,UAC7B4J,EAAO,EACLrK,EAAKS,WAAaoK,EAAgBpK,UACpC4J,EAEAA,EAAO,EClBH,SAASkB,EAAsBzL,IAC5CX,OAAa,EAAGY,WAChB,IAAIsK,EAAOe,EAAkBtL,GACzB0L,EAAkB,IAAIxD,KAAK,GAC/BwD,EAAgBd,eAAeL,EAAM,EAAG,GACxCmB,EAAgBrB,YAAY,EAAG,EAAG,EAAG,GACrC,IAAInK,EAAOmL,EAAkBK,GAC7B,OAAOxL,ECRT,IAAIyL,EAAuB,OAGZ,SAASC,EAAc5L,IACpCX,OAAa,EAAGY,WAChB,IAAIC,GAAOC,OAAOH,GACdkK,EAAOmB,EAAkBnL,GAAMS,UAAY8K,EAAsBvL,GAAMS,UAI3E,OAAO7B,KAAK+M,MAAM3B,EAAOyB,GAAwB,ECRpC,SAASG,EAAmB9L,EAAWa,IACpDxB,OAAa,EAAGY,WAChB,IAAIa,EAAUD,GAAgB,GAC1BiJ,EAAShJ,EAAQgJ,OACjBW,EAA8BX,GAAUA,EAAOhJ,SAAWgJ,EAAOhJ,QAAQ8G,sBACzE8C,EAA8D,MAA/BD,EAAsC,GAAIhL,OAAUgL,GACnF7C,EAAyD,MAAjC9G,EAAQ8G,sBAAgC8C,GAA+BjL,OAAUqB,EAAQ8G,uBACjH2C,EAAOD,EAAetK,EAAWa,GACjCkL,EAAY,IAAI7D,KAAK,GACzB6D,EAAUnB,eAAeL,EAAM,EAAG3C,GAClCmE,EAAU1B,YAAY,EAAG,EAAG,EAAG,GAC/B,IAAInK,EAAO2J,EAAekC,EAAWlL,GACrC,OAAOX,ECdT,IAAIyL,EAAuB,OAGZ,SAASK,EAAWhM,EAAWc,IAC5CzB,OAAa,EAAGY,WAChB,IAAIC,GAAOC,OAAOH,GACdkK,EAAOL,EAAe3J,EAAMY,GAASH,UAAYmL,EAAmB5L,EAAMY,GAASH,UAIvF,OAAO7B,KAAK+M,MAAM3B,EAAOyB,GAAwB,ECPnD,IAGIM,EACK,iBADLA,EAGI,qBAHJA,EAKS,kCALTA,EAOI,qBAPJA,EASO,qBATPA,EAWO,qBAXPA,EAaO,iBAbPA,EAeO,iBAfPA,EAiBM,YAjBNA,EAmBM,YAnBNA,EAqBW,MArBXA,EAuBS,WAvBTA,EAyBW,WAzBXA,EA2BU,WA3BVA,GA6Be,SA7BfA,GA8BiB,QA9BjBA,GAgCe,aAhCfA,GAkCiB,aAlCjBA,GAoCgB,aAGhBC,GACoB,2BADpBA,GAEK,0BAFLA,GAGoB,oCAHpBA,GAIQ,2BAJRA,GAKuB,sCAG3B,SAASC,GAAoB5D,EAASxG,EAAQkB,GAC5C,IAAId,EAAcJ,EAAOK,MAAMmG,GAE/B,IAAKpG,EACH,OAAO,KAGT,IAAInI,EAAQwN,SAASrF,EAAY,GAAI,IACrC,MAAO,CACLnI,MAAOiJ,EAAgBA,EAAcjJ,GAASA,EAC9CkJ,KAAMnB,EAAOxG,MAAM4G,EAAY,GAAGzE,SAItC,SAAS0O,GAAqB7D,EAASxG,GACrC,IAAII,EAAcJ,EAAOK,MAAMmG,GAE/B,OAAKpG,EAKkB,MAAnBA,EAAY,GACP,CACLnI,MAAO,EACPkJ,KAAMnB,EAAOxG,MAAM,IAQhB,CACLvB,OAL4B,MAAnBmI,EAAY,GAAa,GAAK,IA/EhB,MAgFbA,EAAY,GAAKqF,SAASrF,EAAY,GAAI,IAAM,GA/EjC,KAgFbA,EAAY,GAAKqF,SAASrF,EAAY,GAAI,IAAM,GA/EnC,KAgFbA,EAAY,GAAKqF,SAASrF,EAAY,GAAI,IAAM,IAG5De,KAAMnB,EAAOxG,MAAM4G,EAAY,GAAGzE,SAjB3B,KAqBX,SAAS2O,GAAqBtK,EAAQkB,GACpC,OAAOkJ,GAAoBF,GAAiClK,EAAQkB,GAGtE,SAASqJ,GAAaC,EAAGxK,EAAQkB,GAC/B,OAAQsJ,GACN,KAAK,EACH,OAAOJ,GAAoBF,EAA6BlK,EAAQkB,GAElE,KAAK,EACH,OAAOkJ,GAAoBF,EAA2BlK,EAAQkB,GAEhE,KAAK,EACH,OAAOkJ,GAAoBF,EAA6BlK,EAAQkB,GAElE,KAAK,EACH,OAAOkJ,GAAoBF,EAA4BlK,EAAQkB,GAEjE,QACE,OAAOkJ,GAAoB,IAAIK,OAAO,UAAYD,EAAI,KAAMxK,EAAQkB,IAI1E,SAASwJ,GAAmBF,EAAGxK,EAAQkB,GACrC,OAAQsJ,GACN,KAAK,EACH,OAAOJ,GAAoBF,GAAmClK,EAAQkB,GAExE,KAAK,EACH,OAAOkJ,GAAoBF,GAAiClK,EAAQkB,GAEtE,KAAK,EACH,OAAOkJ,GAAoBF,GAAmClK,EAAQkB,GAExE,KAAK,EACH,OAAOkJ,GAAoBF,GAAkClK,EAAQkB,GAEvE,QACE,OAAOkJ,GAAoB,IAAIK,OAAO,YAAcD,EAAI,KAAMxK,EAAQkB,IAI5E,SAASyJ,GAAqBC,GAC5B,OAAQA,GACN,IAAK,UACH,OAAO,EAET,IAAK,UACH,OAAO,GAET,IAAK,KACL,IAAK,OACL,IAAK,YACH,OAAO,GAET,IAAK,KACL,IAAK,WACL,IAAK,QACL,QACE,OAAO,GAIb,SAASC,GAAsBC,EAAcC,GAC3C,IAMIjG,EANAkG,EAAcD,EAAc,EAK5BE,EAAiBD,EAAcD,EAAc,EAAIA,EAGrD,GAAIE,GAAkB,GACpBnG,EAASgG,GAAgB,QACpB,CACL,IAAII,EAAWD,EAAiB,GAGhCnG,EAASgG,EAF0C,IAA7B/N,KAAKC,MAAMkO,EAAW,MACpBJ,GAAgBI,EAAW,IACY,IAAM,GAGvE,OAAOF,EAAclG,EAAS,EAAIA,EAGpC,IAAIqG,GAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7DC,GAA0B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE3E,SAASC,GAAgB7C,GACvB,OAAOA,EAAO,KAAQ,GAAKA,EAAO,GAAM,GAAKA,EAAO,KAAQ,EA+C9D,IAuvCA,GAvvCc,CAEZ8C,EAAG,CACDC,SAAU,IACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOvE,EAAMqD,IAAI1D,EAAQ,CACvBhB,MAAO,iBACHqB,EAAMqD,IAAI1D,EAAQ,CACtBhB,MAAO,WAIX,IAAK,QACH,OAAOqB,EAAMqD,IAAI1D,EAAQ,CACvBhB,MAAO,WAIX,IAAK,OACL,QACE,OAAOqB,EAAMqD,IAAI1D,EAAQ,CACvBhB,MAAO,UACHqB,EAAMqD,IAAI1D,EAAQ,CACtBhB,MAAO,iBACHqB,EAAMqD,IAAI1D,EAAQ,CACtBhB,MAAO,aAIfhF,IAAK,SAAUmE,EAAMsN,EAAOxT,EAAOsN,GAIjC,OAHAkG,EAAM/H,IAAMzL,EACZkG,EAAK0K,eAAe5Q,EAAO,EAAG,GAC9BkG,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,MAGtCC,EAAG,CASDJ,SAAU,IACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,IAAIrE,EAAgB,SAAUsH,GAC5B,MAAO,CACLA,KAAMA,EACNoD,eAA0B,OAAVhH,IAIpB,OAAQA,GACN,IAAK,IACH,OAAO2F,GAAa,EAAGvK,EAAQkB,GAEjC,IAAK,KACH,OAAOb,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,OACN3K,cAAeA,IAGnB,QACE,OAAOqJ,GAAa3F,EAAMjJ,OAAQqE,EAAQkB,KAGhD4K,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,EAAM2T,gBAAkB3T,EAAMuQ,KAAO,GAE9CxO,IAAK,SAAUmE,EAAMsN,EAAOxT,EAAOsN,GACjC,IAAIwF,EAAc5M,EAAKsK,iBAEvB,GAAIxQ,EAAM2T,eAAgB,CACxB,IAAIG,EAAyBlB,GAAsB5S,EAAMuQ,KAAMuC,GAG/D,OAFA5M,EAAK0K,eAAekD,EAAwB,EAAG,GAC/C5N,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBnK,EAGT,IAAIqK,EAAS,QAASiD,GAAwB,IAAdA,EAAM/H,IAAyB,EAAIzL,EAAMuQ,KAAvBvQ,EAAMuQ,KAGxD,OAFArK,EAAK0K,eAAeL,EAAM,EAAG,GAC7BrK,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGpEM,EAAG,CACDT,SAAU,IACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,IAAIrE,EAAgB,SAAUsH,GAC5B,MAAO,CACLA,KAAMA,EACNoD,eAA0B,OAAVhH,IAIpB,OAAQA,GACN,IAAK,IACH,OAAO2F,GAAa,EAAGvK,EAAQkB,GAEjC,IAAK,KACH,OAAOb,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,OACN3K,cAAeA,IAGnB,QACE,OAAOqJ,GAAa3F,EAAMjJ,OAAQqE,EAAQkB,KAGhD4K,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,EAAM2T,gBAAkB3T,EAAMuQ,KAAO,GAE9CxO,IAAK,SAAUmE,EAAMsN,EAAOxT,EAAO8G,GACjC,IAAIgM,EAAcxC,EAAepK,EAAMY,GAEvC,GAAI9G,EAAM2T,eAAgB,CACxB,IAAIG,EAAyBlB,GAAsB5S,EAAMuQ,KAAMuC,GAG/D,OAFA5M,EAAK0K,eAAekD,EAAwB,EAAGhN,EAAQ8G,uBACvD1H,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBR,EAAe3J,EAAMY,GAG9B,IAAIyJ,EAAS,QAASiD,GAAwB,IAAdA,EAAM/H,IAAyB,EAAIzL,EAAMuQ,KAAvBvQ,EAAMuQ,KAGxD,OAFArK,EAAK0K,eAAeL,EAAM,EAAGzJ,EAAQ8G,uBACrC1H,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBR,EAAe3J,EAAMY,IAE9B2M,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGnFO,EAAG,CACDV,SAAU,IACVC,MAAO,SAAUxL,EAAQ4E,EAAOsH,EAAQ3G,GACtC,OACSmF,GADK,MAAV9F,EACwB,EAGFA,EAAMjJ,OAHDqE,IAKjChG,IAAK,SAAUqL,EAAO8G,EAAQlU,EAAOsN,GACnC,IAAI6G,EAAkB,IAAIjG,KAAK,GAG/B,OAFAiG,EAAgBvD,eAAe5Q,EAAO,EAAG,GACzCmU,EAAgB9D,YAAY,EAAG,EAAG,EAAG,GAC9BgB,EAAkB8C,IAE3BV,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAG7FW,EAAG,CACDd,SAAU,IACVC,MAAO,SAAUxL,EAAQ4E,EAAOsH,EAAQ3G,GACtC,OACSmF,GADK,MAAV9F,EACwB,EAGFA,EAAMjJ,OAHDqE,IAKjChG,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAGlC,OAFApH,EAAK0K,eAAe5Q,EAAO,EAAG,GAC9BkG,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGzEY,EAAG,CACDf,SAAU,IACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GAEN,IAAK,IACL,IAAK,KAEH,OAAO2F,GAAa3F,EAAMjJ,OAAQqE,GAGpC,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,YAIV,IAAK,MACH,OAAOxL,EAAMyD,QAAQ9D,EAAQ,CAC3BhB,MAAO,cACPO,QAAS,gBACLc,EAAMyD,QAAQ9D,EAAQ,CAC1BhB,MAAO,SACPO,QAAS,eAIb,IAAK,QACH,OAAOc,EAAMyD,QAAQ9D,EAAQ,CAC3BhB,MAAO,SACPO,QAAS,eAIb,IAAK,OACL,QACE,OAAOc,EAAMyD,QAAQ9D,EAAQ,CAC3BhB,MAAO,OACPO,QAAS,gBACLc,EAAMyD,QAAQ9D,EAAQ,CAC1BhB,MAAO,cACPO,QAAS,gBACLc,EAAMyD,QAAQ9D,EAAQ,CAC1BhB,MAAO,SACPO,QAAS,iBAIjBuM,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,GAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAGlC,OAFApH,EAAKoO,YAA0B,GAAbtU,EAAQ,GAAQ,GAClCkG,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGxFc,EAAG,CACDjB,SAAU,IACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GAEN,IAAK,IACL,IAAK,KAEH,OAAO2F,GAAa3F,EAAMjJ,OAAQqE,GAGpC,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,YAIV,IAAK,MACH,OAAOxL,EAAMyD,QAAQ9D,EAAQ,CAC3BhB,MAAO,cACPO,QAAS,gBACLc,EAAMyD,QAAQ9D,EAAQ,CAC1BhB,MAAO,SACPO,QAAS,eAIb,IAAK,QACH,OAAOc,EAAMyD,QAAQ9D,EAAQ,CAC3BhB,MAAO,SACPO,QAAS,eAIb,IAAK,OACL,QACE,OAAOc,EAAMyD,QAAQ9D,EAAQ,CAC3BhB,MAAO,OACPO,QAAS,gBACLc,EAAMyD,QAAQ9D,EAAQ,CAC1BhB,MAAO,cACPO,QAAS,gBACLc,EAAMyD,QAAQ9D,EAAQ,CAC1BhB,MAAO,SACPO,QAAS,iBAIjBuM,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,GAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAGlC,OAFApH,EAAKoO,YAA0B,GAAbtU,EAAQ,GAAQ,GAClCkG,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGxFe,EAAG,CACDlB,SAAU,IACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,IAAIrE,EAAgB,SAAUjJ,GAC5B,OAAOA,EAAQ,GAGjB,OAAQ2M,GAEN,IAAK,IACH,OAAOwF,GAAoBF,EAAuBlK,EAAQkB,GAG5D,IAAK,KACH,OAAOqJ,GAAa,EAAGvK,EAAQkB,GAGjC,IAAK,KACH,OAAOb,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,QACN3K,cAAeA,IAInB,IAAK,MACH,OAAOb,EAAM0D,MAAM/D,EAAQ,CACzBhB,MAAO,cACPO,QAAS,gBACLc,EAAM0D,MAAM/D,EAAQ,CACxBhB,MAAO,SACPO,QAAS,eAIb,IAAK,QACH,OAAOc,EAAM0D,MAAM/D,EAAQ,CACzBhB,MAAO,SACPO,QAAS,eAIb,IAAK,OACL,QACE,OAAOc,EAAM0D,MAAM/D,EAAQ,CACzBhB,MAAO,OACPO,QAAS,gBACLc,EAAM0D,MAAM/D,EAAQ,CACxBhB,MAAO,cACPO,QAAS,gBACLc,EAAM0D,MAAM/D,EAAQ,CACxBhB,MAAO,SACPO,QAAS,iBAIjBuM,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,IAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAGlC,OAFApH,EAAKoO,YAAYtU,EAAO,GACxBkG,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGnFgB,EAAG,CACDnB,SAAU,IACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,IAAIrE,EAAgB,SAAUjJ,GAC5B,OAAOA,EAAQ,GAGjB,OAAQ2M,GAEN,IAAK,IACH,OAAOwF,GAAoBF,EAAuBlK,EAAQkB,GAG5D,IAAK,KACH,OAAOqJ,GAAa,EAAGvK,EAAQkB,GAGjC,IAAK,KACH,OAAOb,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,QACN3K,cAAeA,IAInB,IAAK,MACH,OAAOb,EAAM0D,MAAM/D,EAAQ,CACzBhB,MAAO,cACPO,QAAS,gBACLc,EAAM0D,MAAM/D,EAAQ,CACxBhB,MAAO,SACPO,QAAS,eAIb,IAAK,QACH,OAAOc,EAAM0D,MAAM/D,EAAQ,CACzBhB,MAAO,SACPO,QAAS,eAIb,IAAK,OACL,QACE,OAAOc,EAAM0D,MAAM/D,EAAQ,CACzBhB,MAAO,OACPO,QAAS,gBACLc,EAAM0D,MAAM/D,EAAQ,CACxBhB,MAAO,cACPO,QAAS,gBACLc,EAAM0D,MAAM/D,EAAQ,CACxBhB,MAAO,SACPO,QAAS,iBAIjBuM,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,IAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAGlC,OAFApH,EAAKoO,YAAYtU,EAAO,GACxBkG,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGnFiB,EAAG,CACDpB,SAAU,IACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACH,OAAOwF,GAAoBF,EAAsBlK,GAEnD,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,SAGV,QACE,OAAOtB,GAAa3F,EAAMjJ,OAAQqE,KAGxC8L,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,IAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAO8G,GAClC,OAAO+I,EC/pBE,SAAoB7J,EAAW2O,EAAW7N,IACvDzB,OAAa,EAAGY,WAChB,IAAIC,GAAOC,OAAOH,GACd4O,GAAOnP,OAAUkP,GACjBzE,EAAO8B,EAAW9L,EAAMY,GAAW8N,EAEvC,OADA1O,EAAKiK,WAAWjK,EAAKkK,aAAsB,EAAPF,GAC7BhK,EDypBmB2O,CAAW3O,EAAMlG,EAAO8G,GAAUA,IAE1D2M,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGnFqB,EAAG,CACDxB,SAAU,IACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACH,OAAOwF,GAAoBF,EAAsBlK,GAEnD,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,SAGV,QACE,OAAOtB,GAAa3F,EAAMjJ,OAAQqE,KAGxC8L,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,IAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAO8G,GAClC,OAAOuK,EExrBE,SAAuBrL,EAAW+O,IAC/C1P,OAAa,EAAGY,WAChB,IAAIC,GAAOC,OAAOH,GACdgP,GAAUvP,OAAUsP,GACpB7E,EAAO0B,EAAc1L,GAAQ8O,EAEjC,OADA9O,EAAKiK,WAAWjK,EAAKkK,aAAsB,EAAPF,GAC7BhK,EFkrBsB+O,CAAc/O,EAAMlG,EAAO8G,GAAUA,IAEhE2M,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGxFyB,EAAG,CACD5B,SAAU,GACV6B,YAAa,EACb5B,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACH,OAAOwF,GAAoBF,EAAsBlK,GAEnD,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,SAGV,QACE,OAAOtB,GAAa3F,EAAMjJ,OAAQqE,KAGxC8L,SAAU,SAAU3N,EAAMlG,EAAOsN,GAC/B,IACI8H,EAAahC,GADNlN,EAAKsK,kBAEZ1E,EAAQ5F,EAAKmP,cAEjB,OAAID,EACKpV,GAAS,GAAKA,GAASmT,GAAwBrH,GAE/C9L,GAAS,GAAKA,GAASkT,GAAcpH,IAGhD/J,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAGlC,OAFApH,EAAKiK,WAAWnQ,GAChBkG,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAG9E6B,EAAG,CACDhC,SAAU,GACV6B,YAAa,EACb5B,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACL,IAAK,KACH,OAAOwF,GAAoBF,EAA2BlK,GAExD,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,SAGV,QACE,OAAOtB,GAAa3F,EAAMjJ,OAAQqE,KAGxC8L,SAAU,SAAU3N,EAAMlG,EAAOsN,GAI/B,OAFiB8F,GADNlN,EAAKsK,kBAIPxQ,GAAS,GAAKA,GAAS,IAEvBA,GAAS,GAAKA,GAAS,KAGlC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAGlC,OAFApH,EAAKoO,YAAY,EAAGtU,GACpBkG,EAAKmK,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAG7F8B,EAAG,CACDjC,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOvE,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,cACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,QACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,SACPO,QAAS,eAIb,IAAK,QACH,OAAOc,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,SACPO,QAAS,eAIb,IAAK,SACH,OAAOc,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,QACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,SACPO,QAAS,eAIb,IAAK,OACL,QACE,OAAOc,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,OACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,cACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,QACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,SACPO,QAAS,iBAIjBuM,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,GAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAO8G,GAGlC,OAFAZ,EAAO8K,EAAU9K,EAAMlG,EAAO8G,IACzBuJ,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAGhD+B,EAAG,CACDlC,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOtB,GACrC,IAAImC,EAAgB,SAAUjJ,GAC5B,IAAIyV,EAA8C,EAA9B3Q,KAAKC,OAAO/E,EAAQ,GAAK,GAC7C,OAAQA,EAAQ8G,EAAQ6G,aAAe,GAAK,EAAI8H,GAGlD,OAAQ9I,GAEN,IAAK,IACL,IAAK,KAEH,OAAO2F,GAAa3F,EAAMjJ,OAAQqE,EAAQkB,GAG5C,IAAK,KACH,OAAOb,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,MACN3K,cAAeA,IAInB,IAAK,MACH,OAAOb,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,cACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,QACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,SACPO,QAAS,eAIb,IAAK,QACH,OAAOc,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,SACPO,QAAS,eAIb,IAAK,SACH,OAAOc,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,QACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,SACPO,QAAS,eAIb,IAAK,OACL,QACE,OAAOc,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,OACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,cACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,QACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,SACPO,QAAS,iBAIjBuM,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,GAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAO8G,GAGlC,OAFAZ,EAAO8K,EAAU9K,EAAMlG,EAAO8G,IACzBuJ,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAG7FiC,EAAG,CACDpC,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOtB,GACrC,IAAImC,EAAgB,SAAUjJ,GAC5B,IAAIyV,EAA8C,EAA9B3Q,KAAKC,OAAO/E,EAAQ,GAAK,GAC7C,OAAQA,EAAQ8G,EAAQ6G,aAAe,GAAK,EAAI8H,GAGlD,OAAQ9I,GAEN,IAAK,IACL,IAAK,KAEH,OAAO2F,GAAa3F,EAAMjJ,OAAQqE,EAAQkB,GAG5C,IAAK,KACH,OAAOb,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,MACN3K,cAAeA,IAInB,IAAK,MACH,OAAOb,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,cACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,QACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,SACPO,QAAS,eAIb,IAAK,QACH,OAAOc,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,SACPO,QAAS,eAIb,IAAK,SACH,OAAOc,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,QACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,SACPO,QAAS,eAIb,IAAK,OACL,QACE,OAAOc,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,OACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,cACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,QACPO,QAAS,gBACLc,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,SACPO,QAAS,iBAIjBuM,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,GAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAO8G,GAGlC,OAFAZ,EAAO8K,EAAU9K,EAAMlG,EAAO8G,IACzBuJ,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAG7FkC,EAAG,CACDrC,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,IAAIrE,EAAgB,SAAUjJ,GAC5B,OAAc,IAAVA,EACK,EAGFA,GAGT,OAAQ2M,GAEN,IAAK,IACL,IAAK,KAEH,OAAO2F,GAAa3F,EAAMjJ,OAAQqE,GAGpC,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,QAIV,IAAK,MACH,OAAOxL,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,cACPO,QAAS,aACT2B,cAAeA,KACXb,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,QACPO,QAAS,aACT2B,cAAeA,KACXb,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,SACPO,QAAS,aACT2B,cAAeA,IAInB,IAAK,QACH,OAAOb,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,SACPO,QAAS,aACT2B,cAAeA,IAInB,IAAK,SACH,OAAOb,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,QACPO,QAAS,aACT2B,cAAeA,KACXb,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,SACPO,QAAS,aACT2B,cAAeA,IAInB,IAAK,OACL,QACE,OAAOb,EAAM2D,IAAIhE,EAAQ,CACvBhB,MAAO,OACPO,QAAS,aACT2B,cAAeA,KACXb,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,cACPO,QAAS,aACT2B,cAAeA,KACXb,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,QACPO,QAAS,aACT2B,cAAeA,KACXb,EAAM2D,IAAIhE,EAAQ,CACtBhB,MAAO,SACPO,QAAS,aACT2B,cAAeA,MAIvB4K,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,GAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAO8G,GAGlC,OAFAZ,EG/jCS,SAAsBF,EAAWiL,IAC9C5L,OAAa,EAAGY,WAChB,IAAI8F,GAAMtG,OAAUwL,GAEhBlF,EAAM,GAAM,IACdA,GAAY,GAGd,IAAI4B,EAAe,EACfzH,GAAOC,OAAOH,GACdkL,EAAahL,EAAK+J,YAGlBC,IAFYnE,EAAM,EACM,GAAK,EACV4B,EAAe,EAAI,GAAK5B,EAAMmF,EAErD,OADAhL,EAAKiK,WAAWjK,EAAKkK,aAAeF,GAC7BhK,EHgjCI0P,CAAa1P,EAAMlG,EAAO8G,IAC5BuJ,YAAY,EAAG,EAAG,EAAG,GACnBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAG7FoC,EAAG,CACDvC,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOvE,EAAM4D,UAAUjE,EAAQ,CAC7BhB,MAAO,cACPO,QAAS,gBACLc,EAAM4D,UAAUjE,EAAQ,CAC5BhB,MAAO,SACPO,QAAS,eAGb,IAAK,QACH,OAAOc,EAAM4D,UAAUjE,EAAQ,CAC7BhB,MAAO,SACPO,QAAS,eAGb,IAAK,OACL,QACE,OAAOc,EAAM4D,UAAUjE,EAAQ,CAC7BhB,MAAO,OACPO,QAAS,gBACLc,EAAM4D,UAAUjE,EAAQ,CAC5BhB,MAAO,cACPO,QAAS,gBACLc,EAAM4D,UAAUjE,EAAQ,CAC5BhB,MAAO,SACPO,QAAS,iBAIjBvF,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAElC,OADApH,EAAKmK,YAAYqC,GAAqB1S,GAAQ,EAAG,EAAG,GAC7CkG,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGrDqC,EAAG,CACDxC,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOvE,EAAM4D,UAAUjE,EAAQ,CAC7BhB,MAAO,cACPO,QAAS,gBACLc,EAAM4D,UAAUjE,EAAQ,CAC5BhB,MAAO,SACPO,QAAS,eAGb,IAAK,QACH,OAAOc,EAAM4D,UAAUjE,EAAQ,CAC7BhB,MAAO,SACPO,QAAS,eAGb,IAAK,OACL,QACE,OAAOc,EAAM4D,UAAUjE,EAAQ,CAC7BhB,MAAO,OACPO,QAAS,gBACLc,EAAM4D,UAAUjE,EAAQ,CAC5BhB,MAAO,cACPO,QAAS,gBACLc,EAAM4D,UAAUjE,EAAQ,CAC5BhB,MAAO,SACPO,QAAS,iBAIjBvF,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAElC,OADApH,EAAKmK,YAAYqC,GAAqB1S,GAAQ,EAAG,EAAG,GAC7CkG,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGrDsC,EAAG,CACDzC,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOvE,EAAM4D,UAAUjE,EAAQ,CAC7BhB,MAAO,cACPO,QAAS,gBACLc,EAAM4D,UAAUjE,EAAQ,CAC5BhB,MAAO,SACPO,QAAS,eAGb,IAAK,QACH,OAAOc,EAAM4D,UAAUjE,EAAQ,CAC7BhB,MAAO,SACPO,QAAS,eAGb,IAAK,OACL,QACE,OAAOc,EAAM4D,UAAUjE,EAAQ,CAC7BhB,MAAO,OACPO,QAAS,gBACLc,EAAM4D,UAAUjE,EAAQ,CAC5BhB,MAAO,cACPO,QAAS,gBACLc,EAAM4D,UAAUjE,EAAQ,CAC5BhB,MAAO,SACPO,QAAS,iBAIjBvF,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAElC,OADApH,EAAKmK,YAAYqC,GAAqB1S,GAAQ,EAAG,EAAG,GAC7CkG,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,MAGtCuC,EAAG,CACD1C,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACH,OAAOwF,GAAoBF,EAAyBlK,GAEtD,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,SAGV,QACE,OAAOtB,GAAa3F,EAAMjJ,OAAQqE,KAGxC8L,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,IAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAClC,IAAI2I,EAAO/P,EAAKgQ,eAAiB,GAUjC,OARID,GAAQjW,EAAQ,GAClBkG,EAAKmK,YAAYrQ,EAAQ,GAAI,EAAG,EAAG,GACzBiW,GAAkB,KAAVjW,EAGlBkG,EAAKmK,YAAYrQ,EAAO,EAAG,EAAG,GAF9BkG,EAAKmK,YAAY,EAAG,EAAG,EAAG,GAKrBnK,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,MAG3C0C,EAAG,CACD7C,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACH,OAAOwF,GAAoBF,EAAyBlK,GAEtD,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,SAGV,QACE,OAAOtB,GAAa3F,EAAMjJ,OAAQqE,KAGxC8L,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,IAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAElC,OADApH,EAAKmK,YAAYrQ,EAAO,EAAG,EAAG,GACvBkG,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGrD2C,EAAG,CACD9C,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACH,OAAOwF,GAAoBF,EAAyBlK,GAEtD,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,SAGV,QACE,OAAOtB,GAAa3F,EAAMjJ,OAAQqE,KAGxC8L,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,IAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GASlC,OARWpH,EAAKgQ,eAAiB,IAErBlW,EAAQ,GAClBkG,EAAKmK,YAAYrQ,EAAQ,GAAI,EAAG,EAAG,GAEnCkG,EAAKmK,YAAYrQ,EAAO,EAAG,EAAG,GAGzBkG,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGrD4C,EAAG,CACD/C,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACH,OAAOwF,GAAoBF,EAAyBlK,GAEtD,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,SAGV,QACE,OAAOtB,GAAa3F,EAAMjJ,OAAQqE,KAGxC8L,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,IAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAClC,IAAIgJ,EAAQtW,GAAS,GAAKA,EAAQ,GAAKA,EAEvC,OADAkG,EAAKmK,YAAYiG,EAAO,EAAG,EAAG,GACvBpQ,GAETuN,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGrD8C,EAAG,CACDjD,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACH,OAAOwF,GAAoBF,EAAwBlK,GAErD,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,WAGV,QACE,OAAOtB,GAAa3F,EAAMjJ,OAAQqE,KAGxC8L,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,IAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAElC,OADApH,EAAKsQ,cAAcxW,EAAO,EAAG,GACtBkG,GAETuN,mBAAoB,CAAC,IAAK,MAG5BgD,EAAG,CACDnD,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOvE,EAAOkF,GACrC,OAAQX,GACN,IAAK,IACH,OAAOwF,GAAoBF,EAAwBlK,GAErD,IAAK,KACH,OAAOK,EAAMmD,cAAcxD,EAAQ,CACjC6L,KAAM,WAGV,QACE,OAAOtB,GAAa3F,EAAMjJ,OAAQqE,KAGxC8L,SAAU,SAAUzG,EAAOpN,EAAOsN,GAChC,OAAOtN,GAAS,GAAKA,GAAS,IAEhC+B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAElC,OADApH,EAAKwQ,cAAc1W,EAAO,GACnBkG,GAETuN,mBAAoB,CAAC,IAAK,MAG5BkD,EAAG,CACDrD,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOsH,EAAQ3G,GAKtC,OAAOgF,GAAa3F,EAAMjJ,OAAQqE,GAJd,SAAU/H,GAC5B,OAAO8E,KAAKC,MAAM/E,EAAQ8E,KAAK8R,IAAI,GAAoB,EAAfjK,EAAMjJ,aAKlD3B,IAAK,SAAUmE,EAAMgO,EAAQlU,EAAOsN,GAElC,OADApH,EAAK2Q,mBAAmB7W,GACjBkG,GAETuN,mBAAoB,CAAC,IAAK,MAG5BqD,EAAG,CACDxD,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOsH,EAAQ3G,GACtC,OAAQX,GACN,IAAK,IACH,OAAOyF,GAAqBF,GAAuCnK,GAErE,IAAK,KACH,OAAOqK,GAAqBF,GAAwBnK,GAEtD,IAAK,OACH,OAAOqK,GAAqBF,GAAuCnK,GAErE,IAAK,QACH,OAAOqK,GAAqBF,GAA0CnK,GAExE,IAAK,MACL,QACE,OAAOqK,GAAqBF,GAA2BnK,KAG7DhG,IAAK,SAAUmE,EAAMsN,EAAOxT,EAAOsN,GACjC,OAAIkG,EAAMuD,eACD7Q,EAGF,IAAIgI,KAAKhI,EAAKS,UAAY3G,IAEnCyT,mBAAoB,CAAC,IAAK,IAAK,MAGjCuD,EAAG,CACD1D,SAAU,GACVC,MAAO,SAAUxL,EAAQ4E,EAAOsH,EAAQ3G,GACtC,OAAQX,GACN,IAAK,IACH,OAAOyF,GAAqBF,GAAuCnK,GAErE,IAAK,KACH,OAAOqK,GAAqBF,GAAwBnK,GAEtD,IAAK,OACH,OAAOqK,GAAqBF,GAAuCnK,GAErE,IAAK,QACH,OAAOqK,GAAqBF,GAA0CnK,GAExE,IAAK,MACL,QACE,OAAOqK,GAAqBF,GAA2BnK,KAG7DhG,IAAK,SAAUmE,EAAMsN,EAAOxT,EAAOsN,GACjC,OAAIkG,EAAMuD,eACD7Q,EAGF,IAAIgI,KAAKhI,EAAKS,UAAY3G,IAEnCyT,mBAAoB,CAAC,IAAK,IAAK,MAGjCwD,EAAG,CACD3D,SAAU,GACVC,MAAO,SAAUxL,EAAQmP,EAAQjD,EAAQ3G,GACvC,OAAO+E,GAAqBtK,IAE9BhG,IAAK,SAAUqL,EAAO8G,EAAQlU,EAAOsN,GACnC,MAAO,CAAC,IAAIY,KAAa,IAARlO,GAAe,CAC9B+W,gBAAgB,KAGpBtD,mBAAoB,KAGtB0D,EAAG,CACD7D,SAAU,GACVC,MAAO,SAAUxL,EAAQmP,EAAQjD,EAAQ3G,GACvC,OAAO+E,GAAqBtK,IAE9BhG,IAAK,SAAUqL,EAAO8G,EAAQlU,EAAOsN,GACnC,MAAO,CAAC,IAAIY,KAAKlO,GAAQ,CACvB+W,gBAAgB,KAGpBtD,mBAAoB,MIr8CpB2D,GAAyB,wDAGzBC,GAA6B,oCAC7BC,GAAsB,eACtBC,GAAoB,MACpBC,GAAsB,KACtBC,GAAgC,WA+TrB,SAASlE,GAAMmE,EAAiBC,EAAmBC,EAAoB/Q,IACpFxB,OAAa,EAAGY,WAChB,IAAI4R,EAAa7Q,OAAO0Q,GACpBI,EAAe9Q,OAAO2Q,GACtB7Q,EAAUD,GAAgB,GAC1BiJ,EAAShJ,EAAQgJ,QAAUiI,EAE/B,IAAKjI,EAAO1H,MACV,MAAM,IAAIwH,WAAW,sCAGvB,IAAIa,EAA8BX,EAAOhJ,SAAWgJ,EAAOhJ,QAAQ8G,sBAC/D8C,EAA8D,MAA/BD,EAAsC,GAAIhL,OAAUgL,GACnF7C,EAAyD,MAAjC9G,EAAQ8G,sBAAgC8C,GAA+BjL,OAAUqB,EAAQ8G,uBAErH,KAAMA,GAAyB,GAAKA,GAAyB,GAC3D,MAAM,IAAIgC,WAAW,6DAGvB,IAAIG,EAAqBD,EAAOhJ,SAAWgJ,EAAOhJ,QAAQ6G,aACtDqC,EAA4C,MAAtBD,EAA6B,GAAItK,OAAUsK,GACjEpC,EAAuC,MAAxB7G,EAAQ6G,aAAuBqC,GAAsBvK,OAAUqB,EAAQ6G,cAE1F,KAAMA,GAAgB,GAAKA,GAAgB,GACzC,MAAM,IAAIiC,WAAW,oDAGvB,GAAqB,KAAjBkI,EACF,MAAmB,KAAfD,GACK1R,OAAOyR,GAEP,IAAI1J,KAAKvI,KAIpB,IAYIgQ,EAZAqC,EAAe,CACjBpK,sBAAuBA,EACvBD,aAAcA,EACdmC,OAAQA,GAGNmI,EAAU,CAAC,CACb3E,SA5XyB,GA6XzB6B,aAAc,EACdpT,IAAKmW,GACLxK,MAAO,IAGLyK,EAASL,EAAa1P,MAAMiP,IAA4BlW,KAAI,SAAUiX,GACxE,IAAIC,EAAiBD,EAAU,GAE/B,MAAuB,MAAnBC,GAA6C,MAAnBA,GAErBC,EADaC,EAAeF,IACdD,EAAWtI,EAAO5C,WAAY8K,GAG9CI,KACNjT,KAAK,IAAIiD,MAAMgP,IACdoB,EAAa,GAEjB,IAAK7C,EAAI,EAAGA,EAAIwC,EAAOzU,OAAQiS,IAAK,CAClC,IAAIhJ,EAAQwL,EAAOxC,IAEd7O,EAAQ2R,6BAA+BjJ,EAAyB7C,IACnE8C,EAAoB9C,EAAOmL,EAAcJ,IAGtC5Q,EAAQ4R,8BAAgCpJ,EAA0B3C,IACrE8C,EAAoB9C,EAAOmL,EAAcJ,GAG3C,IAAIW,EAAiB1L,EAAM,GACvBgM,EAASC,GAAQP,GAErB,GAAIM,EAAQ,CACV,IAAIlF,EAAqBkF,EAAOlF,mBAEhC,GAAIrP,MAAMyU,QAAQpF,GAAqB,CAGrC,IAFA,IAAIqF,OAAoB,EAEfC,EAAK,EAAGA,EAAKP,EAAW9U,OAAQqV,IAAM,CAC7C,IAAIC,EAAYR,EAAWO,GAAIpM,MAE/B,IAA+C,IAA3C8G,EAAmBlE,QAAQyJ,IAAqBA,IAAcX,EAAgB,CAChFS,EAAoBN,EAAWO,GAC/B,OAIJ,GAAID,EACF,MAAM,IAAIlJ,WAAW,sCAAsCtL,OAAOwU,EAAkBG,UAAW,WAAW3U,OAAOqI,EAAO,4BAErH,GAAkC,MAA9BgM,EAAOlF,oBAA8B+E,EAAW9U,OACzD,MAAM,IAAIkM,WAAW,sCAAsCtL,OAAOqI,EAAO,2CAG3E6L,EAAWU,KAAK,CACdvM,MAAO0L,EACPY,UAAWtM,IAEb,IAAIvD,EAAcuP,EAAOpF,MAAMsE,EAAYlL,EAAOmD,EAAO1H,MAAO4P,GAEhE,IAAK5O,EACH,OAAO,IAAI8E,KAAKvI,KAGlBsS,EAAQiB,KAAK,CACX5F,SAAUqF,EAAOrF,SACjB6B,YAAawD,EAAOxD,aAAe,EACnCpT,IAAK4W,EAAO5W,IACZ8R,SAAU8E,EAAO9E,SACjB7T,MAAOoJ,EAAYpJ,MACnB0N,MAAOuK,EAAQvU,SAEjBmU,EAAazO,EAAYF,SACpB,CACL,GAAImP,EAAejQ,MAAMqP,IACvB,MAAM,IAAI7H,WAAW,iEAAmEyI,EAAiB,KAW3G,GAPc,OAAV1L,EACFA,EAAQ,IACoB,MAAnB0L,IACT1L,EAAQwM,GAAmBxM,IAIK,IAA9BkL,EAAWtI,QAAQ5C,GAGrB,OAAO,IAAIuB,KAAKvI,KAFhBkS,EAAaA,EAAWtW,MAAMoL,EAAMjJ,SAQ1C,GAAImU,EAAWnU,OAAS,GAAK8T,GAAoB5O,KAAKiP,GACpD,OAAO,IAAI3J,KAAKvI,KAGlB,IAAIyT,EAAwBnB,EAAQ9W,KAAI,SAAUkY,GAChD,OAAOA,EAAO/F,YACbgG,MAAK,SAAUzD,EAAGC,GACnB,OAAOA,EAAID,KACV0D,QAAO,SAAUjG,EAAU5F,EAAOjF,GACnC,OAAOA,EAAM8G,QAAQ+D,KAAc5F,KAClCvM,KAAI,SAAUmS,GACf,OAAO2E,EAAQsB,QAAO,SAAUF,GAC9B,OAAOA,EAAO/F,WAAaA,KAC1BgG,MAAK,SAAUzD,EAAGC,GACnB,OAAOA,EAAEX,YAAcU,EAAEV,kBAE1BhU,KAAI,SAAUqY,GACf,OAAOA,EAAY,MAEjBtT,GAAOC,OAAOyR,GAElB,GAAI/R,MAAMK,GACR,OAAO,IAAIgI,KAAKvI,KAMlB,IAAI8T,EAAUtL,EAAgBjI,EAAM6I,EAAgC7I,IAChEsN,EAAQ,GAEZ,IAAKmC,EAAI,EAAGA,EAAIyD,EAAsB1V,OAAQiS,IAAK,CACjD,IAAI0D,EAASD,EAAsBzD,GAEnC,GAAI0D,EAAOxF,WAAawF,EAAOxF,SAAS4F,EAASJ,EAAOrZ,MAAOgY,GAC7D,OAAO,IAAI9J,KAAKvI,KAGlB,IAAIkH,EAASwM,EAAOtX,IAAI0X,EAASjG,EAAO6F,EAAOrZ,MAAOgY,GAElDnL,EAAO,IACT4M,EAAU5M,EAAO,GACjBrM,EAAOgT,EAAO3G,EAAO,KAErB4M,EAAU5M,EAId,OAAO4M,EAGT,SAASvB,GAAqBhS,EAAMsN,GAClC,GAAIA,EAAMuD,eACR,OAAO7Q,EAGT,IAAIwT,EAAgB,IAAIxL,KAAK,GAG7B,OAFAwL,EAAcC,YAAYzT,EAAKsK,iBAAkBtK,EAAKmP,cAAenP,EAAKkK,cAC1EsJ,EAActT,SAASF,EAAKgQ,cAAehQ,EAAK0T,gBAAiB1T,EAAK2T,gBAAiB3T,EAAK4T,sBACrFJ,EAGT,SAASP,GAAmBxJ,GAC1B,OAAOA,EAAMvH,MAAMkP,IAAqB,GAAGtK,QAAQuK,GAAmB,O,0FC3gBzD,SAAS9Q,EAAWT,IACjCX,OAAa,EAAGY,WAChB,IAAIC,GAAOC,OAAOH,GAElB,OADAE,EAAKE,SAAS,EAAG,EAAG,EAAG,GAChBF,I,gFCGM,SAASC,EAAO4T,IAC7B1U,OAAa,EAAGY,WAChB,IAAI+T,EAASzZ,OAAO8D,UAAUZ,SAAS+E,KAAKuR,GAE5C,OAAIA,aAAoB7L,MAA4B,iBAAb6L,GAAoC,kBAAXC,EAEvD,IAAI9L,KAAK6L,EAASpT,WACI,iBAAboT,GAAoC,oBAAXC,EAClC,IAAI9L,KAAK6L,IAES,iBAAbA,GAAoC,oBAAXC,GAAoD,oBAAZC,UAE3EA,QAAQC,KAAK,oJAEbD,QAAQC,MAAK,IAAIha,OAAQI,QAGpB,IAAI4N,KAAKvI,Q,kCChDZ,EAAQ,KAIhBwU,CAAE,CAAEnX,OAAQ,MAAOoX,OAAO,EAAMC,YAAY,GAAQ,CAClDC,OAAQ,WACN,OAAOC,IAAIlW,UAAUZ,SAAS+E,KAAKgS","file":"4dac6b29fa73b28bbebf.bundle.js","sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    standalone: {\n      one: 'weniger als eine Sekunde',\n      other: 'weniger als {{count}} Sekunden'\n    },\n    withPreposition: {\n      one: 'weniger als einer Sekunde',\n      other: 'weniger als {{count}} Sekunden'\n    }\n  },\n  xSeconds: {\n    standalone: {\n      one: 'eine Sekunde',\n      other: '{{count}} Sekunden'\n    },\n    withPreposition: {\n      one: 'einer Sekunde',\n      other: '{{count}} Sekunden'\n    }\n  },\n  halfAMinute: {\n    standalone: 'eine halbe Minute',\n    withPreposition: 'einer halben Minute'\n  },\n  lessThanXMinutes: {\n    standalone: {\n      one: 'weniger als eine Minute',\n      other: 'weniger als {{count}} Minuten'\n    },\n    withPreposition: {\n      one: 'weniger als einer Minute',\n      other: 'weniger als {{count}} Minuten'\n    }\n  },\n  xMinutes: {\n    standalone: {\n      one: 'eine Minute',\n      other: '{{count}} Minuten'\n    },\n    withPreposition: {\n      one: 'einer Minute',\n      other: '{{count}} Minuten'\n    }\n  },\n  aboutXHours: {\n    standalone: {\n      one: 'etwa eine Stunde',\n      other: 'etwa {{count}} Stunden'\n    },\n    withPreposition: {\n      one: 'etwa einer Stunde',\n      other: 'etwa {{count}} Stunden'\n    }\n  },\n  xHours: {\n    standalone: {\n      one: 'eine Stunde',\n      other: '{{count}} Stunden'\n    },\n    withPreposition: {\n      one: 'einer Stunde',\n      other: '{{count}} Stunden'\n    }\n  },\n  xDays: {\n    standalone: {\n      one: 'ein Tag',\n      other: '{{count}} Tage'\n    },\n    withPreposition: {\n      one: 'einem Tag',\n      other: '{{count}} Tagen'\n    }\n  },\n  aboutXWeeks: {\n    standalone: {\n      one: 'etwa ein Woche',\n      other: 'etwa {{count}} Wochen'\n    },\n    withPreposition: {\n      one: 'etwa einem Woche',\n      other: 'etwa {{count}} Wochen'\n    }\n  },\n  xWeeks: {\n    standalone: {\n      one: 'ein Woche',\n      other: '{{count}} Wochen'\n    },\n    withPreposition: {\n      one: 'einem Woche',\n      other: '{{count}} Wochen'\n    }\n  },\n  aboutXMonths: {\n    standalone: {\n      one: 'etwa ein Monat',\n      other: 'etwa {{count}} Monate'\n    },\n    withPreposition: {\n      one: 'etwa einem Monat',\n      other: 'etwa {{count}} Monaten'\n    }\n  },\n  xMonths: {\n    standalone: {\n      one: 'ein Monat',\n      other: '{{count}} Monate'\n    },\n    withPreposition: {\n      one: 'einem Monat',\n      other: '{{count}} Monaten'\n    }\n  },\n  aboutXYears: {\n    standalone: {\n      one: 'etwa ein Jahr',\n      other: 'etwa {{count}} Jahre'\n    },\n    withPreposition: {\n      one: 'etwa einem Jahr',\n      other: 'etwa {{count}} Jahren'\n    }\n  },\n  xYears: {\n    standalone: {\n      one: 'ein Jahr',\n      other: '{{count}} Jahre'\n    },\n    withPreposition: {\n      one: 'einem Jahr',\n      other: '{{count}} Jahren'\n    }\n  },\n  overXYears: {\n    standalone: {\n      one: 'mehr als ein Jahr',\n      other: 'mehr als {{count}} Jahre'\n    },\n    withPreposition: {\n      one: 'mehr als einem Jahr',\n      other: 'mehr als {{count}} Jahren'\n    }\n  },\n  almostXYears: {\n    standalone: {\n      one: 'fast ein Jahr',\n      other: 'fast {{count}} Jahre'\n    },\n    withPreposition: {\n      one: 'fast einem Jahr',\n      other: 'fast {{count}} Jahren'\n    }\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var usageGroup = options.addSuffix ? formatDistanceLocale[token].withPreposition : formatDistanceLocale[token].standalone;\n  var result;\n\n  if (typeof usageGroup === 'string') {\n    result = usageGroup;\n  } else if (count === 1) {\n    result = usageGroup.one;\n  } else {\n    result = usageGroup.other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return 'vor ' + result;\n    }\n  }\n\n  return result;\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js'; // DIN 5008: https://de.wikipedia.org/wiki/Datumsformat#DIN_5008\n\nvar dateFormats = {\n  full: 'EEEE, do MMMM y',\n  // Montag, 7. Januar 2018\n  long: 'do MMMM y',\n  // 7. Januar 2018\n  medium: 'do MMM. y',\n  // 7. Jan. 2018\n  short: 'dd.MM.y' // 07.01.2018\n\n};\nvar timeFormats = {\n  full: 'HH:mm:ss zzzz',\n  long: 'HH:mm:ss z',\n  medium: 'HH:mm:ss',\n  short: 'HH:mm'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'um' {{time}}\",\n  long: \"{{date}} 'um' {{time}}\",\n  medium: '{{date}} {{time}}',\n  short: '{{date}} {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'letzten' eeee 'um' p\",\n  yesterday: \"'gestern um' p\",\n  today: \"'heute um' p\",\n  tomorrow: \"'morgen um' p\",\n  nextWeek: \"eeee 'um' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['v.Chr.', 'n.Chr.'],\n  abbreviated: ['v.Chr.', 'n.Chr.'],\n  wide: ['vor Christus', 'nach Christus']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1. Quartal', '2. Quartal', '3. Quartal', '4. Quartal'] // Note: in German, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n  wide: ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'D', 'M', 'D', 'F', 'S'],\n  short: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n  abbreviated: ['So.', 'Mo.', 'Di.', 'Mi.', 'Do.', 'Fr.', 'Sa.'],\n  wide: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'] // https://www.unicode.org/cldr/charts/32/summary/de.html#1881\n\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'vm.',\n    pm: 'nm.',\n    midnight: 'Mitternacht',\n    noon: 'Mittag',\n    morning: 'Morgen',\n    afternoon: 'Nachm.',\n    evening: 'Abend',\n    night: 'Nacht'\n  },\n  abbreviated: {\n    am: 'vorm.',\n    pm: 'nachm.',\n    midnight: 'Mitternacht',\n    noon: 'Mittag',\n    morning: 'Morgen',\n    afternoon: 'Nachmittag',\n    evening: 'Abend',\n    night: 'Nacht'\n  },\n  wide: {\n    am: 'vormittags',\n    pm: 'nachmittags',\n    midnight: 'Mitternacht',\n    noon: 'Mittag',\n    morning: 'Morgen',\n    afternoon: 'Nachmittag',\n    evening: 'Abend',\n    night: 'Nacht'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'vm.',\n    pm: 'nm.',\n    midnight: 'Mitternacht',\n    noon: 'Mittag',\n    morning: 'morgens',\n    afternoon: 'nachm.',\n    evening: 'abends',\n    night: 'nachts'\n  },\n  abbreviated: {\n    am: 'vorm.',\n    pm: 'nachm.',\n    midnight: 'Mitternacht',\n    noon: 'Mittag',\n    morning: 'morgens',\n    afternoon: 'nachmittags',\n    evening: 'abends',\n    night: 'nachts'\n  },\n  wide: {\n    am: 'vormittags',\n    pm: 'nachmittags',\n    midnight: 'Mitternacht',\n    noon: 'Mittag',\n    morning: 'morgens',\n    afternoon: 'nachmittags',\n    evening: 'abends',\n    night: 'nachts'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber);\n  return number + '.';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary German locale.\n * @language German\n * @iso-639-2 deu\n * @author Thomas Eilmsteiner [@DeMuu]{@link https://github.com/DeMuu}\n * @author Asia [@asia-t]{@link https://github.com/asia-t}\n * @author Van Vuong Ngo [@vanvuongngo]{@link https://github.com/vanvuongngo}\n * @author RomanErnst [@pex]{@link https://github.com/pex}\n * @author Philipp Keck [@Philipp91]{@link https://github.com/Philipp91}\n */\n\nvar locale = {\n  code: 'de',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1\n    /* Monday */\n    ,\n    firstWeekContainsDate: 4\n  }\n};\nexport default locale;","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(\\.)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(v\\.? ?Chr\\.?|n\\.? ?Chr\\.?)/i,\n  abbreviated: /^(v\\.? ?Chr\\.?|n\\.? ?Chr\\.?)/i,\n  wide: /^(vor Christus|vor unserer Zeitrechnung|nach Christus|unserer Zeitrechnung)/i\n};\nvar parseEraPatterns = {\n  any: [/^v/i, /^n/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](\\.)? Quartal/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mär|apr|mai|jun|jul|aug|sep|okt|nov|dez)/i,\n  wide: /^(januar|februar|märz|april|mai|juni|juli|august|september|oktober|november|dezember)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mär/i, /^ap/i, /^mai/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smdmf]/i,\n  short: /^(so|mo|di|mi|do|fr|sa)/i,\n  abbreviated: /^(son?|mon?|die?|mit?|don?|fre?|sam?)\\.?/i,\n  wide: /^(sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag)/i\n};\nvar parseDayPatterns = {\n  any: [/^so/i, /^mo/i, /^di/i, /^mi/i, /^do/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(vm\\.?|nm\\.?|Mitternacht|Mittag|morgens|nachm\\.?|abends|nachts)/i,\n  abbreviated: /^(vorm\\.?|nachm\\.?|Mitternacht|Mittag|morgens|nachm\\.?|abends|nachts)/i,\n  wide: /^(vormittags|nachmittags|Mitternacht|Mittag|morgens|nachmittags|abends|nachts)/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^v/i,\n    pm: /^n/i,\n    midnight: /^Mitte/i,\n    noon: /^Mitta/i,\n    morning: /morgens/i,\n    afternoon: /nachmittags/i,\n    // will never be matched. Afternoon is matched by `pm`\n    evening: /abends/i,\n    night: /nachts/i // will never be matched. Night is matched by `pm`\n\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCWeek from '../getUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport assign from '../_lib/assign/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport parsers from './_lib/parsers/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   toDate('2016-01-01')\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","'use strict';\nvar $ = require('../internals/export');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return URL.prototype.toString.call(this);\n  }\n});\n"],"sourceRoot":""}